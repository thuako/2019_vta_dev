// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="compute,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=7.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.486687,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=77,HLS_SYN_DSP=138,HLS_SYN_FF=14995,HLS_SYN_LUT=30709,HLS_VERSION=2019_2}" *)

module compute (
        ap_clk,
        ap_rst_n,
        m_axi_uop_port_AWVALID,
        m_axi_uop_port_AWREADY,
        m_axi_uop_port_AWADDR,
        m_axi_uop_port_AWID,
        m_axi_uop_port_AWLEN,
        m_axi_uop_port_AWSIZE,
        m_axi_uop_port_AWBURST,
        m_axi_uop_port_AWLOCK,
        m_axi_uop_port_AWCACHE,
        m_axi_uop_port_AWPROT,
        m_axi_uop_port_AWQOS,
        m_axi_uop_port_AWREGION,
        m_axi_uop_port_AWUSER,
        m_axi_uop_port_WVALID,
        m_axi_uop_port_WREADY,
        m_axi_uop_port_WDATA,
        m_axi_uop_port_WSTRB,
        m_axi_uop_port_WLAST,
        m_axi_uop_port_WID,
        m_axi_uop_port_WUSER,
        m_axi_uop_port_ARVALID,
        m_axi_uop_port_ARREADY,
        m_axi_uop_port_ARADDR,
        m_axi_uop_port_ARID,
        m_axi_uop_port_ARLEN,
        m_axi_uop_port_ARSIZE,
        m_axi_uop_port_ARBURST,
        m_axi_uop_port_ARLOCK,
        m_axi_uop_port_ARCACHE,
        m_axi_uop_port_ARPROT,
        m_axi_uop_port_ARQOS,
        m_axi_uop_port_ARREGION,
        m_axi_uop_port_ARUSER,
        m_axi_uop_port_RVALID,
        m_axi_uop_port_RREADY,
        m_axi_uop_port_RDATA,
        m_axi_uop_port_RLAST,
        m_axi_uop_port_RID,
        m_axi_uop_port_RUSER,
        m_axi_uop_port_RRESP,
        m_axi_uop_port_BVALID,
        m_axi_uop_port_BREADY,
        m_axi_uop_port_BRESP,
        m_axi_uop_port_BID,
        m_axi_uop_port_BUSER,
        m_axi_data_port_AWVALID,
        m_axi_data_port_AWREADY,
        m_axi_data_port_AWADDR,
        m_axi_data_port_AWID,
        m_axi_data_port_AWLEN,
        m_axi_data_port_AWSIZE,
        m_axi_data_port_AWBURST,
        m_axi_data_port_AWLOCK,
        m_axi_data_port_AWCACHE,
        m_axi_data_port_AWPROT,
        m_axi_data_port_AWQOS,
        m_axi_data_port_AWREGION,
        m_axi_data_port_AWUSER,
        m_axi_data_port_WVALID,
        m_axi_data_port_WREADY,
        m_axi_data_port_WDATA,
        m_axi_data_port_WSTRB,
        m_axi_data_port_WLAST,
        m_axi_data_port_WID,
        m_axi_data_port_WUSER,
        m_axi_data_port_ARVALID,
        m_axi_data_port_ARREADY,
        m_axi_data_port_ARADDR,
        m_axi_data_port_ARID,
        m_axi_data_port_ARLEN,
        m_axi_data_port_ARSIZE,
        m_axi_data_port_ARBURST,
        m_axi_data_port_ARLOCK,
        m_axi_data_port_ARCACHE,
        m_axi_data_port_ARPROT,
        m_axi_data_port_ARQOS,
        m_axi_data_port_ARREGION,
        m_axi_data_port_ARUSER,
        m_axi_data_port_RVALID,
        m_axi_data_port_RREADY,
        m_axi_data_port_RDATA,
        m_axi_data_port_RLAST,
        m_axi_data_port_RID,
        m_axi_data_port_RUSER,
        m_axi_data_port_RRESP,
        m_axi_data_port_BVALID,
        m_axi_data_port_BREADY,
        m_axi_data_port_BRESP,
        m_axi_data_port_BID,
        m_axi_data_port_BUSER,
        gemm_queue_V_V_TDATA,
        gemm_queue_V_V_TVALID,
        gemm_queue_V_V_TREADY,
        l2g_dep_queue_V_TDATA,
        l2g_dep_queue_V_TVALID,
        l2g_dep_queue_V_TREADY,
        s2g_dep_queue_V_TDATA,
        s2g_dep_queue_V_TVALID,
        s2g_dep_queue_V_TREADY,
        g2l_dep_queue_V_TDATA,
        g2l_dep_queue_V_TVALID,
        g2l_dep_queue_V_TREADY,
        g2s_dep_queue_V_TDATA,
        g2s_dep_queue_V_TVALID,
        g2s_dep_queue_V_TREADY,
        inp_mem_V_Addr_A,
        inp_mem_V_EN_A,
        inp_mem_V_WEN_A,
        inp_mem_V_Din_A,
        inp_mem_V_Dout_A,
        inp_mem_V_Clk_A,
        inp_mem_V_Rst_A,
        wgt_mem_0_V_Addr_A,
        wgt_mem_0_V_EN_A,
        wgt_mem_0_V_WEN_A,
        wgt_mem_0_V_Din_A,
        wgt_mem_0_V_Dout_A,
        wgt_mem_0_V_Clk_A,
        wgt_mem_0_V_Rst_A,
        wgt_mem_1_V_Addr_A,
        wgt_mem_1_V_EN_A,
        wgt_mem_1_V_WEN_A,
        wgt_mem_1_V_Din_A,
        wgt_mem_1_V_Dout_A,
        wgt_mem_1_V_Clk_A,
        wgt_mem_1_V_Rst_A,
        out_mem_V_Addr_A,
        out_mem_V_EN_A,
        out_mem_V_WEN_A,
        out_mem_V_Din_A,
        out_mem_V_Dout_A,
        out_mem_V_Clk_A,
        out_mem_V_Rst_A,
        s_axi_CONTROL_BUS_AWVALID,
        s_axi_CONTROL_BUS_AWREADY,
        s_axi_CONTROL_BUS_AWADDR,
        s_axi_CONTROL_BUS_WVALID,
        s_axi_CONTROL_BUS_WREADY,
        s_axi_CONTROL_BUS_WDATA,
        s_axi_CONTROL_BUS_WSTRB,
        s_axi_CONTROL_BUS_ARVALID,
        s_axi_CONTROL_BUS_ARREADY,
        s_axi_CONTROL_BUS_ARADDR,
        s_axi_CONTROL_BUS_RVALID,
        s_axi_CONTROL_BUS_RREADY,
        s_axi_CONTROL_BUS_RDATA,
        s_axi_CONTROL_BUS_RRESP,
        s_axi_CONTROL_BUS_BVALID,
        s_axi_CONTROL_BUS_BREADY,
        s_axi_CONTROL_BUS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 43'd1;
parameter    ap_ST_fsm_state2 = 43'd2;
parameter    ap_ST_fsm_state3 = 43'd4;
parameter    ap_ST_fsm_state4 = 43'd8;
parameter    ap_ST_fsm_state5 = 43'd16;
parameter    ap_ST_fsm_state6 = 43'd32;
parameter    ap_ST_fsm_state7 = 43'd64;
parameter    ap_ST_fsm_state8 = 43'd128;
parameter    ap_ST_fsm_state9 = 43'd256;
parameter    ap_ST_fsm_pp0_stage0 = 43'd512;
parameter    ap_ST_fsm_pp0_stage1 = 43'd1024;
parameter    ap_ST_fsm_state19 = 43'd2048;
parameter    ap_ST_fsm_state20 = 43'd4096;
parameter    ap_ST_fsm_state21 = 43'd8192;
parameter    ap_ST_fsm_state22 = 43'd16384;
parameter    ap_ST_fsm_state23 = 43'd32768;
parameter    ap_ST_fsm_state24 = 43'd65536;
parameter    ap_ST_fsm_state25 = 43'd131072;
parameter    ap_ST_fsm_state26 = 43'd262144;
parameter    ap_ST_fsm_state27 = 43'd524288;
parameter    ap_ST_fsm_pp1_stage0 = 43'd1048576;
parameter    ap_ST_fsm_state38 = 43'd2097152;
parameter    ap_ST_fsm_state39 = 43'd4194304;
parameter    ap_ST_fsm_state40 = 43'd8388608;
parameter    ap_ST_fsm_state41 = 43'd16777216;
parameter    ap_ST_fsm_state42 = 43'd33554432;
parameter    ap_ST_fsm_state43 = 43'd67108864;
parameter    ap_ST_fsm_state44 = 43'd134217728;
parameter    ap_ST_fsm_state45 = 43'd268435456;
parameter    ap_ST_fsm_pp2_stage0 = 43'd536870912;
parameter    ap_ST_fsm_state50 = 43'd1073741824;
parameter    ap_ST_fsm_state51 = 43'd2147483648;
parameter    ap_ST_fsm_state52 = 43'd4294967296;
parameter    ap_ST_fsm_state53 = 43'd8589934592;
parameter    ap_ST_fsm_state54 = 43'd17179869184;
parameter    ap_ST_fsm_state55 = 43'd34359738368;
parameter    ap_ST_fsm_state56 = 43'd68719476736;
parameter    ap_ST_fsm_state57 = 43'd137438953472;
parameter    ap_ST_fsm_pp3_stage0 = 43'd274877906944;
parameter    ap_ST_fsm_state61 = 43'd549755813888;
parameter    ap_ST_fsm_state62 = 43'd1099511627776;
parameter    ap_ST_fsm_state63 = 43'd2199023255552;
parameter    ap_ST_fsm_state64 = 43'd4398046511104;
parameter    C_S_AXI_CONTROL_BUS_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_BUS_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_UOP_PORT_ID_WIDTH = 1;
parameter    C_M_AXI_UOP_PORT_ADDR_WIDTH = 32;
parameter    C_M_AXI_UOP_PORT_DATA_WIDTH = 32;
parameter    C_M_AXI_UOP_PORT_AWUSER_WIDTH = 1;
parameter    C_M_AXI_UOP_PORT_ARUSER_WIDTH = 1;
parameter    C_M_AXI_UOP_PORT_WUSER_WIDTH = 1;
parameter    C_M_AXI_UOP_PORT_RUSER_WIDTH = 1;
parameter    C_M_AXI_UOP_PORT_BUSER_WIDTH = 1;
parameter    C_M_AXI_UOP_PORT_USER_VALUE = 0;
parameter    C_M_AXI_UOP_PORT_PROT_VALUE = 0;
parameter    C_M_AXI_UOP_PORT_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_DATA_PORT_ID_WIDTH = 1;
parameter    C_M_AXI_DATA_PORT_ADDR_WIDTH = 32;
parameter    C_M_AXI_DATA_PORT_DATA_WIDTH = 64;
parameter    C_M_AXI_DATA_PORT_AWUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_PORT_ARUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_PORT_WUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_PORT_RUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_PORT_BUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_PORT_USER_VALUE = 0;
parameter    C_M_AXI_DATA_PORT_PROT_VALUE = 0;
parameter    C_M_AXI_DATA_PORT_CACHE_VALUE = 3;

parameter C_S_AXI_CONTROL_BUS_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_UOP_PORT_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_DATA_PORT_WSTRB_WIDTH = (64 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_uop_port_AWVALID;
input   m_axi_uop_port_AWREADY;
output  [C_M_AXI_UOP_PORT_ADDR_WIDTH - 1:0] m_axi_uop_port_AWADDR;
output  [C_M_AXI_UOP_PORT_ID_WIDTH - 1:0] m_axi_uop_port_AWID;
output  [7:0] m_axi_uop_port_AWLEN;
output  [2:0] m_axi_uop_port_AWSIZE;
output  [1:0] m_axi_uop_port_AWBURST;
output  [1:0] m_axi_uop_port_AWLOCK;
output  [3:0] m_axi_uop_port_AWCACHE;
output  [2:0] m_axi_uop_port_AWPROT;
output  [3:0] m_axi_uop_port_AWQOS;
output  [3:0] m_axi_uop_port_AWREGION;
output  [C_M_AXI_UOP_PORT_AWUSER_WIDTH - 1:0] m_axi_uop_port_AWUSER;
output   m_axi_uop_port_WVALID;
input   m_axi_uop_port_WREADY;
output  [C_M_AXI_UOP_PORT_DATA_WIDTH - 1:0] m_axi_uop_port_WDATA;
output  [C_M_AXI_UOP_PORT_WSTRB_WIDTH - 1:0] m_axi_uop_port_WSTRB;
output   m_axi_uop_port_WLAST;
output  [C_M_AXI_UOP_PORT_ID_WIDTH - 1:0] m_axi_uop_port_WID;
output  [C_M_AXI_UOP_PORT_WUSER_WIDTH - 1:0] m_axi_uop_port_WUSER;
output   m_axi_uop_port_ARVALID;
input   m_axi_uop_port_ARREADY;
output  [C_M_AXI_UOP_PORT_ADDR_WIDTH - 1:0] m_axi_uop_port_ARADDR;
output  [C_M_AXI_UOP_PORT_ID_WIDTH - 1:0] m_axi_uop_port_ARID;
output  [7:0] m_axi_uop_port_ARLEN;
output  [2:0] m_axi_uop_port_ARSIZE;
output  [1:0] m_axi_uop_port_ARBURST;
output  [1:0] m_axi_uop_port_ARLOCK;
output  [3:0] m_axi_uop_port_ARCACHE;
output  [2:0] m_axi_uop_port_ARPROT;
output  [3:0] m_axi_uop_port_ARQOS;
output  [3:0] m_axi_uop_port_ARREGION;
output  [C_M_AXI_UOP_PORT_ARUSER_WIDTH - 1:0] m_axi_uop_port_ARUSER;
input   m_axi_uop_port_RVALID;
output   m_axi_uop_port_RREADY;
input  [C_M_AXI_UOP_PORT_DATA_WIDTH - 1:0] m_axi_uop_port_RDATA;
input   m_axi_uop_port_RLAST;
input  [C_M_AXI_UOP_PORT_ID_WIDTH - 1:0] m_axi_uop_port_RID;
input  [C_M_AXI_UOP_PORT_RUSER_WIDTH - 1:0] m_axi_uop_port_RUSER;
input  [1:0] m_axi_uop_port_RRESP;
input   m_axi_uop_port_BVALID;
output   m_axi_uop_port_BREADY;
input  [1:0] m_axi_uop_port_BRESP;
input  [C_M_AXI_UOP_PORT_ID_WIDTH - 1:0] m_axi_uop_port_BID;
input  [C_M_AXI_UOP_PORT_BUSER_WIDTH - 1:0] m_axi_uop_port_BUSER;
output   m_axi_data_port_AWVALID;
input   m_axi_data_port_AWREADY;
output  [C_M_AXI_DATA_PORT_ADDR_WIDTH - 1:0] m_axi_data_port_AWADDR;
output  [C_M_AXI_DATA_PORT_ID_WIDTH - 1:0] m_axi_data_port_AWID;
output  [7:0] m_axi_data_port_AWLEN;
output  [2:0] m_axi_data_port_AWSIZE;
output  [1:0] m_axi_data_port_AWBURST;
output  [1:0] m_axi_data_port_AWLOCK;
output  [3:0] m_axi_data_port_AWCACHE;
output  [2:0] m_axi_data_port_AWPROT;
output  [3:0] m_axi_data_port_AWQOS;
output  [3:0] m_axi_data_port_AWREGION;
output  [C_M_AXI_DATA_PORT_AWUSER_WIDTH - 1:0] m_axi_data_port_AWUSER;
output   m_axi_data_port_WVALID;
input   m_axi_data_port_WREADY;
output  [C_M_AXI_DATA_PORT_DATA_WIDTH - 1:0] m_axi_data_port_WDATA;
output  [C_M_AXI_DATA_PORT_WSTRB_WIDTH - 1:0] m_axi_data_port_WSTRB;
output   m_axi_data_port_WLAST;
output  [C_M_AXI_DATA_PORT_ID_WIDTH - 1:0] m_axi_data_port_WID;
output  [C_M_AXI_DATA_PORT_WUSER_WIDTH - 1:0] m_axi_data_port_WUSER;
output   m_axi_data_port_ARVALID;
input   m_axi_data_port_ARREADY;
output  [C_M_AXI_DATA_PORT_ADDR_WIDTH - 1:0] m_axi_data_port_ARADDR;
output  [C_M_AXI_DATA_PORT_ID_WIDTH - 1:0] m_axi_data_port_ARID;
output  [7:0] m_axi_data_port_ARLEN;
output  [2:0] m_axi_data_port_ARSIZE;
output  [1:0] m_axi_data_port_ARBURST;
output  [1:0] m_axi_data_port_ARLOCK;
output  [3:0] m_axi_data_port_ARCACHE;
output  [2:0] m_axi_data_port_ARPROT;
output  [3:0] m_axi_data_port_ARQOS;
output  [3:0] m_axi_data_port_ARREGION;
output  [C_M_AXI_DATA_PORT_ARUSER_WIDTH - 1:0] m_axi_data_port_ARUSER;
input   m_axi_data_port_RVALID;
output   m_axi_data_port_RREADY;
input  [C_M_AXI_DATA_PORT_DATA_WIDTH - 1:0] m_axi_data_port_RDATA;
input   m_axi_data_port_RLAST;
input  [C_M_AXI_DATA_PORT_ID_WIDTH - 1:0] m_axi_data_port_RID;
input  [C_M_AXI_DATA_PORT_RUSER_WIDTH - 1:0] m_axi_data_port_RUSER;
input  [1:0] m_axi_data_port_RRESP;
input   m_axi_data_port_BVALID;
output   m_axi_data_port_BREADY;
input  [1:0] m_axi_data_port_BRESP;
input  [C_M_AXI_DATA_PORT_ID_WIDTH - 1:0] m_axi_data_port_BID;
input  [C_M_AXI_DATA_PORT_BUSER_WIDTH - 1:0] m_axi_data_port_BUSER;
input  [127:0] gemm_queue_V_V_TDATA;
input   gemm_queue_V_V_TVALID;
output   gemm_queue_V_V_TREADY;
input  [7:0] l2g_dep_queue_V_TDATA;
input   l2g_dep_queue_V_TVALID;
output   l2g_dep_queue_V_TREADY;
input  [7:0] s2g_dep_queue_V_TDATA;
input   s2g_dep_queue_V_TVALID;
output   s2g_dep_queue_V_TREADY;
output  [7:0] g2l_dep_queue_V_TDATA;
output   g2l_dep_queue_V_TVALID;
input   g2l_dep_queue_V_TREADY;
output  [7:0] g2s_dep_queue_V_TDATA;
output   g2s_dep_queue_V_TVALID;
input   g2s_dep_queue_V_TREADY;
output  [31:0] inp_mem_V_Addr_A;
output   inp_mem_V_EN_A;
output  [15:0] inp_mem_V_WEN_A;
output  [127:0] inp_mem_V_Din_A;
input  [127:0] inp_mem_V_Dout_A;
output   inp_mem_V_Clk_A;
output   inp_mem_V_Rst_A;
output  [31:0] wgt_mem_0_V_Addr_A;
output   wgt_mem_0_V_EN_A;
output  [127:0] wgt_mem_0_V_WEN_A;
output  [1023:0] wgt_mem_0_V_Din_A;
input  [1023:0] wgt_mem_0_V_Dout_A;
output   wgt_mem_0_V_Clk_A;
output   wgt_mem_0_V_Rst_A;
output  [31:0] wgt_mem_1_V_Addr_A;
output   wgt_mem_1_V_EN_A;
output  [127:0] wgt_mem_1_V_WEN_A;
output  [1023:0] wgt_mem_1_V_Din_A;
input  [1023:0] wgt_mem_1_V_Dout_A;
output   wgt_mem_1_V_Clk_A;
output   wgt_mem_1_V_Rst_A;
output  [31:0] out_mem_V_Addr_A;
output   out_mem_V_EN_A;
output  [15:0] out_mem_V_WEN_A;
output  [127:0] out_mem_V_Din_A;
input  [127:0] out_mem_V_Dout_A;
output   out_mem_V_Clk_A;
output   out_mem_V_Rst_A;
input   s_axi_CONTROL_BUS_AWVALID;
output   s_axi_CONTROL_BUS_AWREADY;
input  [C_S_AXI_CONTROL_BUS_ADDR_WIDTH - 1:0] s_axi_CONTROL_BUS_AWADDR;
input   s_axi_CONTROL_BUS_WVALID;
output   s_axi_CONTROL_BUS_WREADY;
input  [C_S_AXI_CONTROL_BUS_DATA_WIDTH - 1:0] s_axi_CONTROL_BUS_WDATA;
input  [C_S_AXI_CONTROL_BUS_WSTRB_WIDTH - 1:0] s_axi_CONTROL_BUS_WSTRB;
input   s_axi_CONTROL_BUS_ARVALID;
output   s_axi_CONTROL_BUS_ARREADY;
input  [C_S_AXI_CONTROL_BUS_ADDR_WIDTH - 1:0] s_axi_CONTROL_BUS_ARADDR;
output   s_axi_CONTROL_BUS_RVALID;
input   s_axi_CONTROL_BUS_RREADY;
output  [C_S_AXI_CONTROL_BUS_DATA_WIDTH - 1:0] s_axi_CONTROL_BUS_RDATA;
output  [1:0] s_axi_CONTROL_BUS_RRESP;
output   s_axi_CONTROL_BUS_BVALID;
input   s_axi_CONTROL_BUS_BREADY;
output  [1:0] s_axi_CONTROL_BUS_BRESP;
output   interrupt;

reg gemm_queue_V_V_TREADY;
reg l2g_dep_queue_V_TREADY;
reg s2g_dep_queue_V_TREADY;
reg inp_mem_V_EN_A;
reg wgt_mem_0_V_EN_A;
reg wgt_mem_1_V_EN_A;
reg out_mem_V_EN_A;
reg[15:0] out_mem_V_WEN_A;
reg[127:0] out_mem_V_Din_A;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [42:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] done_i;
reg   [31:0] done_o;
reg    done_o_ap_vld;
wire   [31:0] uops_V;
wire   [31:0] biases_V;
reg   [12:0] uop_mem_V_address0;
reg    uop_mem_V_ce0;
reg    uop_mem_V_we0;
wire   [31:0] uop_mem_V_q0;
reg   [10:0] acc_mem_V_address0;
reg    acc_mem_V_ce0;
reg   [63:0] acc_mem_V_we0;
reg   [511:0] acc_mem_V_d0;
wire   [511:0] acc_mem_V_q0;
reg   [10:0] acc_mem_V_address1;
reg    acc_mem_V_ce1;
reg   [63:0] acc_mem_V_we1;
wire   [511:0] acc_mem_V_d1;
wire   [511:0] acc_mem_V_q1;
reg    uop_port_blk_n_AR;
wire    ap_CS_fsm_state51;
reg    uop_port_blk_n_R;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_pp3_stage0;
reg   [0:0] icmp_ln480_reg_16554;
reg    data_port_blk_n_AR;
wire    ap_CS_fsm_state39;
reg    data_port_blk_n_R;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage0;
reg   [0:0] icmp_ln89_reg_16475;
reg    gemm_queue_V_V_TDATA_blk_n;
reg    l2g_dep_queue_V_TDATA_blk_n;
wire   [0:0] tmp_4_fu_1671_p3;
reg    s2g_dep_queue_V_TDATA_blk_n;
wire   [0:0] tmp_6_fu_1679_p3;
reg    g2l_dep_queue_V_TDATA_blk_n;
wire    ap_CS_fsm_state19;
wire   [0:0] tmp_35_fu_4597_p3;
wire    ap_CS_fsm_state63;
reg   [0:0] tmp_35_reg_13822;
reg    g2s_dep_queue_V_TDATA_blk_n;
wire   [0:0] tmp_36_fu_11615_p3;
wire    ap_CS_fsm_state64;
reg   [0:0] tmp_36_reg_16573;
wire    uop_port_AWREADY;
wire    uop_port_WREADY;
reg    uop_port_ARVALID;
wire    uop_port_ARREADY;
wire   [31:0] uop_port_ARLEN;
wire    uop_port_RVALID;
reg    uop_port_RREADY;
wire   [31:0] uop_port_RDATA;
wire    uop_port_RLAST;
wire   [0:0] uop_port_RID;
wire   [0:0] uop_port_RUSER;
wire   [1:0] uop_port_RRESP;
wire    uop_port_BVALID;
wire   [1:0] uop_port_BRESP;
wire   [0:0] uop_port_BID;
wire   [0:0] uop_port_BUSER;
wire    data_port_AWREADY;
wire    data_port_WREADY;
reg    data_port_ARVALID;
wire    data_port_ARREADY;
wire   [31:0] data_port_ARADDR;
wire    data_port_RVALID;
reg    data_port_RREADY;
wire   [63:0] data_port_RDATA;
wire    data_port_RLAST;
wire   [0:0] data_port_RID;
wire   [0:0] data_port_RUSER;
wire   [1:0] data_port_RRESP;
wire    data_port_BVALID;
wire   [1:0] data_port_BRESP;
wire   [0:0] data_port_BID;
wire   [0:0] data_port_BUSER;
reg   [59:0] indvar_flatten71_reg_1088;
reg   [11:0] dst_offset_in_V_1_reg_1099;
reg   [11:0] src_offset_in_V_1_reg_1110;
reg   [45:0] indvar_flatten25_reg_1121;
reg   [11:0] dst_offset_in_0_i175_reg_1132;
reg   [11:0] src_offset_in_0_i176_reg_1143;
reg   [31:0] upc_0_i180_reg_1154;
reg   [59:0] indvar_flatten15_reg_1163;
reg   [11:0] dst_offset_in_V_reg_1174;
reg   [11:0] src_offset_in_V_reg_1185;
reg   [10:0] wgt_offset_in_V_reg_1196;
reg   [45:0] indvar_flatten_reg_1207;
reg   [11:0] dst_offset_in_0_i_reg_1218;
reg   [11:0] src_offset_in_0_i_reg_1230;
reg   [10:0] wgt_offset_in_0_i_reg_1242;
reg   [31:0] upc_0_i_reg_1254;
reg   [18:0] phi_ln89_reg_1295;
reg   [15:0] phi_ln480_reg_1306;
wire   [12:0] grp_fu_1317_p4;
reg   [12:0] reg_1561;
reg    ap_block_state1;
wire   [0:0] icmp_ln470_fu_1691_p2;
wire   [0:0] icmp_ln473_fu_1697_p2;
wire   [0:0] icmp_ln493_fu_1703_p2;
wire   [0:0] icmp_ln495_fu_1709_p2;
wire   [13:0] grp_fu_1327_p4;
reg   [13:0] reg_1565;
wire   [15:0] grp_fu_1337_p4;
reg   [15:0] reg_1569;
wire   [0:0] icmp_ln477_fu_1821_p2;
wire   [0:0] icmp_ln482_fu_1827_p2;
reg   [31:0] reg_1573;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_state10_pp0_stage0_iter0;
wire    ap_block_state12_pp0_stage0_iter1;
wire    ap_block_state14_pp0_stage0_iter2;
wire    ap_block_state16_pp0_stage0_iter3;
wire    ap_block_state18_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln343_reg_13229;
reg   [0:0] icmp_ln343_reg_13229_pp0_iter1_reg;
reg    ap_enable_reg_pp1_iter8;
wire    ap_block_state28_pp1_stage0_iter0;
wire    ap_block_state29_pp1_stage0_iter1;
wire    ap_block_state30_pp1_stage0_iter2;
wire    ap_block_state31_pp1_stage0_iter3;
wire    ap_block_state32_pp1_stage0_iter4;
wire    ap_block_state33_pp1_stage0_iter5;
wire    ap_block_state34_pp1_stage0_iter6;
wire    ap_block_state35_pp1_stage0_iter7;
wire    ap_block_state36_pp1_stage0_iter8;
wire    ap_block_state37_pp1_stage0_iter9;
wire    ap_block_pp1_stage0_11001;
reg   [0:0] icmp_ln253_reg_13919;
reg   [0:0] icmp_ln253_reg_13919_pp1_iter7_reg;
reg   [31:0] reg_1577;
reg   [31:0] reg_1581;
reg   [31:0] reg_1585;
reg   [31:0] reg_1589;
reg   [31:0] reg_1593;
reg   [31:0] reg_1597;
reg   [31:0] reg_1601;
reg   [31:0] reg_1605;
reg   [31:0] reg_1609;
reg   [31:0] reg_1613;
reg   [31:0] reg_1617;
reg   [31:0] reg_1621;
reg   [31:0] reg_1625;
reg   [31:0] reg_1629;
wire   [35:0] p_cast37_fu_1643_p1;
reg   [35:0] p_cast37_reg_12774;
reg   [127:0] tmp_V_reg_12779;
wire   [14:0] sub_ln343_fu_1741_p2;
reg   [14:0] sub_ln343_reg_12918;
wire   [0:0] icmp_ln350_fu_1747_p2;
reg   [0:0] icmp_ln350_reg_12923;
wire   [14:0] sub_ln253_fu_1779_p2;
reg   [14:0] sub_ln253_reg_12928;
wire   [0:0] icmp_ln262_fu_1785_p2;
reg   [0:0] icmp_ln262_reg_12933;
wire   [31:0] dram_idx_V_fu_1801_p4;
reg   [0:0] icmp_ln482_reg_12952;
reg   [15:0] trunc_ln304_1_reg_12956;
wire   [31:0] zext_ln700_1_fu_1843_p1;
reg   [31:0] zext_ln700_1_reg_12961;
wire   [18:0] shl_ln_fu_1847_p3;
reg   [18:0] shl_ln_reg_12966;
wire   [31:0] zext_ln89_fu_1855_p1;
reg   [31:0] zext_ln89_reg_12971;
reg   [31:0] uop_port_addr_reg_12976;
wire    ap_CS_fsm_state2;
wire   [45:0] grp_fu_1890_p2;
reg   [45:0] mul_ln331_reg_12992;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire   [31:0] zext_ln350_fu_1909_p1;
reg   [31:0] zext_ln350_reg_13008;
wire    ap_CS_fsm_state9;
wire   [31:0] zext_ln350_1_fu_1913_p1;
reg   [31:0] zext_ln350_1_reg_13015;
reg   [0:0] tmp_12_reg_13020;
wire   [0:0] icmp_ln378_fu_1933_p2;
reg   [0:0] icmp_ln378_reg_13040;
wire  signed [31:0] src_1_V_fu_1954_p1;
reg  signed [31:0] src_1_V_reg_13076;
wire   [11:0] zext_ln700_7_fu_1958_p1;
reg   [11:0] zext_ln700_7_reg_13096;
wire   [11:0] zext_ln700_8_fu_1962_p1;
reg   [11:0] zext_ln700_8_reg_13101;
wire   [11:0] zext_ln700_9_fu_1966_p1;
reg   [11:0] zext_ln700_9_reg_13106;
wire   [11:0] zext_ln700_10_fu_1970_p1;
reg   [11:0] zext_ln700_10_reg_13111;
wire   [0:0] tmp_16_fu_1974_p3;
reg   [0:0] tmp_16_reg_13116;
wire   [0:0] and_ln385_fu_1981_p2;
reg   [0:0] and_ln385_reg_13152;
wire   [0:0] icmp_ln391_fu_1987_p2;
reg   [0:0] icmp_ln391_reg_13188;
wire   [59:0] grp_fu_1903_p2;
reg   [59:0] mul_ln331_1_reg_13224;
wire   [0:0] icmp_ln343_fu_1993_p2;
reg   [0:0] icmp_ln343_reg_13229_pp0_iter2_reg;
reg   [0:0] icmp_ln343_reg_13229_pp0_iter3_reg;
wire   [59:0] add_ln343_fu_1998_p2;
reg   [59:0] add_ln343_reg_13233;
reg    ap_enable_reg_pp0_iter0;
wire   [11:0] select_ln343_fu_2054_p3;
reg   [11:0] select_ln343_reg_13238;
wire   [11:0] select_ln343_1_fu_2062_p3;
reg   [11:0] select_ln343_1_reg_13243;
wire  signed [31:0] select_ln350_fu_2080_p3;
reg  signed [31:0] select_ln350_reg_13248;
wire   [11:0] select_ln348_fu_2087_p3;
reg   [11:0] select_ln348_reg_13254;
wire   [11:0] select_ln348_1_fu_2095_p3;
reg   [11:0] select_ln348_1_reg_13260;
wire   [45:0] select_ln348_2_fu_2109_p3;
reg   [45:0] select_ln348_2_reg_13266;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state11_pp0_stage1_iter0;
wire    ap_block_state13_pp0_stage1_iter1;
wire    ap_block_state15_pp0_stage1_iter2;
wire    ap_block_state17_pp0_stage1_iter3;
wire    ap_block_pp0_stage1_11001;
wire   [31:0] upc_3_fu_2121_p2;
reg   [31:0] upc_3_reg_13276;
wire   [11:0] dst_idx_V_1_fu_2134_p2;
reg   [11:0] dst_idx_V_1_reg_13281;
wire   [11:0] src_idx_V_1_fu_2143_p2;
reg   [11:0] src_idx_V_1_reg_13286;
wire   [63:0] zext_ln544_4_fu_2152_p1;
reg   [63:0] zext_ln544_4_reg_13296;
reg   [63:0] zext_ln544_4_reg_13296_pp0_iter2_reg;
reg   [10:0] acc_mem_V_addr_3_reg_13301;
reg   [10:0] acc_mem_V_addr_3_reg_13301_pp0_iter2_reg;
reg   [10:0] acc_mem_V_addr_3_reg_13301_pp0_iter3_reg;
reg   [31:0] p_Result_11_4_reg_13307;
reg   [31:0] p_Result_11_4_1_reg_13312;
reg   [31:0] p_Result_11_5_reg_13317;
reg   [31:0] p_Result_11_5_1_reg_13322;
reg   [31:0] p_Result_11_6_reg_13327;
reg   [31:0] p_Result_11_6_1_reg_13332;
reg   [31:0] p_Result_11_7_reg_13337;
reg   [31:0] p_Result_11_7_1_reg_13342;
wire   [31:0] dst_tensor_0_0_V_fu_2310_p1;
reg   [31:0] dst_tensor_0_0_V_reg_13347;
wire   [31:0] select_ln375_fu_2314_p3;
reg   [31:0] select_ln375_reg_13358;
wire   [4:0] trunc_ln647_24_fu_2320_p1;
reg   [4:0] trunc_ln647_24_reg_13367;
wire   [4:0] sub_ln461_fu_2324_p2;
reg   [4:0] sub_ln461_reg_13372;
wire   [31:0] src_1_V_1_fu_2330_p3;
reg   [31:0] src_1_V_1_reg_13377;
wire   [4:0] trunc_ln647_28_fu_2336_p1;
reg   [4:0] trunc_ln647_28_reg_13386;
wire   [4:0] sub_ln461_1_fu_2340_p2;
reg   [4:0] sub_ln461_1_reg_13391;
wire   [31:0] src_1_V_2_fu_2346_p3;
reg   [31:0] src_1_V_2_reg_13396;
wire   [4:0] trunc_ln647_32_fu_2352_p1;
reg   [4:0] trunc_ln647_32_reg_13405;
wire   [4:0] sub_ln461_2_fu_2356_p2;
reg   [4:0] sub_ln461_2_reg_13410;
wire   [31:0] src_1_V_3_fu_2362_p3;
reg   [31:0] src_1_V_3_reg_13415;
wire   [4:0] trunc_ln647_36_fu_2368_p1;
reg   [4:0] trunc_ln647_36_reg_13424;
wire   [4:0] sub_ln461_3_fu_2372_p2;
reg   [4:0] sub_ln461_3_reg_13429;
wire   [31:0] src_1_V_4_fu_2378_p3;
reg   [31:0] src_1_V_4_reg_13434;
wire   [4:0] trunc_ln647_40_fu_2384_p1;
reg   [4:0] trunc_ln647_40_reg_13443;
wire   [4:0] sub_ln461_4_fu_2388_p2;
reg   [4:0] sub_ln461_4_reg_13448;
wire   [31:0] src_1_V_5_fu_2394_p3;
reg   [31:0] src_1_V_5_reg_13453;
wire   [4:0] trunc_ln647_44_fu_2400_p1;
reg   [4:0] trunc_ln647_44_reg_13462;
wire   [4:0] sub_ln461_5_fu_2404_p2;
reg   [4:0] sub_ln461_5_reg_13467;
wire   [31:0] src_1_V_6_fu_2410_p3;
reg   [31:0] src_1_V_6_reg_13472;
wire   [4:0] trunc_ln647_48_fu_2416_p1;
reg   [4:0] trunc_ln647_48_reg_13481;
wire   [4:0] sub_ln461_6_fu_2420_p2;
reg   [4:0] sub_ln461_6_reg_13486;
wire   [31:0] src_1_V_7_fu_2426_p3;
reg   [31:0] src_1_V_7_reg_13491;
wire   [4:0] trunc_ln647_52_fu_2432_p1;
reg   [4:0] trunc_ln647_52_reg_13500;
wire   [4:0] sub_ln461_7_fu_2436_p2;
reg   [4:0] sub_ln461_7_reg_13505;
wire   [7:0] o_tensor_0_0_V_10_fu_2549_p3;
reg   [7:0] o_tensor_0_0_V_10_reg_13510;
wire   [31:0] dst_tensor_0_0_V_6_fu_2569_p3;
reg   [31:0] dst_tensor_0_0_V_6_reg_13515;
reg   [31:0] dst_tensor_0_0_V_6_reg_13515_pp0_iter3_reg;
wire   [7:0] o_tensor_0_1_V_10_fu_2665_p3;
reg   [7:0] o_tensor_0_1_V_10_reg_13520;
wire   [31:0] dst_tensor_0_1_V_6_fu_2686_p3;
reg   [31:0] dst_tensor_0_1_V_6_reg_13525;
reg   [31:0] dst_tensor_0_1_V_6_reg_13525_pp0_iter3_reg;
wire   [7:0] o_tensor_0_2_V_10_fu_2782_p3;
reg   [7:0] o_tensor_0_2_V_10_reg_13530;
wire   [31:0] dst_tensor_0_2_V_6_fu_2803_p3;
reg   [31:0] dst_tensor_0_2_V_6_reg_13535;
reg   [31:0] dst_tensor_0_2_V_6_reg_13535_pp0_iter3_reg;
wire   [7:0] o_tensor_0_3_V_10_fu_2899_p3;
reg   [7:0] o_tensor_0_3_V_10_reg_13540;
wire   [31:0] dst_tensor_0_3_V_6_fu_2920_p3;
reg   [31:0] dst_tensor_0_3_V_6_reg_13545;
reg   [31:0] dst_tensor_0_3_V_6_reg_13545_pp0_iter3_reg;
wire   [7:0] o_tensor_0_4_V_10_fu_3016_p3;
reg   [7:0] o_tensor_0_4_V_10_reg_13550;
wire   [31:0] dst_tensor_0_4_V_6_fu_3037_p3;
reg   [31:0] dst_tensor_0_4_V_6_reg_13555;
reg   [31:0] dst_tensor_0_4_V_6_reg_13555_pp0_iter3_reg;
wire   [7:0] o_tensor_0_5_V_9_fu_3133_p3;
reg   [7:0] o_tensor_0_5_V_9_reg_13560;
wire   [31:0] dst_tensor_0_5_V_6_fu_3154_p3;
reg   [31:0] dst_tensor_0_5_V_6_reg_13565;
reg   [31:0] dst_tensor_0_5_V_6_reg_13565_pp0_iter3_reg;
wire   [7:0] o_tensor_0_6_V_9_fu_3250_p3;
reg   [7:0] o_tensor_0_6_V_9_reg_13570;
wire   [31:0] dst_tensor_0_6_V_6_fu_3271_p3;
reg   [31:0] dst_tensor_0_6_V_6_reg_13575;
reg   [31:0] dst_tensor_0_6_V_6_reg_13575_pp0_iter3_reg;
wire   [7:0] o_tensor_0_7_V_9_fu_3367_p3;
reg   [7:0] o_tensor_0_7_V_9_reg_13580;
wire   [31:0] dst_tensor_0_7_V_6_fu_3388_p3;
reg   [31:0] dst_tensor_0_7_V_6_reg_13585;
reg   [31:0] dst_tensor_0_7_V_6_reg_13585_pp0_iter3_reg;
wire   [31:0] src_1_V_8_fu_3395_p3;
reg   [31:0] src_1_V_8_reg_13590;
wire   [4:0] trunc_ln647_56_fu_3400_p1;
reg   [4:0] trunc_ln647_56_reg_13599;
wire   [4:0] sub_ln461_8_fu_3404_p2;
reg   [4:0] sub_ln461_8_reg_13604;
wire   [31:0] src_1_V_9_fu_3410_p3;
reg   [31:0] src_1_V_9_reg_13609;
wire   [4:0] trunc_ln647_60_fu_3415_p1;
reg   [4:0] trunc_ln647_60_reg_13618;
wire   [4:0] sub_ln461_9_fu_3419_p2;
reg   [4:0] sub_ln461_9_reg_13623;
wire   [31:0] src_1_V_10_fu_3425_p3;
reg   [31:0] src_1_V_10_reg_13628;
wire   [4:0] trunc_ln647_64_fu_3430_p1;
reg   [4:0] trunc_ln647_64_reg_13637;
wire   [4:0] sub_ln461_10_fu_3434_p2;
reg   [4:0] sub_ln461_10_reg_13642;
wire   [31:0] src_1_V_11_fu_3440_p3;
reg   [31:0] src_1_V_11_reg_13647;
wire   [4:0] trunc_ln647_68_fu_3445_p1;
reg   [4:0] trunc_ln647_68_reg_13656;
wire   [4:0] sub_ln461_11_fu_3449_p2;
reg   [4:0] sub_ln461_11_reg_13661;
wire   [31:0] src_1_V_12_fu_3455_p3;
reg   [31:0] src_1_V_12_reg_13666;
wire   [4:0] trunc_ln647_72_fu_3460_p1;
reg   [4:0] trunc_ln647_72_reg_13675;
wire   [4:0] sub_ln461_12_fu_3464_p2;
reg   [4:0] sub_ln461_12_reg_13680;
wire   [31:0] src_1_V_13_fu_3470_p3;
reg   [31:0] src_1_V_13_reg_13685;
wire   [4:0] trunc_ln647_76_fu_3475_p1;
reg   [4:0] trunc_ln647_76_reg_13694;
wire   [4:0] sub_ln461_13_fu_3479_p2;
reg   [4:0] sub_ln461_13_reg_13699;
wire   [31:0] src_1_V_14_fu_3485_p3;
reg   [31:0] src_1_V_14_reg_13704;
wire   [4:0] trunc_ln647_80_fu_3490_p1;
reg   [4:0] trunc_ln647_80_reg_13713;
wire   [4:0] sub_ln461_14_fu_3494_p2;
reg   [4:0] sub_ln461_14_reg_13718;
wire   [31:0] src_1_V_15_fu_3500_p3;
reg   [31:0] src_1_V_15_reg_13723;
wire   [4:0] trunc_ln647_84_fu_3505_p1;
reg   [4:0] trunc_ln647_84_reg_13732;
wire   [4:0] sub_ln461_15_fu_3509_p2;
reg   [4:0] sub_ln461_15_reg_13737;
wire   [7:0] o_tensor_0_8_V_9_fu_3668_p3;
reg   [7:0] o_tensor_0_8_V_9_reg_13742;
wire   [31:0] dst_tensor_0_8_V_6_fu_3689_p3;
reg   [31:0] dst_tensor_0_8_V_6_reg_13747;
wire   [7:0] o_tensor_0_9_V_9_fu_3785_p3;
reg   [7:0] o_tensor_0_9_V_9_reg_13752;
wire   [31:0] dst_tensor_0_9_V_6_fu_3806_p3;
reg   [31:0] dst_tensor_0_9_V_6_reg_13757;
wire   [7:0] o_tensor_0_10_V_9_fu_3902_p3;
reg   [7:0] o_tensor_0_10_V_9_reg_13762;
wire   [31:0] dst_tensor_0_10_V_6_fu_3923_p3;
reg   [31:0] dst_tensor_0_10_V_6_reg_13767;
wire   [7:0] o_tensor_0_11_V_9_fu_4019_p3;
reg   [7:0] o_tensor_0_11_V_9_reg_13772;
wire   [31:0] dst_tensor_0_11_V_6_fu_4040_p3;
reg   [31:0] dst_tensor_0_11_V_6_reg_13777;
wire   [7:0] o_tensor_0_12_V_9_fu_4136_p3;
reg   [7:0] o_tensor_0_12_V_9_reg_13782;
wire   [31:0] dst_tensor_0_12_V_6_fu_4157_p3;
reg   [31:0] dst_tensor_0_12_V_6_reg_13787;
wire   [7:0] o_tensor_0_13_V_9_fu_4253_p3;
reg   [7:0] o_tensor_0_13_V_9_reg_13792;
wire   [31:0] dst_tensor_0_13_V_6_fu_4274_p3;
reg   [31:0] dst_tensor_0_13_V_6_reg_13797;
wire   [7:0] o_tensor_0_14_V_9_fu_4370_p3;
reg   [7:0] o_tensor_0_14_V_9_reg_13802;
wire   [31:0] dst_tensor_0_14_V_6_fu_4391_p3;
reg   [31:0] dst_tensor_0_14_V_6_reg_13807;
wire   [7:0] o_tensor_0_15_V_9_fu_4487_p3;
reg   [7:0] o_tensor_0_15_V_9_reg_13812;
wire   [31:0] dst_tensor_0_15_V_6_fu_4508_p3;
reg   [31:0] dst_tensor_0_15_V_6_reg_13817;
reg    ap_block_state19_io;
wire    ap_CS_fsm_state20;
wire   [45:0] grp_fu_4615_p2;
reg   [45:0] mul_ln240_reg_13836;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
wire   [31:0] zext_ln262_fu_4634_p1;
reg   [31:0] zext_ln262_reg_13852;
wire    ap_CS_fsm_state27;
wire   [31:0] zext_ln262_1_fu_4638_p1;
reg   [31:0] zext_ln262_1_reg_13859;
reg   [0:0] tmp_11_reg_13864;
wire   [11:0] zext_ln700_2_fu_4649_p1;
reg   [11:0] zext_ln700_2_reg_13884;
wire   [11:0] zext_ln700_3_fu_4653_p1;
reg   [11:0] zext_ln700_3_reg_13889;
wire   [10:0] zext_ln700_fu_4666_p1;
reg   [10:0] zext_ln700_reg_13894;
wire   [11:0] zext_ln700_4_fu_4670_p1;
reg   [11:0] zext_ln700_4_reg_13899;
wire   [11:0] zext_ln700_5_fu_4674_p1;
reg   [11:0] zext_ln700_5_reg_13904;
wire   [10:0] zext_ln700_6_fu_4687_p1;
reg   [10:0] zext_ln700_6_reg_13909;
wire   [59:0] grp_fu_4628_p2;
reg   [59:0] mul_ln240_1_reg_13914;
wire   [0:0] icmp_ln253_fu_4691_p2;
wire    ap_CS_fsm_pp1_stage0;
reg   [0:0] icmp_ln253_reg_13919_pp1_iter1_reg;
reg   [0:0] icmp_ln253_reg_13919_pp1_iter2_reg;
reg   [0:0] icmp_ln253_reg_13919_pp1_iter3_reg;
reg   [0:0] icmp_ln253_reg_13919_pp1_iter4_reg;
reg   [0:0] icmp_ln253_reg_13919_pp1_iter5_reg;
reg   [0:0] icmp_ln253_reg_13919_pp1_iter6_reg;
reg   [0:0] icmp_ln253_reg_13919_pp1_iter8_reg;
wire   [59:0] add_ln253_fu_4696_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [11:0] add_ln700_256_fu_4702_p2;
reg   [11:0] add_ln700_256_reg_13928;
wire   [0:0] icmp_ln259_fu_4707_p2;
reg   [0:0] icmp_ln259_reg_13933;
wire   [11:0] add_ln700_257_fu_4712_p2;
reg   [11:0] add_ln700_257_reg_13942;
wire   [10:0] add_ln700_258_fu_4717_p2;
reg   [10:0] add_ln700_258_reg_13947;
wire   [11:0] select_ln253_fu_4722_p3;
wire   [11:0] select_ln253_1_fu_4730_p3;
wire   [10:0] select_ln253_2_fu_4738_p3;
wire   [45:0] select_ln259_3_fu_4752_p3;
wire  signed [31:0] select_ln262_fu_4810_p3;
reg  signed [31:0] select_ln262_reg_13972;
wire   [11:0] select_ln259_fu_4817_p3;
reg   [11:0] select_ln259_reg_13977;
reg    ap_enable_reg_pp1_iter1;
reg   [11:0] select_ln259_reg_13977_pp1_iter2_reg;
wire   [11:0] select_ln259_1_fu_4825_p3;
reg   [11:0] select_ln259_1_reg_13983;
reg   [11:0] select_ln259_1_reg_13983_pp1_iter2_reg;
wire   [10:0] select_ln259_2_fu_4833_p3;
reg   [10:0] select_ln259_2_reg_13989;
reg   [10:0] select_ln259_2_reg_13989_pp1_iter2_reg;
wire   [31:0] upc_1_fu_4841_p2;
reg   [31:0] upc_1_reg_13995;
wire   [11:0] dst_idx_V_fu_4859_p2;
reg   [11:0] dst_idx_V_reg_14005;
reg   [11:0] dst_idx_V_reg_14005_pp1_iter4_reg;
reg   [11:0] dst_idx_V_reg_14005_pp1_iter5_reg;
reg   [11:0] dst_idx_V_reg_14005_pp1_iter6_reg;
wire   [11:0] src_idx_V_fu_4868_p2;
reg   [11:0] src_idx_V_reg_14010;
wire   [10:0] wgt_idx_V_fu_4887_p2;
reg   [10:0] wgt_idx_V_reg_14015;
wire   [7:0] trunc_ln647_1_fu_4901_p1;
reg   [7:0] trunc_ln647_1_reg_14035;
reg  signed [7:0] trunc_ln647_1_reg_14035_pp1_iter6_reg;
reg   [7:0] w_tensor_i_0_1_reg_14040;
reg   [7:0] w_tensor_i_0_2_reg_14045;
reg  signed [7:0] w_tensor_i_0_2_reg_14045_pp1_iter6_reg;
reg   [7:0] w_tensor_i_0_3_reg_14050;
reg   [7:0] w_tensor_i_0_4_reg_14055;
reg  signed [7:0] w_tensor_i_0_4_reg_14055_pp1_iter6_reg;
reg   [7:0] w_tensor_i_0_5_reg_14060;
reg   [7:0] w_tensor_i_0_6_reg_14065;
reg  signed [7:0] w_tensor_i_0_6_reg_14065_pp1_iter6_reg;
reg   [7:0] w_tensor_i_0_7_reg_14070;
wire   [7:0] trunc_ln647_2_fu_4975_p1;
reg   [7:0] trunc_ln647_2_reg_14075;
reg  signed [7:0] trunc_ln647_2_reg_14075_pp1_iter6_reg;
reg   [7:0] w_tensor_i_0_9_reg_14080;
reg   [7:0] w_tensor_i_0_s_reg_14085;
reg  signed [7:0] w_tensor_i_0_s_reg_14085_pp1_iter6_reg;
reg   [7:0] w_tensor_i_0_8_reg_14090;
reg   [7:0] w_tensor_i_0_10_reg_14095;
reg  signed [7:0] w_tensor_i_0_10_reg_14095_pp1_iter6_reg;
reg   [7:0] w_tensor_i_0_11_reg_14100;
reg   [7:0] w_tensor_i_0_12_reg_14105;
reg  signed [7:0] w_tensor_i_0_12_reg_14105_pp1_iter6_reg;
reg   [7:0] w_tensor_i_0_13_reg_14110;
reg   [7:0] w_tensor_i_1_reg_14115;
reg  signed [7:0] w_tensor_i_1_reg_14115_pp1_iter6_reg;
reg   [7:0] w_tensor_i_1_1_reg_14120;
reg   [7:0] w_tensor_i_1_2_reg_14125;
reg  signed [7:0] w_tensor_i_1_2_reg_14125_pp1_iter6_reg;
reg   [7:0] w_tensor_i_1_3_reg_14130;
reg   [7:0] w_tensor_i_1_4_reg_14135;
reg  signed [7:0] w_tensor_i_1_4_reg_14135_pp1_iter6_reg;
reg   [7:0] w_tensor_i_1_5_reg_14140;
reg   [7:0] w_tensor_i_1_6_reg_14145;
reg  signed [7:0] w_tensor_i_1_6_reg_14145_pp1_iter6_reg;
reg   [7:0] w_tensor_i_1_7_reg_14150;
reg   [7:0] w_tensor_i_1_8_reg_14155;
reg  signed [7:0] w_tensor_i_1_8_reg_14155_pp1_iter6_reg;
reg   [7:0] w_tensor_i_1_9_reg_14160;
reg   [7:0] w_tensor_i_1_s_reg_14165;
reg  signed [7:0] w_tensor_i_1_s_reg_14165_pp1_iter6_reg;
reg   [7:0] w_tensor_i_1_10_reg_14170;
reg   [7:0] w_tensor_i_1_11_reg_14175;
reg  signed [7:0] w_tensor_i_1_11_reg_14175_pp1_iter6_reg;
reg   [7:0] w_tensor_i_1_12_reg_14180;
reg   [7:0] w_tensor_i_1_13_reg_14185;
reg  signed [7:0] w_tensor_i_1_13_reg_14185_pp1_iter6_reg;
reg   [7:0] w_tensor_i_1_14_reg_14190;
reg   [7:0] w_tensor_i_2_reg_14195;
reg  signed [7:0] w_tensor_i_2_reg_14195_pp1_iter6_reg;
reg   [7:0] w_tensor_i_2_1_reg_14200;
reg   [7:0] w_tensor_i_2_2_reg_14205;
reg  signed [7:0] w_tensor_i_2_2_reg_14205_pp1_iter6_reg;
reg   [7:0] w_tensor_i_2_3_reg_14210;
reg   [7:0] w_tensor_i_2_4_reg_14215;
reg  signed [7:0] w_tensor_i_2_4_reg_14215_pp1_iter6_reg;
reg   [7:0] w_tensor_i_2_5_reg_14220;
reg   [7:0] w_tensor_i_2_6_reg_14225;
reg  signed [7:0] w_tensor_i_2_6_reg_14225_pp1_iter6_reg;
reg   [7:0] w_tensor_i_2_7_reg_14230;
reg   [7:0] w_tensor_i_2_8_reg_14235;
reg  signed [7:0] w_tensor_i_2_8_reg_14235_pp1_iter6_reg;
reg   [7:0] w_tensor_i_2_9_reg_14240;
reg   [7:0] w_tensor_i_2_s_reg_14245;
reg  signed [7:0] w_tensor_i_2_s_reg_14245_pp1_iter6_reg;
reg   [7:0] w_tensor_i_2_10_reg_14250;
reg   [7:0] w_tensor_i_2_11_reg_14255;
reg  signed [7:0] w_tensor_i_2_11_reg_14255_pp1_iter6_reg;
reg   [7:0] w_tensor_i_2_12_reg_14260;
reg   [7:0] w_tensor_i_2_13_reg_14265;
reg  signed [7:0] w_tensor_i_2_13_reg_14265_pp1_iter6_reg;
reg   [7:0] w_tensor_i_2_14_reg_14270;
reg   [7:0] w_tensor_i_3_reg_14275;
reg  signed [7:0] w_tensor_i_3_reg_14275_pp1_iter6_reg;
reg   [7:0] w_tensor_i_3_1_reg_14280;
reg   [7:0] w_tensor_i_3_2_reg_14285;
reg  signed [7:0] w_tensor_i_3_2_reg_14285_pp1_iter6_reg;
reg   [7:0] w_tensor_i_3_3_reg_14290;
reg   [7:0] w_tensor_i_3_4_reg_14295;
reg  signed [7:0] w_tensor_i_3_4_reg_14295_pp1_iter6_reg;
reg   [7:0] w_tensor_i_3_5_reg_14300;
reg   [7:0] w_tensor_i_3_6_reg_14305;
reg  signed [7:0] w_tensor_i_3_6_reg_14305_pp1_iter6_reg;
reg   [7:0] w_tensor_i_3_7_reg_14310;
reg   [7:0] w_tensor_i_3_8_reg_14315;
reg  signed [7:0] w_tensor_i_3_8_reg_14315_pp1_iter6_reg;
reg   [7:0] w_tensor_i_3_9_reg_14320;
reg   [7:0] w_tensor_i_3_s_reg_14325;
reg  signed [7:0] w_tensor_i_3_s_reg_14325_pp1_iter6_reg;
reg   [7:0] w_tensor_i_3_10_reg_14330;
reg   [7:0] w_tensor_i_3_11_reg_14335;
reg  signed [7:0] w_tensor_i_3_11_reg_14335_pp1_iter6_reg;
reg   [7:0] w_tensor_i_3_12_reg_14340;
reg   [7:0] w_tensor_i_3_13_reg_14345;
reg  signed [7:0] w_tensor_i_3_13_reg_14345_pp1_iter6_reg;
reg   [7:0] w_tensor_i_3_14_reg_14350;
reg   [7:0] w_tensor_i_4_reg_14355;
reg  signed [7:0] w_tensor_i_4_reg_14355_pp1_iter6_reg;
reg   [7:0] w_tensor_i_4_1_reg_14360;
reg   [7:0] w_tensor_i_4_2_reg_14365;
reg  signed [7:0] w_tensor_i_4_2_reg_14365_pp1_iter6_reg;
reg   [7:0] w_tensor_i_4_3_reg_14370;
reg   [7:0] w_tensor_i_4_4_reg_14375;
reg  signed [7:0] w_tensor_i_4_4_reg_14375_pp1_iter6_reg;
reg   [7:0] w_tensor_i_4_5_reg_14380;
reg   [7:0] w_tensor_i_4_6_reg_14385;
reg  signed [7:0] w_tensor_i_4_6_reg_14385_pp1_iter6_reg;
reg   [7:0] w_tensor_i_4_7_reg_14390;
reg   [7:0] w_tensor_i_4_8_reg_14395;
reg  signed [7:0] w_tensor_i_4_8_reg_14395_pp1_iter6_reg;
reg   [7:0] w_tensor_i_4_9_reg_14400;
reg   [7:0] w_tensor_i_4_s_reg_14405;
reg  signed [7:0] w_tensor_i_4_s_reg_14405_pp1_iter6_reg;
reg   [7:0] w_tensor_i_4_10_reg_14410;
reg   [7:0] w_tensor_i_4_11_reg_14415;
reg  signed [7:0] w_tensor_i_4_11_reg_14415_pp1_iter6_reg;
reg   [7:0] w_tensor_i_4_12_reg_14420;
reg   [7:0] w_tensor_i_4_13_reg_14425;
reg  signed [7:0] w_tensor_i_4_13_reg_14425_pp1_iter6_reg;
reg   [7:0] w_tensor_i_4_14_reg_14430;
reg   [7:0] w_tensor_i_5_reg_14435;
reg  signed [7:0] w_tensor_i_5_reg_14435_pp1_iter6_reg;
reg   [7:0] w_tensor_i_5_1_reg_14440;
reg   [7:0] w_tensor_i_5_2_reg_14445;
reg  signed [7:0] w_tensor_i_5_2_reg_14445_pp1_iter6_reg;
reg   [7:0] w_tensor_i_5_3_reg_14450;
reg   [7:0] w_tensor_i_5_4_reg_14455;
reg  signed [7:0] w_tensor_i_5_4_reg_14455_pp1_iter6_reg;
reg   [7:0] w_tensor_i_5_5_reg_14460;
reg   [7:0] w_tensor_i_5_6_reg_14465;
reg  signed [7:0] w_tensor_i_5_6_reg_14465_pp1_iter6_reg;
reg   [7:0] w_tensor_i_5_7_reg_14470;
reg   [7:0] w_tensor_i_5_8_reg_14475;
reg  signed [7:0] w_tensor_i_5_8_reg_14475_pp1_iter6_reg;
reg   [7:0] w_tensor_i_5_9_reg_14480;
reg   [7:0] w_tensor_i_5_s_reg_14485;
reg  signed [7:0] w_tensor_i_5_s_reg_14485_pp1_iter6_reg;
reg   [7:0] w_tensor_i_5_10_reg_14490;
reg   [7:0] w_tensor_i_5_11_reg_14495;
reg  signed [7:0] w_tensor_i_5_11_reg_14495_pp1_iter6_reg;
reg   [7:0] w_tensor_i_5_12_reg_14500;
reg   [7:0] w_tensor_i_5_13_reg_14505;
reg  signed [7:0] w_tensor_i_5_13_reg_14505_pp1_iter6_reg;
reg   [7:0] w_tensor_i_5_14_reg_14510;
reg   [7:0] w_tensor_i_6_reg_14515;
reg  signed [7:0] w_tensor_i_6_reg_14515_pp1_iter6_reg;
reg   [7:0] w_tensor_i_6_1_reg_14520;
reg   [7:0] w_tensor_i_6_2_reg_14525;
reg  signed [7:0] w_tensor_i_6_2_reg_14525_pp1_iter6_reg;
reg   [7:0] w_tensor_i_6_3_reg_14530;
reg   [7:0] w_tensor_i_6_4_reg_14535;
reg  signed [7:0] w_tensor_i_6_4_reg_14535_pp1_iter6_reg;
reg   [7:0] w_tensor_i_6_5_reg_14540;
reg   [7:0] w_tensor_i_6_6_reg_14545;
reg  signed [7:0] w_tensor_i_6_6_reg_14545_pp1_iter6_reg;
reg   [7:0] w_tensor_i_6_7_reg_14550;
reg   [7:0] w_tensor_i_6_8_reg_14555;
reg  signed [7:0] w_tensor_i_6_8_reg_14555_pp1_iter6_reg;
reg   [7:0] w_tensor_i_6_9_reg_14560;
reg   [7:0] w_tensor_i_6_s_reg_14565;
reg  signed [7:0] w_tensor_i_6_s_reg_14565_pp1_iter6_reg;
reg   [7:0] w_tensor_i_6_10_reg_14570;
reg   [7:0] w_tensor_i_6_11_reg_14575;
reg  signed [7:0] w_tensor_i_6_11_reg_14575_pp1_iter6_reg;
reg   [7:0] w_tensor_i_6_12_reg_14580;
reg   [7:0] w_tensor_i_6_13_reg_14585;
reg  signed [7:0] w_tensor_i_6_13_reg_14585_pp1_iter6_reg;
reg   [7:0] w_tensor_i_6_14_reg_14590;
reg   [7:0] w_tensor_i_7_reg_14595;
reg  signed [7:0] w_tensor_i_7_reg_14595_pp1_iter6_reg;
reg   [7:0] w_tensor_i_7_1_reg_14600;
reg   [7:0] w_tensor_i_7_2_reg_14605;
reg  signed [7:0] w_tensor_i_7_2_reg_14605_pp1_iter6_reg;
reg   [7:0] w_tensor_i_7_3_reg_14610;
reg   [7:0] w_tensor_i_7_4_reg_14615;
reg  signed [7:0] w_tensor_i_7_4_reg_14615_pp1_iter6_reg;
reg   [7:0] w_tensor_i_7_5_reg_14620;
reg   [7:0] w_tensor_i_7_6_reg_14625;
reg  signed [7:0] w_tensor_i_7_6_reg_14625_pp1_iter6_reg;
reg   [7:0] w_tensor_i_7_7_reg_14630;
reg   [7:0] w_tensor_i_7_8_reg_14635;
reg  signed [7:0] w_tensor_i_7_8_reg_14635_pp1_iter6_reg;
reg   [7:0] w_tensor_i_7_9_reg_14640;
reg   [7:0] w_tensor_i_7_s_reg_14645;
reg  signed [7:0] w_tensor_i_7_s_reg_14645_pp1_iter6_reg;
reg   [7:0] w_tensor_i_7_10_reg_14650;
reg   [7:0] w_tensor_i_7_11_reg_14655;
reg  signed [7:0] w_tensor_i_7_11_reg_14655_pp1_iter6_reg;
reg   [7:0] w_tensor_i_7_12_reg_14660;
reg   [7:0] w_tensor_i_7_13_reg_14665;
reg  signed [7:0] w_tensor_i_7_13_reg_14665_pp1_iter6_reg;
reg   [7:0] w_tensor_i_7_14_reg_14670;
reg   [7:0] w_tensor_i_8_reg_14675;
reg  signed [7:0] w_tensor_i_8_reg_14675_pp1_iter6_reg;
reg   [7:0] w_tensor_i_8_1_reg_14680;
reg   [7:0] w_tensor_i_8_2_reg_14685;
reg  signed [7:0] w_tensor_i_8_2_reg_14685_pp1_iter6_reg;
reg   [7:0] w_tensor_i_8_3_reg_14690;
reg   [7:0] w_tensor_i_8_4_reg_14695;
reg  signed [7:0] w_tensor_i_8_4_reg_14695_pp1_iter6_reg;
reg   [7:0] w_tensor_i_8_5_reg_14700;
reg   [7:0] w_tensor_i_8_6_reg_14705;
reg  signed [7:0] w_tensor_i_8_6_reg_14705_pp1_iter6_reg;
reg   [7:0] w_tensor_i_8_7_reg_14710;
reg   [7:0] w_tensor_i_8_8_reg_14715;
reg  signed [7:0] w_tensor_i_8_8_reg_14715_pp1_iter6_reg;
reg   [7:0] w_tensor_i_8_9_reg_14720;
reg   [7:0] w_tensor_i_8_s_reg_14725;
reg  signed [7:0] w_tensor_i_8_s_reg_14725_pp1_iter6_reg;
reg   [7:0] w_tensor_i_8_10_reg_14730;
reg   [7:0] w_tensor_i_8_11_reg_14735;
reg  signed [7:0] w_tensor_i_8_11_reg_14735_pp1_iter6_reg;
reg   [7:0] w_tensor_i_8_12_reg_14740;
reg   [7:0] w_tensor_i_8_13_reg_14745;
reg  signed [7:0] w_tensor_i_8_13_reg_14745_pp1_iter6_reg;
reg   [7:0] w_tensor_i_8_14_reg_14750;
reg   [7:0] w_tensor_i_9_reg_14755;
reg  signed [7:0] w_tensor_i_9_reg_14755_pp1_iter6_reg;
reg   [7:0] w_tensor_i_9_1_reg_14760;
reg   [7:0] w_tensor_i_9_2_reg_14765;
reg  signed [7:0] w_tensor_i_9_2_reg_14765_pp1_iter6_reg;
reg   [7:0] w_tensor_i_9_3_reg_14770;
reg   [7:0] w_tensor_i_9_4_reg_14775;
reg  signed [7:0] w_tensor_i_9_4_reg_14775_pp1_iter6_reg;
reg   [7:0] w_tensor_i_9_5_reg_14780;
reg   [7:0] w_tensor_i_9_6_reg_14785;
reg  signed [7:0] w_tensor_i_9_6_reg_14785_pp1_iter6_reg;
reg   [7:0] w_tensor_i_9_7_reg_14790;
reg   [7:0] w_tensor_i_9_8_reg_14795;
reg  signed [7:0] w_tensor_i_9_8_reg_14795_pp1_iter6_reg;
reg   [7:0] w_tensor_i_9_9_reg_14800;
reg   [7:0] w_tensor_i_9_s_reg_14805;
reg  signed [7:0] w_tensor_i_9_s_reg_14805_pp1_iter6_reg;
reg   [7:0] w_tensor_i_9_10_reg_14810;
reg   [7:0] w_tensor_i_9_11_reg_14815;
reg  signed [7:0] w_tensor_i_9_11_reg_14815_pp1_iter6_reg;
reg   [7:0] w_tensor_i_9_12_reg_14820;
reg   [7:0] w_tensor_i_9_13_reg_14825;
reg  signed [7:0] w_tensor_i_9_13_reg_14825_pp1_iter6_reg;
reg   [7:0] w_tensor_i_9_14_reg_14830;
reg   [7:0] w_tensor_i_s_reg_14835;
reg  signed [7:0] w_tensor_i_s_reg_14835_pp1_iter6_reg;
reg   [7:0] w_tensor_i_10_1_reg_14840;
reg   [7:0] w_tensor_i_10_2_reg_14845;
reg  signed [7:0] w_tensor_i_10_2_reg_14845_pp1_iter6_reg;
reg   [7:0] w_tensor_i_10_3_reg_14850;
reg   [7:0] w_tensor_i_10_4_reg_14855;
reg  signed [7:0] w_tensor_i_10_4_reg_14855_pp1_iter6_reg;
reg   [7:0] w_tensor_i_10_5_reg_14860;
reg   [7:0] w_tensor_i_10_6_reg_14865;
reg  signed [7:0] w_tensor_i_10_6_reg_14865_pp1_iter6_reg;
reg   [7:0] w_tensor_i_10_7_reg_14870;
reg   [7:0] w_tensor_i_10_8_reg_14875;
reg  signed [7:0] w_tensor_i_10_8_reg_14875_pp1_iter6_reg;
reg   [7:0] w_tensor_i_10_9_reg_14880;
reg   [7:0] w_tensor_i_10_s_reg_14885;
reg  signed [7:0] w_tensor_i_10_s_reg_14885_pp1_iter6_reg;
reg   [7:0] w_tensor_i_10_10_reg_14890;
reg   [7:0] w_tensor_i_10_11_reg_14895;
reg  signed [7:0] w_tensor_i_10_11_reg_14895_pp1_iter6_reg;
reg   [7:0] w_tensor_i_10_12_reg_14900;
reg   [7:0] w_tensor_i_10_13_reg_14905;
reg  signed [7:0] w_tensor_i_10_13_reg_14905_pp1_iter6_reg;
reg   [7:0] w_tensor_i_10_14_reg_14910;
reg   [7:0] w_tensor_i_10_reg_14915;
reg  signed [7:0] w_tensor_i_10_reg_14915_pp1_iter6_reg;
reg   [7:0] w_tensor_i_11_1_reg_14920;
reg   [7:0] w_tensor_i_11_2_reg_14925;
reg  signed [7:0] w_tensor_i_11_2_reg_14925_pp1_iter6_reg;
reg   [7:0] w_tensor_i_11_3_reg_14930;
reg   [7:0] w_tensor_i_11_4_reg_14935;
reg  signed [7:0] w_tensor_i_11_4_reg_14935_pp1_iter6_reg;
reg   [7:0] w_tensor_i_11_5_reg_14940;
reg   [7:0] w_tensor_i_11_6_reg_14945;
reg  signed [7:0] w_tensor_i_11_6_reg_14945_pp1_iter6_reg;
reg   [7:0] w_tensor_i_11_7_reg_14950;
reg   [7:0] w_tensor_i_11_8_reg_14955;
reg  signed [7:0] w_tensor_i_11_8_reg_14955_pp1_iter6_reg;
reg   [7:0] w_tensor_i_11_9_reg_14960;
reg   [7:0] w_tensor_i_11_s_reg_14965;
reg  signed [7:0] w_tensor_i_11_s_reg_14965_pp1_iter6_reg;
reg   [7:0] w_tensor_i_11_10_reg_14970;
reg   [7:0] w_tensor_i_11_11_reg_14975;
reg  signed [7:0] w_tensor_i_11_11_reg_14975_pp1_iter6_reg;
reg   [7:0] w_tensor_i_11_12_reg_14980;
reg   [7:0] w_tensor_i_11_13_reg_14985;
reg  signed [7:0] w_tensor_i_11_13_reg_14985_pp1_iter6_reg;
reg   [7:0] w_tensor_i_11_14_reg_14990;
reg   [7:0] w_tensor_i_11_reg_14995;
reg  signed [7:0] w_tensor_i_11_reg_14995_pp1_iter6_reg;
reg   [7:0] w_tensor_i_12_1_reg_15000;
reg   [7:0] w_tensor_i_12_2_reg_15005;
reg  signed [7:0] w_tensor_i_12_2_reg_15005_pp1_iter6_reg;
reg   [7:0] w_tensor_i_12_3_reg_15010;
reg   [7:0] w_tensor_i_12_4_reg_15015;
reg  signed [7:0] w_tensor_i_12_4_reg_15015_pp1_iter6_reg;
reg   [7:0] w_tensor_i_12_5_reg_15020;
reg   [7:0] w_tensor_i_12_6_reg_15025;
reg  signed [7:0] w_tensor_i_12_6_reg_15025_pp1_iter6_reg;
reg   [7:0] w_tensor_i_12_7_reg_15030;
reg   [7:0] w_tensor_i_12_8_reg_15035;
reg  signed [7:0] w_tensor_i_12_8_reg_15035_pp1_iter6_reg;
reg   [7:0] w_tensor_i_12_9_reg_15040;
reg   [7:0] w_tensor_i_12_s_reg_15045;
reg  signed [7:0] w_tensor_i_12_s_reg_15045_pp1_iter6_reg;
reg   [7:0] w_tensor_i_12_10_reg_15050;
reg   [7:0] w_tensor_i_12_11_reg_15055;
reg  signed [7:0] w_tensor_i_12_11_reg_15055_pp1_iter6_reg;
reg   [7:0] w_tensor_i_12_12_reg_15060;
reg   [7:0] w_tensor_i_12_13_reg_15065;
reg  signed [7:0] w_tensor_i_12_13_reg_15065_pp1_iter6_reg;
reg   [7:0] w_tensor_i_12_14_reg_15070;
reg   [7:0] w_tensor_i_12_reg_15075;
reg  signed [7:0] w_tensor_i_12_reg_15075_pp1_iter6_reg;
reg   [7:0] w_tensor_i_13_1_reg_15080;
reg   [7:0] w_tensor_i_13_2_reg_15085;
reg  signed [7:0] w_tensor_i_13_2_reg_15085_pp1_iter6_reg;
reg   [7:0] w_tensor_i_13_3_reg_15090;
reg   [7:0] w_tensor_i_13_4_reg_15095;
reg  signed [7:0] w_tensor_i_13_4_reg_15095_pp1_iter6_reg;
reg   [7:0] w_tensor_i_13_5_reg_15100;
reg   [7:0] w_tensor_i_13_6_reg_15105;
reg  signed [7:0] w_tensor_i_13_6_reg_15105_pp1_iter6_reg;
reg   [7:0] w_tensor_i_13_7_reg_15110;
reg   [7:0] w_tensor_i_13_8_reg_15115;
reg  signed [7:0] w_tensor_i_13_8_reg_15115_pp1_iter6_reg;
reg   [7:0] w_tensor_i_13_9_reg_15120;
reg   [7:0] w_tensor_i_13_s_reg_15125;
reg  signed [7:0] w_tensor_i_13_s_reg_15125_pp1_iter6_reg;
reg   [7:0] w_tensor_i_13_10_reg_15130;
reg   [7:0] w_tensor_i_13_11_reg_15135;
reg  signed [7:0] w_tensor_i_13_11_reg_15135_pp1_iter6_reg;
reg   [7:0] w_tensor_i_13_12_reg_15140;
reg   [7:0] w_tensor_i_13_13_reg_15145;
reg  signed [7:0] w_tensor_i_13_13_reg_15145_pp1_iter6_reg;
reg   [7:0] w_tensor_i_13_14_reg_15150;
reg   [7:0] w_tensor_i_13_reg_15155;
reg  signed [7:0] w_tensor_i_13_reg_15155_pp1_iter6_reg;
reg   [7:0] w_tensor_i_14_1_reg_15160;
reg   [7:0] w_tensor_i_14_2_reg_15165;
reg  signed [7:0] w_tensor_i_14_2_reg_15165_pp1_iter6_reg;
reg   [7:0] w_tensor_i_14_3_reg_15170;
reg   [7:0] w_tensor_i_14_4_reg_15175;
reg  signed [7:0] w_tensor_i_14_4_reg_15175_pp1_iter6_reg;
reg   [7:0] w_tensor_i_14_5_reg_15180;
reg   [7:0] w_tensor_i_14_6_reg_15185;
reg  signed [7:0] w_tensor_i_14_6_reg_15185_pp1_iter6_reg;
reg   [7:0] w_tensor_i_14_7_reg_15190;
reg   [7:0] w_tensor_i_14_8_reg_15195;
reg  signed [7:0] w_tensor_i_14_8_reg_15195_pp1_iter6_reg;
reg   [7:0] w_tensor_i_14_9_reg_15200;
reg   [7:0] w_tensor_i_14_s_reg_15205;
reg  signed [7:0] w_tensor_i_14_s_reg_15205_pp1_iter6_reg;
reg   [7:0] w_tensor_i_14_10_reg_15210;
reg   [7:0] w_tensor_i_14_11_reg_15215;
reg  signed [7:0] w_tensor_i_14_11_reg_15215_pp1_iter6_reg;
reg   [7:0] w_tensor_i_14_12_reg_15220;
reg   [7:0] w_tensor_i_14_13_reg_15225;
reg  signed [7:0] w_tensor_i_14_13_reg_15225_pp1_iter6_reg;
reg   [7:0] w_tensor_i_14_14_reg_15230;
reg   [7:0] w_tensor_i_14_reg_15235;
reg  signed [7:0] w_tensor_i_14_reg_15235_pp1_iter6_reg;
reg   [7:0] w_tensor_i_15_1_reg_15240;
reg   [7:0] w_tensor_i_15_2_reg_15245;
reg  signed [7:0] w_tensor_i_15_2_reg_15245_pp1_iter6_reg;
reg   [7:0] w_tensor_i_15_3_reg_15250;
reg   [7:0] w_tensor_i_15_4_reg_15255;
reg  signed [7:0] w_tensor_i_15_4_reg_15255_pp1_iter6_reg;
reg   [7:0] w_tensor_i_15_5_reg_15260;
reg   [7:0] w_tensor_i_15_6_reg_15265;
reg  signed [7:0] w_tensor_i_15_6_reg_15265_pp1_iter6_reg;
reg   [7:0] w_tensor_i_15_7_reg_15270;
reg   [7:0] w_tensor_i_15_8_reg_15275;
reg  signed [7:0] w_tensor_i_15_8_reg_15275_pp1_iter6_reg;
reg   [7:0] w_tensor_i_15_9_reg_15280;
reg   [7:0] w_tensor_i_15_s_reg_15285;
reg  signed [7:0] w_tensor_i_15_s_reg_15285_pp1_iter6_reg;
reg   [7:0] w_tensor_i_15_10_reg_15290;
reg   [7:0] w_tensor_i_15_11_reg_15295;
reg  signed [7:0] w_tensor_i_15_11_reg_15295_pp1_iter6_reg;
reg   [7:0] w_tensor_i_15_12_reg_15300;
reg   [7:0] w_tensor_i_15_13_reg_15305;
reg  signed [7:0] w_tensor_i_15_13_reg_15305_pp1_iter6_reg;
reg   [7:0] w_tensor_i_15_14_reg_15310;
wire   [7:0] trunc_ln647_3_fu_7449_p1;
reg   [7:0] trunc_ln647_3_reg_15315;
reg   [7:0] trunc_ln647_3_reg_15315_pp1_iter6_reg;
reg   [7:0] i_tensor_i_0_1_reg_15320;
reg   [7:0] i_tensor_i_0_2_reg_15325;
reg   [7:0] i_tensor_i_0_2_reg_15325_pp1_iter6_reg;
reg   [7:0] i_tensor_i_0_3_reg_15330;
reg   [7:0] i_tensor_i_0_4_reg_15335;
reg   [7:0] i_tensor_i_0_4_reg_15335_pp1_iter6_reg;
reg   [7:0] i_tensor_i_0_5_reg_15340;
reg   [7:0] i_tensor_i_0_6_reg_15345;
reg   [7:0] i_tensor_i_0_6_reg_15345_pp1_iter6_reg;
reg   [7:0] i_tensor_i_0_7_reg_15350;
reg   [7:0] i_tensor_i_0_8_reg_15355;
reg   [7:0] i_tensor_i_0_8_reg_15355_pp1_iter6_reg;
reg   [7:0] i_tensor_i_0_9_reg_15360;
reg   [7:0] i_tensor_i_0_s_reg_15365;
reg   [7:0] i_tensor_i_0_s_reg_15365_pp1_iter6_reg;
reg   [7:0] i_tensor_i_0_10_reg_15370;
reg   [7:0] i_tensor_i_0_11_reg_15375;
reg   [7:0] i_tensor_i_0_11_reg_15375_pp1_iter6_reg;
reg   [7:0] i_tensor_i_0_12_reg_15380;
reg   [7:0] i_tensor_i_0_13_reg_15385;
reg   [7:0] i_tensor_i_0_13_reg_15385_pp1_iter6_reg;
reg   [7:0] i_tensor_i_0_14_reg_15390;
wire   [15:0] mul_ln1352_1_fu_7609_p2;
reg  signed [15:0] mul_ln1352_1_reg_15395;
wire   [15:0] mul_ln1352_3_fu_7621_p2;
reg  signed [15:0] mul_ln1352_3_reg_15400;
wire   [15:0] mul_ln1352_5_fu_7633_p2;
reg  signed [15:0] mul_ln1352_5_reg_15405;
wire   [15:0] mul_ln1352_7_fu_7645_p2;
reg  signed [15:0] mul_ln1352_7_reg_15410;
wire   [15:0] mul_ln1352_9_fu_7657_p2;
reg  signed [15:0] mul_ln1352_9_reg_15415;
wire   [15:0] mul_ln1352_11_fu_7669_p2;
reg  signed [15:0] mul_ln1352_11_reg_15420;
wire   [15:0] mul_ln1352_13_fu_7681_p2;
reg  signed [15:0] mul_ln1352_13_reg_15425;
wire   [15:0] mul_ln1352_15_fu_7693_p2;
reg  signed [15:0] mul_ln1352_15_reg_15430;
wire   [15:0] mul_ln1352_17_fu_7702_p2;
reg  signed [15:0] mul_ln1352_17_reg_15435;
wire   [15:0] mul_ln1352_19_fu_7711_p2;
reg  signed [15:0] mul_ln1352_19_reg_15440;
wire   [15:0] mul_ln1352_21_fu_7720_p2;
reg  signed [15:0] mul_ln1352_21_reg_15445;
wire   [15:0] mul_ln1352_23_fu_7729_p2;
reg  signed [15:0] mul_ln1352_23_reg_15450;
wire   [15:0] mul_ln1352_25_fu_7738_p2;
reg  signed [15:0] mul_ln1352_25_reg_15455;
wire   [15:0] mul_ln1352_27_fu_7747_p2;
reg  signed [15:0] mul_ln1352_27_reg_15460;
wire   [15:0] mul_ln1352_29_fu_7756_p2;
reg  signed [15:0] mul_ln1352_29_reg_15465;
wire   [15:0] mul_ln1352_31_fu_7765_p2;
reg  signed [15:0] mul_ln1352_31_reg_15470;
wire   [15:0] mul_ln1352_33_fu_7774_p2;
reg  signed [15:0] mul_ln1352_33_reg_15475;
wire   [15:0] mul_ln1352_35_fu_7783_p2;
reg  signed [15:0] mul_ln1352_35_reg_15480;
wire   [15:0] mul_ln1352_37_fu_7792_p2;
reg  signed [15:0] mul_ln1352_37_reg_15485;
wire   [15:0] mul_ln1352_39_fu_7801_p2;
reg  signed [15:0] mul_ln1352_39_reg_15490;
wire   [15:0] mul_ln1352_41_fu_7810_p2;
reg  signed [15:0] mul_ln1352_41_reg_15495;
wire   [15:0] mul_ln1352_43_fu_7819_p2;
reg  signed [15:0] mul_ln1352_43_reg_15500;
wire   [15:0] mul_ln1352_45_fu_7828_p2;
reg  signed [15:0] mul_ln1352_45_reg_15505;
wire   [15:0] mul_ln1352_47_fu_7837_p2;
reg  signed [15:0] mul_ln1352_47_reg_15510;
wire   [15:0] mul_ln1352_49_fu_7846_p2;
reg  signed [15:0] mul_ln1352_49_reg_15515;
wire   [15:0] mul_ln1352_51_fu_7855_p2;
reg  signed [15:0] mul_ln1352_51_reg_15520;
wire   [15:0] mul_ln1352_53_fu_7864_p2;
reg  signed [15:0] mul_ln1352_53_reg_15525;
wire   [15:0] mul_ln1352_55_fu_7873_p2;
reg  signed [15:0] mul_ln1352_55_reg_15530;
wire   [15:0] mul_ln1352_57_fu_7882_p2;
reg  signed [15:0] mul_ln1352_57_reg_15535;
wire   [15:0] mul_ln1352_59_fu_7891_p2;
reg  signed [15:0] mul_ln1352_59_reg_15540;
wire   [15:0] mul_ln1352_61_fu_7900_p2;
reg  signed [15:0] mul_ln1352_61_reg_15545;
wire   [15:0] mul_ln1352_63_fu_7909_p2;
reg  signed [15:0] mul_ln1352_63_reg_15550;
wire   [15:0] mul_ln1352_65_fu_7918_p2;
reg  signed [15:0] mul_ln1352_65_reg_15555;
wire   [15:0] mul_ln1352_67_fu_7927_p2;
reg  signed [15:0] mul_ln1352_67_reg_15560;
wire   [15:0] mul_ln1352_69_fu_7936_p2;
reg  signed [15:0] mul_ln1352_69_reg_15565;
wire   [15:0] mul_ln1352_71_fu_7945_p2;
reg  signed [15:0] mul_ln1352_71_reg_15570;
wire   [15:0] mul_ln1352_73_fu_7954_p2;
reg  signed [15:0] mul_ln1352_73_reg_15575;
wire   [15:0] mul_ln1352_75_fu_7963_p2;
reg  signed [15:0] mul_ln1352_75_reg_15580;
wire   [15:0] mul_ln1352_77_fu_7972_p2;
reg  signed [15:0] mul_ln1352_77_reg_15585;
wire   [15:0] mul_ln1352_79_fu_7981_p2;
reg  signed [15:0] mul_ln1352_79_reg_15590;
wire   [15:0] mul_ln1352_81_fu_7990_p2;
reg  signed [15:0] mul_ln1352_81_reg_15595;
wire   [15:0] mul_ln1352_83_fu_7999_p2;
reg  signed [15:0] mul_ln1352_83_reg_15600;
wire   [15:0] mul_ln1352_85_fu_8008_p2;
reg  signed [15:0] mul_ln1352_85_reg_15605;
wire   [15:0] mul_ln1352_87_fu_8017_p2;
reg  signed [15:0] mul_ln1352_87_reg_15610;
wire   [15:0] mul_ln1352_89_fu_8026_p2;
reg  signed [15:0] mul_ln1352_89_reg_15615;
wire   [15:0] mul_ln1352_91_fu_8035_p2;
reg  signed [15:0] mul_ln1352_91_reg_15620;
wire   [15:0] mul_ln1352_93_fu_8044_p2;
reg  signed [15:0] mul_ln1352_93_reg_15625;
wire   [15:0] mul_ln1352_95_fu_8053_p2;
reg  signed [15:0] mul_ln1352_95_reg_15630;
wire   [15:0] mul_ln1352_97_fu_8062_p2;
reg  signed [15:0] mul_ln1352_97_reg_15635;
wire   [15:0] mul_ln1352_99_fu_8071_p2;
reg  signed [15:0] mul_ln1352_99_reg_15640;
wire   [15:0] mul_ln1352_101_fu_8080_p2;
reg  signed [15:0] mul_ln1352_101_reg_15645;
wire   [15:0] mul_ln1352_103_fu_8089_p2;
reg  signed [15:0] mul_ln1352_103_reg_15650;
wire   [15:0] mul_ln1352_105_fu_8098_p2;
reg  signed [15:0] mul_ln1352_105_reg_15655;
wire   [15:0] mul_ln1352_107_fu_8107_p2;
reg  signed [15:0] mul_ln1352_107_reg_15660;
wire   [15:0] mul_ln1352_109_fu_8116_p2;
reg  signed [15:0] mul_ln1352_109_reg_15665;
wire   [15:0] mul_ln1352_111_fu_8125_p2;
reg  signed [15:0] mul_ln1352_111_reg_15670;
wire   [15:0] mul_ln1352_113_fu_8134_p2;
reg  signed [15:0] mul_ln1352_113_reg_15675;
wire   [15:0] mul_ln1352_115_fu_8143_p2;
reg  signed [15:0] mul_ln1352_115_reg_15680;
wire   [15:0] mul_ln1352_117_fu_8152_p2;
reg  signed [15:0] mul_ln1352_117_reg_15685;
wire   [15:0] mul_ln1352_119_fu_8161_p2;
reg  signed [15:0] mul_ln1352_119_reg_15690;
wire   [15:0] mul_ln1352_121_fu_8170_p2;
reg  signed [15:0] mul_ln1352_121_reg_15695;
wire   [15:0] mul_ln1352_123_fu_8179_p2;
reg  signed [15:0] mul_ln1352_123_reg_15700;
wire   [15:0] mul_ln1352_125_fu_8188_p2;
reg  signed [15:0] mul_ln1352_125_reg_15705;
wire   [15:0] mul_ln1352_127_fu_8197_p2;
reg  signed [15:0] mul_ln1352_127_reg_15710;
wire   [15:0] mul_ln1352_129_fu_8206_p2;
reg  signed [15:0] mul_ln1352_129_reg_15715;
wire   [15:0] mul_ln1352_131_fu_8215_p2;
reg  signed [15:0] mul_ln1352_131_reg_15720;
wire   [15:0] mul_ln1352_133_fu_8224_p2;
reg  signed [15:0] mul_ln1352_133_reg_15725;
wire   [15:0] mul_ln1352_135_fu_8233_p2;
reg  signed [15:0] mul_ln1352_135_reg_15730;
wire   [15:0] mul_ln1352_137_fu_8242_p2;
reg  signed [15:0] mul_ln1352_137_reg_15735;
wire   [15:0] mul_ln1352_139_fu_8251_p2;
reg  signed [15:0] mul_ln1352_139_reg_15740;
wire   [15:0] mul_ln1352_141_fu_8260_p2;
reg  signed [15:0] mul_ln1352_141_reg_15745;
wire   [15:0] mul_ln1352_143_fu_8269_p2;
reg  signed [15:0] mul_ln1352_143_reg_15750;
wire   [15:0] mul_ln1352_145_fu_8278_p2;
reg  signed [15:0] mul_ln1352_145_reg_15755;
wire   [15:0] mul_ln1352_147_fu_8287_p2;
reg  signed [15:0] mul_ln1352_147_reg_15760;
wire   [15:0] mul_ln1352_149_fu_8296_p2;
reg  signed [15:0] mul_ln1352_149_reg_15765;
wire   [15:0] mul_ln1352_151_fu_8305_p2;
reg  signed [15:0] mul_ln1352_151_reg_15770;
wire   [15:0] mul_ln1352_153_fu_8314_p2;
reg  signed [15:0] mul_ln1352_153_reg_15775;
wire   [15:0] mul_ln1352_155_fu_8323_p2;
reg  signed [15:0] mul_ln1352_155_reg_15780;
wire   [15:0] mul_ln1352_157_fu_8332_p2;
reg  signed [15:0] mul_ln1352_157_reg_15785;
wire   [15:0] mul_ln1352_159_fu_8341_p2;
reg  signed [15:0] mul_ln1352_159_reg_15790;
wire   [15:0] mul_ln1352_161_fu_8350_p2;
reg  signed [15:0] mul_ln1352_161_reg_15795;
wire   [15:0] mul_ln1352_163_fu_8359_p2;
reg  signed [15:0] mul_ln1352_163_reg_15800;
wire   [15:0] mul_ln1352_165_fu_8368_p2;
reg  signed [15:0] mul_ln1352_165_reg_15805;
wire   [15:0] mul_ln1352_167_fu_8377_p2;
reg  signed [15:0] mul_ln1352_167_reg_15810;
wire   [15:0] mul_ln1352_169_fu_8386_p2;
reg  signed [15:0] mul_ln1352_169_reg_15815;
wire   [15:0] mul_ln1352_171_fu_8395_p2;
reg  signed [15:0] mul_ln1352_171_reg_15820;
wire   [15:0] mul_ln1352_173_fu_8404_p2;
reg  signed [15:0] mul_ln1352_173_reg_15825;
wire   [15:0] mul_ln1352_175_fu_8413_p2;
reg  signed [15:0] mul_ln1352_175_reg_15830;
wire   [15:0] mul_ln1352_177_fu_8422_p2;
reg  signed [15:0] mul_ln1352_177_reg_15835;
wire   [15:0] mul_ln1352_179_fu_8431_p2;
reg  signed [15:0] mul_ln1352_179_reg_15840;
wire   [15:0] mul_ln1352_181_fu_8440_p2;
reg  signed [15:0] mul_ln1352_181_reg_15845;
wire   [15:0] mul_ln1352_183_fu_8449_p2;
reg  signed [15:0] mul_ln1352_183_reg_15850;
wire   [15:0] mul_ln1352_185_fu_8458_p2;
reg  signed [15:0] mul_ln1352_185_reg_15855;
wire   [15:0] mul_ln1352_187_fu_8467_p2;
reg  signed [15:0] mul_ln1352_187_reg_15860;
wire   [15:0] mul_ln1352_189_fu_8476_p2;
reg  signed [15:0] mul_ln1352_189_reg_15865;
wire   [15:0] mul_ln1352_191_fu_8485_p2;
reg  signed [15:0] mul_ln1352_191_reg_15870;
wire   [15:0] mul_ln1352_193_fu_8494_p2;
reg  signed [15:0] mul_ln1352_193_reg_15875;
wire   [15:0] mul_ln1352_195_fu_8503_p2;
reg  signed [15:0] mul_ln1352_195_reg_15880;
wire   [15:0] mul_ln1352_197_fu_8512_p2;
reg  signed [15:0] mul_ln1352_197_reg_15885;
wire   [15:0] mul_ln1352_199_fu_8521_p2;
reg  signed [15:0] mul_ln1352_199_reg_15890;
wire   [15:0] mul_ln1352_201_fu_8530_p2;
reg  signed [15:0] mul_ln1352_201_reg_15895;
wire   [15:0] mul_ln1352_203_fu_8539_p2;
reg  signed [15:0] mul_ln1352_203_reg_15900;
wire   [15:0] mul_ln1352_205_fu_8548_p2;
reg  signed [15:0] mul_ln1352_205_reg_15905;
wire   [15:0] mul_ln1352_207_fu_8557_p2;
reg  signed [15:0] mul_ln1352_207_reg_15910;
wire   [15:0] mul_ln1352_209_fu_8566_p2;
reg  signed [15:0] mul_ln1352_209_reg_15915;
wire   [15:0] mul_ln1352_211_fu_8575_p2;
reg  signed [15:0] mul_ln1352_211_reg_15920;
wire   [15:0] mul_ln1352_213_fu_8584_p2;
reg  signed [15:0] mul_ln1352_213_reg_15925;
wire   [15:0] mul_ln1352_215_fu_8593_p2;
reg  signed [15:0] mul_ln1352_215_reg_15930;
wire   [15:0] mul_ln1352_217_fu_8602_p2;
reg  signed [15:0] mul_ln1352_217_reg_15935;
wire   [15:0] mul_ln1352_219_fu_8611_p2;
reg  signed [15:0] mul_ln1352_219_reg_15940;
wire   [15:0] mul_ln1352_221_fu_8620_p2;
reg  signed [15:0] mul_ln1352_221_reg_15945;
wire   [15:0] mul_ln1352_223_fu_8629_p2;
reg  signed [15:0] mul_ln1352_223_reg_15950;
wire   [15:0] mul_ln1352_225_fu_8638_p2;
reg  signed [15:0] mul_ln1352_225_reg_15955;
wire   [15:0] mul_ln1352_227_fu_8647_p2;
reg  signed [15:0] mul_ln1352_227_reg_15960;
wire   [15:0] mul_ln1352_229_fu_8656_p2;
reg  signed [15:0] mul_ln1352_229_reg_15965;
wire   [15:0] mul_ln1352_231_fu_8665_p2;
reg  signed [15:0] mul_ln1352_231_reg_15970;
wire   [15:0] mul_ln1352_233_fu_8674_p2;
reg  signed [15:0] mul_ln1352_233_reg_15975;
wire   [15:0] mul_ln1352_235_fu_8683_p2;
reg  signed [15:0] mul_ln1352_235_reg_15980;
wire   [15:0] mul_ln1352_237_fu_8692_p2;
reg  signed [15:0] mul_ln1352_237_reg_15985;
wire   [15:0] mul_ln1352_239_fu_8701_p2;
reg  signed [15:0] mul_ln1352_239_reg_15990;
wire   [15:0] mul_ln1352_241_fu_8710_p2;
reg  signed [15:0] mul_ln1352_241_reg_15995;
wire   [15:0] mul_ln1352_243_fu_8719_p2;
reg  signed [15:0] mul_ln1352_243_reg_16000;
wire   [15:0] mul_ln1352_245_fu_8728_p2;
reg  signed [15:0] mul_ln1352_245_reg_16005;
wire   [15:0] mul_ln1352_247_fu_8737_p2;
reg  signed [15:0] mul_ln1352_247_reg_16010;
wire   [15:0] mul_ln1352_249_fu_8746_p2;
reg  signed [15:0] mul_ln1352_249_reg_16015;
wire   [15:0] mul_ln1352_251_fu_8755_p2;
reg  signed [15:0] mul_ln1352_251_reg_16020;
wire   [15:0] mul_ln1352_253_fu_8764_p2;
reg  signed [15:0] mul_ln1352_253_reg_16025;
wire   [15:0] mul_ln1352_255_fu_8773_p2;
reg  signed [15:0] mul_ln1352_255_reg_16030;
wire   [63:0] zext_ln544_2_fu_8779_p1;
reg   [63:0] zext_ln544_2_reg_16035;
reg   [63:0] zext_ln544_2_reg_16035_pp1_iter8_reg;
reg   [10:0] acc_mem_V_addr_1_reg_16040;
reg   [10:0] acc_mem_V_addr_1_reg_16040_pp1_iter8_reg;
wire   [17:0] add_ln700_2_fu_8861_p2;
reg   [17:0] add_ln700_2_reg_16046;
wire   [17:0] add_ln700_5_fu_8873_p2;
reg   [17:0] add_ln700_5_reg_16051;
wire   [17:0] add_ln700_9_fu_8885_p2;
reg   [17:0] add_ln700_9_reg_16056;
wire   [17:0] add_ln700_12_fu_8897_p2;
reg   [17:0] add_ln700_12_reg_16061;
wire   [17:0] add_ln700_18_fu_8957_p2;
reg   [17:0] add_ln700_18_reg_16066;
wire   [17:0] add_ln700_21_fu_8969_p2;
reg   [17:0] add_ln700_21_reg_16071;
wire   [17:0] add_ln700_25_fu_8981_p2;
reg   [17:0] add_ln700_25_reg_16076;
wire   [17:0] add_ln700_28_fu_8993_p2;
reg   [17:0] add_ln700_28_reg_16081;
wire   [17:0] add_ln700_34_fu_9053_p2;
reg   [17:0] add_ln700_34_reg_16086;
wire   [17:0] add_ln700_37_fu_9065_p2;
reg   [17:0] add_ln700_37_reg_16091;
wire   [17:0] add_ln700_41_fu_9077_p2;
reg   [17:0] add_ln700_41_reg_16096;
wire   [17:0] add_ln700_44_fu_9089_p2;
reg   [17:0] add_ln700_44_reg_16101;
wire   [17:0] add_ln700_50_fu_9149_p2;
reg   [17:0] add_ln700_50_reg_16106;
wire   [17:0] add_ln700_53_fu_9161_p2;
reg   [17:0] add_ln700_53_reg_16111;
wire   [17:0] add_ln700_57_fu_9173_p2;
reg   [17:0] add_ln700_57_reg_16116;
wire   [17:0] add_ln700_60_fu_9185_p2;
reg   [17:0] add_ln700_60_reg_16121;
wire   [17:0] add_ln700_66_fu_9245_p2;
reg   [17:0] add_ln700_66_reg_16126;
wire   [17:0] add_ln700_69_fu_9257_p2;
reg   [17:0] add_ln700_69_reg_16131;
wire   [17:0] add_ln700_73_fu_9269_p2;
reg   [17:0] add_ln700_73_reg_16136;
wire   [17:0] add_ln700_76_fu_9281_p2;
reg   [17:0] add_ln700_76_reg_16141;
wire   [17:0] add_ln700_82_fu_9341_p2;
reg   [17:0] add_ln700_82_reg_16146;
wire   [17:0] add_ln700_85_fu_9353_p2;
reg   [17:0] add_ln700_85_reg_16151;
wire   [17:0] add_ln700_89_fu_9365_p2;
reg   [17:0] add_ln700_89_reg_16156;
wire   [17:0] add_ln700_92_fu_9377_p2;
reg   [17:0] add_ln700_92_reg_16161;
wire   [17:0] add_ln700_98_fu_9437_p2;
reg   [17:0] add_ln700_98_reg_16166;
wire   [17:0] add_ln700_101_fu_9449_p2;
reg   [17:0] add_ln700_101_reg_16171;
wire   [17:0] add_ln700_105_fu_9461_p2;
reg   [17:0] add_ln700_105_reg_16176;
wire   [17:0] add_ln700_108_fu_9473_p2;
reg   [17:0] add_ln700_108_reg_16181;
wire   [17:0] add_ln700_114_fu_9533_p2;
reg   [17:0] add_ln700_114_reg_16186;
wire   [17:0] add_ln700_117_fu_9545_p2;
reg   [17:0] add_ln700_117_reg_16191;
wire   [17:0] add_ln700_121_fu_9557_p2;
reg   [17:0] add_ln700_121_reg_16196;
wire   [17:0] add_ln700_124_fu_9569_p2;
reg   [17:0] add_ln700_124_reg_16201;
wire   [17:0] add_ln700_130_fu_9629_p2;
reg   [17:0] add_ln700_130_reg_16206;
wire   [17:0] add_ln700_133_fu_9641_p2;
reg   [17:0] add_ln700_133_reg_16211;
wire   [17:0] add_ln700_137_fu_9653_p2;
reg   [17:0] add_ln700_137_reg_16216;
wire   [17:0] add_ln700_140_fu_9665_p2;
reg   [17:0] add_ln700_140_reg_16221;
wire   [17:0] add_ln700_146_fu_9725_p2;
reg   [17:0] add_ln700_146_reg_16226;
wire   [17:0] add_ln700_149_fu_9737_p2;
reg   [17:0] add_ln700_149_reg_16231;
wire   [17:0] add_ln700_153_fu_9749_p2;
reg   [17:0] add_ln700_153_reg_16236;
wire   [17:0] add_ln700_156_fu_9761_p2;
reg   [17:0] add_ln700_156_reg_16241;
wire   [17:0] add_ln700_162_fu_9821_p2;
reg   [17:0] add_ln700_162_reg_16246;
wire   [17:0] add_ln700_165_fu_9833_p2;
reg   [17:0] add_ln700_165_reg_16251;
wire   [17:0] add_ln700_169_fu_9845_p2;
reg   [17:0] add_ln700_169_reg_16256;
wire   [17:0] add_ln700_172_fu_9857_p2;
reg   [17:0] add_ln700_172_reg_16261;
wire   [17:0] add_ln700_178_fu_9917_p2;
reg   [17:0] add_ln700_178_reg_16266;
wire   [17:0] add_ln700_181_fu_9929_p2;
reg   [17:0] add_ln700_181_reg_16271;
wire   [17:0] add_ln700_185_fu_9941_p2;
reg   [17:0] add_ln700_185_reg_16276;
wire   [17:0] add_ln700_188_fu_9953_p2;
reg   [17:0] add_ln700_188_reg_16281;
wire   [17:0] add_ln700_194_fu_10013_p2;
reg   [17:0] add_ln700_194_reg_16286;
wire   [17:0] add_ln700_197_fu_10025_p2;
reg   [17:0] add_ln700_197_reg_16291;
wire   [17:0] add_ln700_201_fu_10037_p2;
reg   [17:0] add_ln700_201_reg_16296;
wire   [17:0] add_ln700_204_fu_10049_p2;
reg   [17:0] add_ln700_204_reg_16301;
wire   [17:0] add_ln700_210_fu_10109_p2;
reg   [17:0] add_ln700_210_reg_16306;
wire   [17:0] add_ln700_213_fu_10121_p2;
reg   [17:0] add_ln700_213_reg_16311;
wire   [17:0] add_ln700_217_fu_10133_p2;
reg   [17:0] add_ln700_217_reg_16316;
wire   [17:0] add_ln700_220_fu_10145_p2;
reg   [17:0] add_ln700_220_reg_16321;
wire   [17:0] add_ln700_226_fu_10205_p2;
reg   [17:0] add_ln700_226_reg_16326;
wire   [17:0] add_ln700_229_fu_10217_p2;
reg   [17:0] add_ln700_229_reg_16331;
wire   [17:0] add_ln700_233_fu_10229_p2;
reg   [17:0] add_ln700_233_reg_16336;
wire   [17:0] add_ln700_236_fu_10241_p2;
reg   [17:0] add_ln700_236_reg_16341;
wire   [17:0] add_ln700_242_fu_10301_p2;
reg   [17:0] add_ln700_242_reg_16346;
wire   [17:0] add_ln700_245_fu_10313_p2;
reg   [17:0] add_ln700_245_reg_16351;
wire   [17:0] add_ln700_249_fu_10325_p2;
reg   [17:0] add_ln700_249_reg_16356;
wire   [17:0] add_ln700_252_fu_10337_p2;
reg   [17:0] add_ln700_252_reg_16361;
wire   [31:0] a_tensor_0_0_V_fu_10343_p1;
reg   [31:0] a_tensor_0_0_V_reg_16366;
wire   [19:0] add_ln700_14_fu_10379_p2;
reg   [19:0] add_ln700_14_reg_16371;
wire   [19:0] add_ln700_30_fu_10417_p2;
reg   [19:0] add_ln700_30_reg_16376;
wire   [19:0] add_ln700_46_fu_10455_p2;
reg   [19:0] add_ln700_46_reg_16381;
wire   [19:0] add_ln700_62_fu_10493_p2;
reg   [19:0] add_ln700_62_reg_16386;
wire   [19:0] add_ln700_78_fu_10531_p2;
reg   [19:0] add_ln700_78_reg_16391;
wire   [19:0] add_ln700_94_fu_10569_p2;
reg   [19:0] add_ln700_94_reg_16396;
wire   [19:0] add_ln700_110_fu_10607_p2;
reg   [19:0] add_ln700_110_reg_16401;
wire   [19:0] add_ln700_126_fu_10645_p2;
reg   [19:0] add_ln700_126_reg_16406;
wire   [19:0] add_ln700_142_fu_10683_p2;
reg   [19:0] add_ln700_142_reg_16411;
wire   [19:0] add_ln700_158_fu_10721_p2;
reg   [19:0] add_ln700_158_reg_16416;
wire   [19:0] add_ln700_174_fu_10759_p2;
reg   [19:0] add_ln700_174_reg_16421;
wire   [19:0] add_ln700_190_fu_10797_p2;
reg   [19:0] add_ln700_190_reg_16426;
wire   [19:0] add_ln700_206_fu_10835_p2;
reg   [19:0] add_ln700_206_reg_16431;
wire   [19:0] add_ln700_222_fu_10873_p2;
reg   [19:0] add_ln700_222_reg_16436;
wire   [19:0] add_ln700_238_fu_10911_p2;
reg   [19:0] add_ln700_238_reg_16441;
wire   [19:0] add_ln700_254_fu_10949_p2;
reg   [19:0] add_ln700_254_reg_16446;
wire   [15:0] y_fu_11353_p2;
reg   [15:0] y_reg_16454;
wire    ap_CS_fsm_state38;
wire   [35:0] add_ln88_fu_11371_p2;
reg   [35:0] add_ln88_reg_16459;
wire   [0:0] icmp_ln86_fu_11348_p2;
wire   [15:0] shl_ln89_fu_11386_p2;
reg   [15:0] shl_ln89_reg_16470;
wire    ap_CS_fsm_state45;
wire   [0:0] icmp_ln89_fu_11392_p2;
wire    ap_block_state46_pp2_stage0_iter0;
reg    ap_block_state47_pp2_stage0_iter1;
wire    ap_block_state48_pp2_stage0_iter2;
wire    ap_block_state49_pp2_stage0_iter3;
reg    ap_block_pp2_stage0_11001;
reg   [0:0] icmp_ln89_reg_16475_pp2_iter1_reg;
reg   [0:0] icmp_ln89_reg_16475_pp2_iter2_reg;
wire   [18:0] add_ln89_fu_11397_p2;
reg    ap_enable_reg_pp2_iter0;
reg   [12:0] lshr_ln2_reg_16484;
reg   [12:0] lshr_ln2_reg_16484_pp2_iter1_reg;
reg   [12:0] lshr_ln2_reg_16484_pp2_iter2_reg;
wire   [2:0] trunc_ln89_1_fu_11422_p1;
reg   [2:0] trunc_ln89_1_reg_16489;
reg   [2:0] trunc_ln89_1_reg_16489_pp2_iter1_reg;
reg   [63:0] data_port_addr_read_reg_16495;
wire   [8:0] shl_ln89_2_fu_11426_p3;
reg   [8:0] shl_ln89_2_reg_16500;
wire   [8:0] empty_16_fu_11433_p2;
reg   [8:0] empty_16_reg_16505;
wire   [0:0] icmp_ln89_1_fu_11439_p2;
reg   [0:0] icmp_ln89_1_reg_16510;
reg   [0:0] icmp_ln89_1_reg_16510_pp2_iter2_reg;
wire   [511:0] shl_ln89_1_fu_11499_p2;
reg   [511:0] shl_ln89_1_reg_16518;
wire   [511:0] and_ln89_fu_11517_p2;
reg   [511:0] and_ln89_reg_16524;
wire   [63:0] shl_ln89_4_fu_11534_p2;
reg   [63:0] shl_ln89_4_reg_16529;
wire   [15:0] add_ln700_266_fu_11565_p2;
wire    ap_CS_fsm_state50;
wire   [31:0] add_ln700_267_fu_11571_p2;
reg   [14:0] trunc_ln4_reg_16549;
wire    ap_CS_fsm_state57;
wire   [0:0] icmp_ln480_fu_11590_p2;
wire    ap_block_state58_pp3_stage0_iter0;
reg    ap_block_state59_pp3_stage0_iter1;
wire    ap_block_state60_pp3_stage0_iter2;
reg    ap_block_pp3_stage0_11001;
reg   [0:0] icmp_ln480_reg_16554_pp3_iter1_reg;
wire   [15:0] add_ln480_fu_11596_p2;
reg    ap_enable_reg_pp3_iter0;
wire   [14:0] add_ln480_2_fu_11606_p2;
reg   [14:0] add_ln480_2_reg_16563;
reg   [14:0] add_ln480_2_reg_16563_pp3_iter1_reg;
reg   [31:0] uop_port_addr_read_reg_16568;
reg    ap_block_state63_io;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state10;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage1_subdone;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state28;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter4;
reg    ap_enable_reg_pp1_iter5;
reg    ap_enable_reg_pp1_iter6;
reg    ap_enable_reg_pp1_iter7;
reg    ap_enable_reg_pp1_iter9;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state46;
reg    ap_enable_reg_pp2_iter2;
reg    ap_enable_reg_pp2_iter3;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state58;
reg    ap_enable_reg_pp3_iter2;
reg   [59:0] ap_phi_mux_indvar_flatten71_phi_fu_1092_p4;
wire    ap_block_pp0_stage0;
reg   [11:0] ap_phi_mux_dst_offset_in_V_1_phi_fu_1103_p4;
reg   [11:0] ap_phi_mux_src_offset_in_V_1_phi_fu_1114_p4;
reg   [45:0] ap_phi_mux_indvar_flatten25_phi_fu_1125_p4;
reg   [11:0] ap_phi_mux_dst_offset_in_0_i175_phi_fu_1136_p4;
reg   [11:0] ap_phi_mux_src_offset_in_0_i176_phi_fu_1147_p4;
reg   [31:0] ap_phi_mux_upc_0_i180_phi_fu_1157_p4;
reg   [11:0] ap_phi_mux_dst_offset_in_0_i_phi_fu_1222_p4;
wire    ap_block_pp1_stage0;
reg   [11:0] ap_phi_mux_src_offset_in_0_i_phi_fu_1234_p4;
reg   [10:0] ap_phi_mux_wgt_offset_in_0_i_phi_fu_1246_p4;
reg   [31:0] ap_phi_mux_upc_0_i_phi_fu_1257_p4;
reg   [15:0] sram_idx_V_assign_0_reg_1264;
reg   [31:0] dram_idx_assign_0_reg_1274;
reg   [15:0] i_op_assign_reg_1284;
wire  signed [63:0] sext_ln353_fu_2117_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln544_3_fu_2148_p1;
wire  signed [63:0] sext_ln265_fu_4847_p1;
wire   [63:0] zext_ln544_fu_4892_p1;
wire   [63:0] zext_ln544_1_fu_4897_p1;
wire   [63:0] zext_ln89_1_fu_11540_p1;
wire   [63:0] zext_ln480_3_fu_11611_p1;
wire   [63:0] zext_ln480_2_fu_1869_p1;
wire   [63:0] zext_ln88_fu_11376_p1;
reg   [7:0] o_tensor_0_0_V_fu_812;
reg   [7:0] o_tensor_0_1_V_fu_816;
reg   [7:0] o_tensor_0_2_V_fu_820;
reg   [7:0] o_tensor_0_3_V_fu_824;
reg   [7:0] o_tensor_0_4_V_fu_828;
reg   [7:0] o_tensor_0_5_V_fu_832;
reg   [7:0] o_tensor_0_6_V_fu_836;
reg   [7:0] o_tensor_0_7_V_fu_840;
reg   [7:0] o_tensor_0_8_V_fu_844;
reg   [7:0] o_tensor_0_9_V_fu_848;
reg   [7:0] o_tensor_0_10_V_fu_852;
reg   [7:0] o_tensor_0_11_V_fu_856;
reg   [7:0] o_tensor_0_12_V_fu_860;
reg   [7:0] o_tensor_0_13_V_fu_864;
reg   [7:0] o_tensor_0_14_V_fu_868;
reg   [7:0] o_tensor_0_15_V_fu_872;
wire    ap_CS_fsm_state62;
wire   [511:0] tmp_14_fu_4576_p17;
wire   [511:0] tmp_8_fu_11274_p17;
wire   [127:0] tmp_15_fu_4555_p17;
reg   [31:0] out_mem_V_Addr_A_orig;
wire   [127:0] tmp_9_fu_11311_p17;
wire   [31:0] wgt_mem_0_V_Addr_A_orig;
wire   [31:0] wgt_mem_1_V_Addr_A_orig;
wire   [31:0] inp_mem_V_Addr_A_orig;
reg   [127:0] grp_fu_1337_p1;
wire   [28:0] tmp_fu_1633_p4;
wire   [29:0] tmp_2_fu_1647_p4;
wire   [2:0] trunc_ln470_fu_1687_p1;
wire   [13:0] zext_ln350_3_fu_1719_p1;
wire   [0:0] empty_20_fu_1723_p2;
wire   [13:0] smax18_fu_1729_p3;
wire   [14:0] smax18_cast_fu_1737_p1;
wire   [14:0] zext_ln350_2_fu_1715_p1;
wire   [13:0] zext_ln262_3_fu_1757_p1;
wire   [0:0] empty_18_fu_1761_p2;
wire   [13:0] smax_fu_1767_p3;
wire   [14:0] smax_cast_fu_1775_p1;
wire   [14:0] zext_ln262_2_fu_1753_p1;
wire   [1:0] trunc_ln3_fu_1811_p4;
wire   [15:0] mask_fu_1661_p4;
wire   [32:0] zext_ln480_fu_1859_p1;
wire   [32:0] p_cast_fu_1657_p1;
wire   [32:0] add_ln480_1_fu_1863_p2;
wire   [13:0] grp_fu_1347_p4;
wire  signed [31:0] sext_ln343_fu_1879_p1;
wire   [31:0] grp_fu_1890_p0;
wire   [13:0] grp_fu_1890_p1;
wire   [13:0] grp_fu_1356_p4;
wire   [45:0] grp_fu_1903_p0;
wire   [13:0] grp_fu_1903_p1;
wire   [1:0] trunc_ln_fu_1924_p4;
wire   [15:0] trunc_ln375_1_fu_1945_p4;
wire   [10:0] grp_fu_1365_p4;
wire   [10:0] grp_fu_1374_p4;
wire   [10:0] grp_fu_1383_p4;
wire   [10:0] grp_fu_1392_p4;
wire   [0:0] icmp_ln385_fu_1939_p2;
wire   [0:0] icmp_ln348_fu_2009_p2;
wire   [11:0] add_ln700_262_fu_2004_p2;
wire   [11:0] add_ln700_263_fu_2022_p2;
wire   [0:0] icmp_ln350_1_fu_2042_p2;
wire   [11:0] select_ln344_fu_2014_p3;
wire   [11:0] select_ln344_1_fu_2027_p3;
wire   [0:0] select_ln344_3_fu_2047_p3;
wire   [31:0] select_ln344_2_fu_2035_p3;
wire   [11:0] dst_offset_in_V_5_fu_2070_p2;
wire   [11:0] src_offset_in_V_5_fu_2075_p2;
wire   [45:0] add_ln348_fu_2103_p2;
wire   [10:0] trunc_ln647_21_fu_2126_p1;
wire   [11:0] zext_ln209_3_fu_2130_p1;
wire   [10:0] grp_fu_1401_p4;
wire   [11:0] zext_ln209_4_fu_2139_p1;
wire   [31:0] trunc_ln647_22_fu_2156_p1;
wire   [31:0] p_Result_11_0_1_fu_2160_p4;
wire   [31:0] p_Result_11_1_fu_2170_p4;
wire   [31:0] p_Result_11_1_1_fu_2180_p4;
wire   [31:0] p_Result_11_2_fu_2190_p4;
wire   [31:0] p_Result_11_2_1_fu_2200_p4;
wire   [31:0] p_Result_11_3_fu_2210_p4;
wire   [31:0] p_Result_11_3_1_fu_2220_p4;
wire   [0:0] icmp_ln887_fu_2466_p2;
wire   [31:0] select_ln380_fu_2470_p3;
wire   [31:0] select_ln380_1_fu_2475_p3;
wire   [31:0] dst_tensor_0_0_V_1_fu_2480_p3;
wire   [31:0] dst_tensor_0_0_V_2_fu_2492_p2;
wire   [31:0] zext_ln556_fu_2507_p1;
wire   [31:0] zext_ln556_1_fu_2515_p1;
wire   [0:0] tmp_17_fu_2500_p3;
wire   [31:0] shl_ln790_fu_2510_p2;
wire   [31:0] ashr_ln808_fu_2518_p2;
wire   [31:0] dst_tensor_0_0_V_3_fu_2523_p3;
wire   [7:0] o_tensor_0_0_V_2_fu_2488_p1;
wire   [7:0] o_tensor_0_0_V_3_fu_2496_p1;
wire   [7:0] o_tensor_0_0_V_8_fu_2535_p3;
wire   [7:0] o_tensor_0_0_V_7_fu_2531_p1;
wire   [7:0] o_tensor_0_0_V_9_fu_2542_p3;
wire   [31:0] dst_tensor_0_0_V_4_fu_2556_p3;
wire   [31:0] dst_tensor_0_0_V_5_fu_2562_p3;
wire   [0:0] icmp_ln887_1_fu_2576_p2;
wire   [31:0] select_ln380_3_fu_2581_p3;
wire   [31:0] select_ln380_4_fu_2587_p3;
wire   [31:0] dst_tensor_0_1_V_1_fu_2593_p3;
wire   [31:0] dst_tensor_0_1_V_2_fu_2605_p2;
wire   [31:0] zext_ln556_2_fu_2621_p1;
wire   [31:0] zext_ln556_3_fu_2630_p1;
wire   [0:0] tmp_18_fu_2614_p3;
wire   [31:0] shl_ln790_1_fu_2624_p2;
wire   [31:0] ashr_ln808_1_fu_2633_p2;
wire   [31:0] dst_tensor_0_1_V_3_fu_2639_p3;
wire   [7:0] o_tensor_0_1_V_2_fu_2601_p1;
wire   [7:0] o_tensor_0_1_V_3_fu_2610_p1;
wire   [7:0] o_tensor_0_1_V_8_fu_2651_p3;
wire   [7:0] o_tensor_0_1_V_7_fu_2647_p1;
wire   [7:0] o_tensor_0_1_V_9_fu_2658_p3;
wire   [31:0] dst_tensor_0_1_V_4_fu_2672_p3;
wire   [31:0] dst_tensor_0_1_V_5_fu_2679_p3;
wire   [0:0] icmp_ln887_2_fu_2693_p2;
wire   [31:0] select_ln380_6_fu_2698_p3;
wire   [31:0] select_ln380_7_fu_2704_p3;
wire   [31:0] dst_tensor_0_2_V_1_fu_2710_p3;
wire   [31:0] dst_tensor_0_2_V_2_fu_2722_p2;
wire   [31:0] zext_ln556_4_fu_2738_p1;
wire   [31:0] zext_ln556_5_fu_2747_p1;
wire   [0:0] tmp_19_fu_2731_p3;
wire   [31:0] shl_ln790_2_fu_2741_p2;
wire   [31:0] ashr_ln808_2_fu_2750_p2;
wire   [31:0] dst_tensor_0_2_V_3_fu_2756_p3;
wire   [7:0] o_tensor_0_2_V_2_fu_2718_p1;
wire   [7:0] o_tensor_0_2_V_3_fu_2727_p1;
wire   [7:0] o_tensor_0_2_V_8_fu_2768_p3;
wire   [7:0] o_tensor_0_2_V_7_fu_2764_p1;
wire   [7:0] o_tensor_0_2_V_9_fu_2775_p3;
wire   [31:0] dst_tensor_0_2_V_4_fu_2789_p3;
wire   [31:0] dst_tensor_0_2_V_5_fu_2796_p3;
wire   [0:0] icmp_ln887_3_fu_2810_p2;
wire   [31:0] select_ln380_9_fu_2815_p3;
wire   [31:0] select_ln380_10_fu_2821_p3;
wire   [31:0] dst_tensor_0_3_V_1_fu_2827_p3;
wire   [31:0] dst_tensor_0_3_V_2_fu_2839_p2;
wire   [31:0] zext_ln556_6_fu_2855_p1;
wire   [31:0] zext_ln556_7_fu_2864_p1;
wire   [0:0] tmp_20_fu_2848_p3;
wire   [31:0] shl_ln790_3_fu_2858_p2;
wire   [31:0] ashr_ln808_3_fu_2867_p2;
wire   [31:0] dst_tensor_0_3_V_3_fu_2873_p3;
wire   [7:0] o_tensor_0_3_V_2_fu_2835_p1;
wire   [7:0] o_tensor_0_3_V_3_fu_2844_p1;
wire   [7:0] o_tensor_0_3_V_8_fu_2885_p3;
wire   [7:0] o_tensor_0_3_V_7_fu_2881_p1;
wire   [7:0] o_tensor_0_3_V_9_fu_2892_p3;
wire   [31:0] dst_tensor_0_3_V_4_fu_2906_p3;
wire   [31:0] dst_tensor_0_3_V_5_fu_2913_p3;
wire   [0:0] icmp_ln887_4_fu_2927_p2;
wire   [31:0] select_ln380_12_fu_2932_p3;
wire   [31:0] select_ln380_13_fu_2938_p3;
wire   [31:0] dst_tensor_0_4_V_1_fu_2944_p3;
wire   [31:0] dst_tensor_0_4_V_2_fu_2956_p2;
wire   [31:0] zext_ln556_8_fu_2972_p1;
wire   [31:0] zext_ln556_9_fu_2981_p1;
wire   [0:0] tmp_21_fu_2965_p3;
wire   [31:0] shl_ln790_4_fu_2975_p2;
wire   [31:0] ashr_ln808_4_fu_2984_p2;
wire   [31:0] dst_tensor_0_4_V_3_fu_2990_p3;
wire   [7:0] o_tensor_0_4_V_2_fu_2952_p1;
wire   [7:0] o_tensor_0_4_V_3_fu_2961_p1;
wire   [7:0] o_tensor_0_4_V_8_fu_3002_p3;
wire   [7:0] o_tensor_0_4_V_7_fu_2998_p1;
wire   [7:0] o_tensor_0_4_V_9_fu_3009_p3;
wire   [31:0] dst_tensor_0_4_V_4_fu_3023_p3;
wire   [31:0] dst_tensor_0_4_V_5_fu_3030_p3;
wire   [0:0] icmp_ln887_5_fu_3044_p2;
wire   [31:0] select_ln380_15_fu_3049_p3;
wire   [31:0] select_ln380_16_fu_3055_p3;
wire   [31:0] dst_tensor_0_5_V_1_fu_3061_p3;
wire   [31:0] dst_tensor_0_5_V_2_fu_3073_p2;
wire   [31:0] zext_ln556_10_fu_3089_p1;
wire   [31:0] zext_ln556_11_fu_3098_p1;
wire   [0:0] tmp_22_fu_3082_p3;
wire   [31:0] shl_ln790_5_fu_3092_p2;
wire   [31:0] ashr_ln808_5_fu_3101_p2;
wire   [31:0] dst_tensor_0_5_V_3_fu_3107_p3;
wire   [7:0] o_tensor_0_5_V_1_fu_3069_p1;
wire   [7:0] o_tensor_0_5_V_2_fu_3078_p1;
wire   [7:0] o_tensor_0_5_V_7_fu_3119_p3;
wire   [7:0] o_tensor_0_5_V_6_fu_3115_p1;
wire   [7:0] o_tensor_0_5_V_8_fu_3126_p3;
wire   [31:0] dst_tensor_0_5_V_4_fu_3140_p3;
wire   [31:0] dst_tensor_0_5_V_5_fu_3147_p3;
wire   [0:0] icmp_ln887_6_fu_3161_p2;
wire   [31:0] select_ln380_18_fu_3166_p3;
wire   [31:0] select_ln380_19_fu_3172_p3;
wire   [31:0] dst_tensor_0_6_V_1_fu_3178_p3;
wire   [31:0] dst_tensor_0_6_V_2_fu_3190_p2;
wire   [31:0] zext_ln556_12_fu_3206_p1;
wire   [31:0] zext_ln556_13_fu_3215_p1;
wire   [0:0] tmp_23_fu_3199_p3;
wire   [31:0] shl_ln790_6_fu_3209_p2;
wire   [31:0] ashr_ln808_6_fu_3218_p2;
wire   [31:0] dst_tensor_0_6_V_3_fu_3224_p3;
wire   [7:0] o_tensor_0_6_V_1_fu_3186_p1;
wire   [7:0] o_tensor_0_6_V_2_fu_3195_p1;
wire   [7:0] o_tensor_0_6_V_7_fu_3236_p3;
wire   [7:0] o_tensor_0_6_V_6_fu_3232_p1;
wire   [7:0] o_tensor_0_6_V_8_fu_3243_p3;
wire   [31:0] dst_tensor_0_6_V_4_fu_3257_p3;
wire   [31:0] dst_tensor_0_6_V_5_fu_3264_p3;
wire   [0:0] icmp_ln887_7_fu_3278_p2;
wire   [31:0] select_ln380_21_fu_3283_p3;
wire   [31:0] select_ln380_22_fu_3289_p3;
wire   [31:0] dst_tensor_0_7_V_1_fu_3295_p3;
wire   [31:0] dst_tensor_0_7_V_2_fu_3307_p2;
wire   [31:0] zext_ln556_14_fu_3323_p1;
wire   [31:0] zext_ln556_15_fu_3332_p1;
wire   [0:0] tmp_24_fu_3316_p3;
wire   [31:0] shl_ln790_7_fu_3326_p2;
wire   [31:0] ashr_ln808_7_fu_3335_p2;
wire   [31:0] dst_tensor_0_7_V_3_fu_3341_p3;
wire   [7:0] o_tensor_0_7_V_1_fu_3303_p1;
wire   [7:0] o_tensor_0_7_V_2_fu_3312_p1;
wire   [7:0] o_tensor_0_7_V_7_fu_3353_p3;
wire   [7:0] o_tensor_0_7_V_6_fu_3349_p1;
wire   [7:0] o_tensor_0_7_V_8_fu_3360_p3;
wire   [31:0] dst_tensor_0_7_V_4_fu_3374_p3;
wire   [31:0] dst_tensor_0_7_V_5_fu_3381_p3;
wire   [0:0] icmp_ln887_8_fu_3579_p2;
wire   [31:0] select_ln380_24_fu_3584_p3;
wire   [31:0] select_ln380_25_fu_3590_p3;
wire   [31:0] dst_tensor_0_8_V_1_fu_3596_p3;
wire   [31:0] dst_tensor_0_8_V_2_fu_3608_p2;
wire   [31:0] zext_ln556_16_fu_3624_p1;
wire   [31:0] zext_ln556_17_fu_3633_p1;
wire   [0:0] tmp_25_fu_3617_p3;
wire   [31:0] shl_ln790_8_fu_3627_p2;
wire   [31:0] ashr_ln808_8_fu_3636_p2;
wire   [31:0] dst_tensor_0_8_V_3_fu_3642_p3;
wire   [7:0] o_tensor_0_8_V_1_fu_3604_p1;
wire   [7:0] o_tensor_0_8_V_2_fu_3613_p1;
wire   [7:0] o_tensor_0_8_V_7_fu_3654_p3;
wire   [7:0] o_tensor_0_8_V_6_fu_3650_p1;
wire   [7:0] o_tensor_0_8_V_8_fu_3661_p3;
wire   [31:0] dst_tensor_0_8_V_4_fu_3675_p3;
wire   [31:0] dst_tensor_0_8_V_5_fu_3682_p3;
wire   [0:0] icmp_ln887_9_fu_3696_p2;
wire   [31:0] select_ln380_27_fu_3701_p3;
wire   [31:0] select_ln380_28_fu_3707_p3;
wire   [31:0] dst_tensor_0_9_V_1_fu_3713_p3;
wire   [31:0] dst_tensor_0_9_V_2_fu_3725_p2;
wire   [31:0] zext_ln556_18_fu_3741_p1;
wire   [31:0] zext_ln556_19_fu_3750_p1;
wire   [0:0] tmp_26_fu_3734_p3;
wire   [31:0] shl_ln790_9_fu_3744_p2;
wire   [31:0] ashr_ln808_9_fu_3753_p2;
wire   [31:0] dst_tensor_0_9_V_3_fu_3759_p3;
wire   [7:0] o_tensor_0_9_V_1_fu_3721_p1;
wire   [7:0] o_tensor_0_9_V_2_fu_3730_p1;
wire   [7:0] o_tensor_0_9_V_7_fu_3771_p3;
wire   [7:0] o_tensor_0_9_V_6_fu_3767_p1;
wire   [7:0] o_tensor_0_9_V_8_fu_3778_p3;
wire   [31:0] dst_tensor_0_9_V_4_fu_3792_p3;
wire   [31:0] dst_tensor_0_9_V_5_fu_3799_p3;
wire   [0:0] icmp_ln887_10_fu_3813_p2;
wire   [31:0] select_ln380_30_fu_3818_p3;
wire   [31:0] select_ln380_31_fu_3824_p3;
wire   [31:0] dst_tensor_0_10_V_1_fu_3830_p3;
wire   [31:0] dst_tensor_0_10_V_2_fu_3842_p2;
wire   [31:0] zext_ln556_20_fu_3858_p1;
wire   [31:0] zext_ln556_21_fu_3867_p1;
wire   [0:0] tmp_27_fu_3851_p3;
wire   [31:0] shl_ln790_10_fu_3861_p2;
wire   [31:0] ashr_ln808_10_fu_3870_p2;
wire   [31:0] dst_tensor_0_10_V_3_fu_3876_p3;
wire   [7:0] o_tensor_0_10_V_1_fu_3838_p1;
wire   [7:0] o_tensor_0_10_V_2_fu_3847_p1;
wire   [7:0] o_tensor_0_10_V_7_fu_3888_p3;
wire   [7:0] o_tensor_0_10_V_6_fu_3884_p1;
wire   [7:0] o_tensor_0_10_V_8_fu_3895_p3;
wire   [31:0] dst_tensor_0_10_V_4_fu_3909_p3;
wire   [31:0] dst_tensor_0_10_V_5_fu_3916_p3;
wire   [0:0] icmp_ln887_11_fu_3930_p2;
wire   [31:0] select_ln380_33_fu_3935_p3;
wire   [31:0] select_ln380_34_fu_3941_p3;
wire   [31:0] dst_tensor_0_11_V_1_fu_3947_p3;
wire   [31:0] dst_tensor_0_11_V_2_fu_3959_p2;
wire   [31:0] zext_ln556_22_fu_3975_p1;
wire   [31:0] zext_ln556_23_fu_3984_p1;
wire   [0:0] tmp_28_fu_3968_p3;
wire   [31:0] shl_ln790_11_fu_3978_p2;
wire   [31:0] ashr_ln808_11_fu_3987_p2;
wire   [31:0] dst_tensor_0_11_V_3_fu_3993_p3;
wire   [7:0] o_tensor_0_11_V_1_fu_3955_p1;
wire   [7:0] o_tensor_0_11_V_2_fu_3964_p1;
wire   [7:0] o_tensor_0_11_V_7_fu_4005_p3;
wire   [7:0] o_tensor_0_11_V_6_fu_4001_p1;
wire   [7:0] o_tensor_0_11_V_8_fu_4012_p3;
wire   [31:0] dst_tensor_0_11_V_4_fu_4026_p3;
wire   [31:0] dst_tensor_0_11_V_5_fu_4033_p3;
wire   [0:0] icmp_ln887_12_fu_4047_p2;
wire   [31:0] select_ln380_36_fu_4052_p3;
wire   [31:0] select_ln380_37_fu_4058_p3;
wire   [31:0] dst_tensor_0_12_V_1_fu_4064_p3;
wire   [31:0] dst_tensor_0_12_V_2_fu_4076_p2;
wire   [31:0] zext_ln556_24_fu_4092_p1;
wire   [31:0] zext_ln556_25_fu_4101_p1;
wire   [0:0] tmp_29_fu_4085_p3;
wire   [31:0] shl_ln790_12_fu_4095_p2;
wire   [31:0] ashr_ln808_12_fu_4104_p2;
wire   [31:0] dst_tensor_0_12_V_3_fu_4110_p3;
wire   [7:0] o_tensor_0_12_V_1_fu_4072_p1;
wire   [7:0] o_tensor_0_12_V_2_fu_4081_p1;
wire   [7:0] o_tensor_0_12_V_7_fu_4122_p3;
wire   [7:0] o_tensor_0_12_V_6_fu_4118_p1;
wire   [7:0] o_tensor_0_12_V_8_fu_4129_p3;
wire   [31:0] dst_tensor_0_12_V_4_fu_4143_p3;
wire   [31:0] dst_tensor_0_12_V_5_fu_4150_p3;
wire   [0:0] icmp_ln887_13_fu_4164_p2;
wire   [31:0] select_ln380_39_fu_4169_p3;
wire   [31:0] select_ln380_40_fu_4175_p3;
wire   [31:0] dst_tensor_0_13_V_1_fu_4181_p3;
wire   [31:0] dst_tensor_0_13_V_2_fu_4193_p2;
wire   [31:0] zext_ln556_26_fu_4209_p1;
wire   [31:0] zext_ln556_27_fu_4218_p1;
wire   [0:0] tmp_30_fu_4202_p3;
wire   [31:0] shl_ln790_13_fu_4212_p2;
wire   [31:0] ashr_ln808_13_fu_4221_p2;
wire   [31:0] dst_tensor_0_13_V_3_fu_4227_p3;
wire   [7:0] o_tensor_0_13_V_1_fu_4189_p1;
wire   [7:0] o_tensor_0_13_V_2_fu_4198_p1;
wire   [7:0] o_tensor_0_13_V_7_fu_4239_p3;
wire   [7:0] o_tensor_0_13_V_6_fu_4235_p1;
wire   [7:0] o_tensor_0_13_V_8_fu_4246_p3;
wire   [31:0] dst_tensor_0_13_V_4_fu_4260_p3;
wire   [31:0] dst_tensor_0_13_V_5_fu_4267_p3;
wire   [0:0] icmp_ln887_14_fu_4281_p2;
wire   [31:0] select_ln380_42_fu_4286_p3;
wire   [31:0] select_ln380_43_fu_4292_p3;
wire   [31:0] dst_tensor_0_14_V_1_fu_4298_p3;
wire   [31:0] dst_tensor_0_14_V_2_fu_4310_p2;
wire   [31:0] zext_ln556_28_fu_4326_p1;
wire   [31:0] zext_ln556_29_fu_4335_p1;
wire   [0:0] tmp_31_fu_4319_p3;
wire   [31:0] shl_ln790_14_fu_4329_p2;
wire   [31:0] ashr_ln808_14_fu_4338_p2;
wire   [31:0] dst_tensor_0_14_V_3_fu_4344_p3;
wire   [7:0] o_tensor_0_14_V_1_fu_4306_p1;
wire   [7:0] o_tensor_0_14_V_2_fu_4315_p1;
wire   [7:0] o_tensor_0_14_V_7_fu_4356_p3;
wire   [7:0] o_tensor_0_14_V_6_fu_4352_p1;
wire   [7:0] o_tensor_0_14_V_8_fu_4363_p3;
wire   [31:0] dst_tensor_0_14_V_4_fu_4377_p3;
wire   [31:0] dst_tensor_0_14_V_5_fu_4384_p3;
wire   [0:0] icmp_ln887_15_fu_4398_p2;
wire   [31:0] select_ln380_45_fu_4403_p3;
wire   [31:0] select_ln380_46_fu_4409_p3;
wire   [31:0] dst_tensor_0_15_V_1_fu_4415_p3;
wire   [31:0] dst_tensor_0_15_V_2_fu_4427_p2;
wire   [31:0] zext_ln556_30_fu_4443_p1;
wire   [31:0] zext_ln556_31_fu_4452_p1;
wire   [0:0] tmp_32_fu_4436_p3;
wire   [31:0] shl_ln790_15_fu_4446_p2;
wire   [31:0] ashr_ln808_15_fu_4455_p2;
wire   [31:0] dst_tensor_0_15_V_3_fu_4461_p3;
wire   [7:0] o_tensor_0_15_V_1_fu_4423_p1;
wire   [7:0] o_tensor_0_15_V_2_fu_4432_p1;
wire   [7:0] o_tensor_0_15_V_7_fu_4473_p3;
wire   [7:0] o_tensor_0_15_V_6_fu_4469_p1;
wire   [7:0] o_tensor_0_15_V_8_fu_4480_p3;
wire   [31:0] dst_tensor_0_15_V_4_fu_4494_p3;
wire   [31:0] dst_tensor_0_15_V_5_fu_4501_p3;
wire  signed [31:0] sext_ln253_fu_4604_p1;
wire   [13:0] grp_fu_4615_p0;
wire   [31:0] grp_fu_4615_p1;
wire   [13:0] grp_fu_4628_p0;
wire   [45:0] grp_fu_4628_p1;
wire   [9:0] trunc_ln8_fu_4657_p4;
wire   [9:0] trunc_ln700_4_fu_4678_p4;
wire   [45:0] add_ln259_fu_4746_p2;
wire   [0:0] icmp_ln262_1_fu_4784_p2;
wire   [11:0] select_ln254_fu_4760_p3;
wire   [11:0] select_ln254_1_fu_4766_p3;
wire   [10:0] select_ln254_2_fu_4772_p3;
wire   [0:0] select_ln254_4_fu_4789_p3;
wire   [31:0] select_ln254_3_fu_4778_p3;
wire   [11:0] dst_offset_in_V_4_fu_4795_p2;
wire   [11:0] src_offset_in_V_4_fu_4800_p2;
wire   [10:0] wgt_offset_in_V_2_fu_4805_p2;
wire   [10:0] trunc_ln647_fu_4851_p1;
wire   [11:0] zext_ln209_fu_4855_p1;
wire   [11:0] zext_ln209_1_fu_4864_p1;
wire   [9:0] p_Result_2_fu_4873_p4;
wire   [10:0] zext_ln209_2_fu_4883_p1;
wire  signed [7:0] mul_ln1352_1_fu_7609_p0;
wire  signed [15:0] sext_ln215_2_fu_7603_p1;
wire  signed [7:0] mul_ln1352_1_fu_7609_p1;
wire  signed [7:0] mul_ln1352_3_fu_7621_p0;
wire  signed [15:0] sext_ln215_6_fu_7615_p1;
wire  signed [7:0] mul_ln1352_3_fu_7621_p1;
wire  signed [7:0] mul_ln1352_5_fu_7633_p0;
wire  signed [15:0] sext_ln215_10_fu_7627_p1;
wire  signed [7:0] mul_ln1352_5_fu_7633_p1;
wire  signed [7:0] mul_ln1352_7_fu_7645_p0;
wire  signed [15:0] sext_ln215_14_fu_7639_p1;
wire  signed [7:0] mul_ln1352_7_fu_7645_p1;
wire  signed [7:0] mul_ln1352_9_fu_7657_p0;
wire  signed [15:0] sext_ln215_18_fu_7651_p1;
wire  signed [7:0] mul_ln1352_9_fu_7657_p1;
wire  signed [7:0] mul_ln1352_11_fu_7669_p0;
wire  signed [15:0] sext_ln215_22_fu_7663_p1;
wire  signed [7:0] mul_ln1352_11_fu_7669_p1;
wire  signed [7:0] mul_ln1352_13_fu_7681_p0;
wire  signed [15:0] sext_ln215_26_fu_7675_p1;
wire  signed [7:0] mul_ln1352_13_fu_7681_p1;
wire  signed [7:0] mul_ln1352_15_fu_7693_p0;
wire  signed [15:0] sext_ln215_30_fu_7687_p1;
wire  signed [7:0] mul_ln1352_15_fu_7693_p1;
wire  signed [7:0] mul_ln1352_17_fu_7702_p0;
wire  signed [7:0] mul_ln1352_17_fu_7702_p1;
wire  signed [7:0] mul_ln1352_19_fu_7711_p0;
wire  signed [7:0] mul_ln1352_19_fu_7711_p1;
wire  signed [7:0] mul_ln1352_21_fu_7720_p0;
wire  signed [7:0] mul_ln1352_21_fu_7720_p1;
wire  signed [7:0] mul_ln1352_23_fu_7729_p0;
wire  signed [7:0] mul_ln1352_23_fu_7729_p1;
wire  signed [7:0] mul_ln1352_25_fu_7738_p0;
wire  signed [7:0] mul_ln1352_25_fu_7738_p1;
wire  signed [7:0] mul_ln1352_27_fu_7747_p0;
wire  signed [7:0] mul_ln1352_27_fu_7747_p1;
wire  signed [7:0] mul_ln1352_29_fu_7756_p0;
wire  signed [7:0] mul_ln1352_29_fu_7756_p1;
wire  signed [7:0] mul_ln1352_31_fu_7765_p0;
wire  signed [7:0] mul_ln1352_31_fu_7765_p1;
wire  signed [7:0] mul_ln1352_33_fu_7774_p0;
wire  signed [7:0] mul_ln1352_33_fu_7774_p1;
wire  signed [7:0] mul_ln1352_35_fu_7783_p0;
wire  signed [7:0] mul_ln1352_35_fu_7783_p1;
wire  signed [7:0] mul_ln1352_37_fu_7792_p0;
wire  signed [7:0] mul_ln1352_37_fu_7792_p1;
wire  signed [7:0] mul_ln1352_39_fu_7801_p0;
wire  signed [7:0] mul_ln1352_39_fu_7801_p1;
wire  signed [7:0] mul_ln1352_41_fu_7810_p0;
wire  signed [7:0] mul_ln1352_41_fu_7810_p1;
wire  signed [7:0] mul_ln1352_43_fu_7819_p0;
wire  signed [7:0] mul_ln1352_43_fu_7819_p1;
wire  signed [7:0] mul_ln1352_45_fu_7828_p0;
wire  signed [7:0] mul_ln1352_45_fu_7828_p1;
wire  signed [7:0] mul_ln1352_47_fu_7837_p0;
wire  signed [7:0] mul_ln1352_47_fu_7837_p1;
wire  signed [7:0] mul_ln1352_49_fu_7846_p0;
wire  signed [7:0] mul_ln1352_49_fu_7846_p1;
wire  signed [7:0] mul_ln1352_51_fu_7855_p0;
wire  signed [7:0] mul_ln1352_51_fu_7855_p1;
wire  signed [7:0] mul_ln1352_53_fu_7864_p0;
wire  signed [7:0] mul_ln1352_53_fu_7864_p1;
wire  signed [7:0] mul_ln1352_55_fu_7873_p0;
wire  signed [7:0] mul_ln1352_55_fu_7873_p1;
wire  signed [7:0] mul_ln1352_57_fu_7882_p0;
wire  signed [7:0] mul_ln1352_57_fu_7882_p1;
wire  signed [7:0] mul_ln1352_59_fu_7891_p0;
wire  signed [7:0] mul_ln1352_59_fu_7891_p1;
wire  signed [7:0] mul_ln1352_61_fu_7900_p0;
wire  signed [7:0] mul_ln1352_61_fu_7900_p1;
wire  signed [7:0] mul_ln1352_63_fu_7909_p0;
wire  signed [7:0] mul_ln1352_63_fu_7909_p1;
wire  signed [7:0] mul_ln1352_65_fu_7918_p0;
wire  signed [7:0] mul_ln1352_65_fu_7918_p1;
wire  signed [7:0] mul_ln1352_67_fu_7927_p0;
wire  signed [7:0] mul_ln1352_67_fu_7927_p1;
wire  signed [7:0] mul_ln1352_69_fu_7936_p0;
wire  signed [7:0] mul_ln1352_69_fu_7936_p1;
wire  signed [7:0] mul_ln1352_71_fu_7945_p0;
wire  signed [7:0] mul_ln1352_71_fu_7945_p1;
wire  signed [7:0] mul_ln1352_73_fu_7954_p0;
wire  signed [7:0] mul_ln1352_73_fu_7954_p1;
wire  signed [7:0] mul_ln1352_75_fu_7963_p0;
wire  signed [7:0] mul_ln1352_75_fu_7963_p1;
wire  signed [7:0] mul_ln1352_77_fu_7972_p0;
wire  signed [7:0] mul_ln1352_77_fu_7972_p1;
wire  signed [7:0] mul_ln1352_79_fu_7981_p0;
wire  signed [7:0] mul_ln1352_79_fu_7981_p1;
wire  signed [7:0] mul_ln1352_81_fu_7990_p0;
wire  signed [7:0] mul_ln1352_81_fu_7990_p1;
wire  signed [7:0] mul_ln1352_83_fu_7999_p0;
wire  signed [7:0] mul_ln1352_83_fu_7999_p1;
wire  signed [7:0] mul_ln1352_85_fu_8008_p0;
wire  signed [7:0] mul_ln1352_85_fu_8008_p1;
wire  signed [7:0] mul_ln1352_87_fu_8017_p0;
wire  signed [7:0] mul_ln1352_87_fu_8017_p1;
wire  signed [7:0] mul_ln1352_89_fu_8026_p0;
wire  signed [7:0] mul_ln1352_89_fu_8026_p1;
wire  signed [7:0] mul_ln1352_91_fu_8035_p0;
wire  signed [7:0] mul_ln1352_91_fu_8035_p1;
wire  signed [7:0] mul_ln1352_93_fu_8044_p0;
wire  signed [7:0] mul_ln1352_93_fu_8044_p1;
wire  signed [7:0] mul_ln1352_95_fu_8053_p0;
wire  signed [7:0] mul_ln1352_95_fu_8053_p1;
wire  signed [7:0] mul_ln1352_97_fu_8062_p0;
wire  signed [7:0] mul_ln1352_97_fu_8062_p1;
wire  signed [7:0] mul_ln1352_99_fu_8071_p0;
wire  signed [7:0] mul_ln1352_99_fu_8071_p1;
wire  signed [7:0] mul_ln1352_101_fu_8080_p0;
wire  signed [7:0] mul_ln1352_101_fu_8080_p1;
wire  signed [7:0] mul_ln1352_103_fu_8089_p0;
wire  signed [7:0] mul_ln1352_103_fu_8089_p1;
wire  signed [7:0] mul_ln1352_105_fu_8098_p0;
wire  signed [7:0] mul_ln1352_105_fu_8098_p1;
wire  signed [7:0] mul_ln1352_107_fu_8107_p0;
wire  signed [7:0] mul_ln1352_107_fu_8107_p1;
wire  signed [7:0] mul_ln1352_109_fu_8116_p0;
wire  signed [7:0] mul_ln1352_109_fu_8116_p1;
wire  signed [7:0] mul_ln1352_111_fu_8125_p0;
wire  signed [7:0] mul_ln1352_111_fu_8125_p1;
wire  signed [7:0] mul_ln1352_113_fu_8134_p0;
wire  signed [7:0] mul_ln1352_113_fu_8134_p1;
wire  signed [7:0] mul_ln1352_115_fu_8143_p0;
wire  signed [7:0] mul_ln1352_115_fu_8143_p1;
wire  signed [7:0] mul_ln1352_117_fu_8152_p0;
wire  signed [7:0] mul_ln1352_117_fu_8152_p1;
wire  signed [7:0] mul_ln1352_119_fu_8161_p0;
wire  signed [7:0] mul_ln1352_119_fu_8161_p1;
wire  signed [7:0] mul_ln1352_121_fu_8170_p0;
wire  signed [7:0] mul_ln1352_121_fu_8170_p1;
wire  signed [7:0] mul_ln1352_123_fu_8179_p0;
wire  signed [7:0] mul_ln1352_123_fu_8179_p1;
wire  signed [7:0] mul_ln1352_125_fu_8188_p0;
wire  signed [7:0] mul_ln1352_125_fu_8188_p1;
wire  signed [7:0] mul_ln1352_127_fu_8197_p0;
wire  signed [7:0] mul_ln1352_127_fu_8197_p1;
wire  signed [7:0] mul_ln1352_129_fu_8206_p0;
wire  signed [7:0] mul_ln1352_129_fu_8206_p1;
wire  signed [7:0] mul_ln1352_131_fu_8215_p0;
wire  signed [7:0] mul_ln1352_131_fu_8215_p1;
wire  signed [7:0] mul_ln1352_133_fu_8224_p0;
wire  signed [7:0] mul_ln1352_133_fu_8224_p1;
wire  signed [7:0] mul_ln1352_135_fu_8233_p0;
wire  signed [7:0] mul_ln1352_135_fu_8233_p1;
wire  signed [7:0] mul_ln1352_137_fu_8242_p0;
wire  signed [7:0] mul_ln1352_137_fu_8242_p1;
wire  signed [7:0] mul_ln1352_139_fu_8251_p0;
wire  signed [7:0] mul_ln1352_139_fu_8251_p1;
wire  signed [7:0] mul_ln1352_141_fu_8260_p0;
wire  signed [7:0] mul_ln1352_141_fu_8260_p1;
wire  signed [7:0] mul_ln1352_143_fu_8269_p0;
wire  signed [7:0] mul_ln1352_143_fu_8269_p1;
wire  signed [7:0] mul_ln1352_145_fu_8278_p0;
wire  signed [7:0] mul_ln1352_145_fu_8278_p1;
wire  signed [7:0] mul_ln1352_147_fu_8287_p0;
wire  signed [7:0] mul_ln1352_147_fu_8287_p1;
wire  signed [7:0] mul_ln1352_149_fu_8296_p0;
wire  signed [7:0] mul_ln1352_149_fu_8296_p1;
wire  signed [7:0] mul_ln1352_151_fu_8305_p0;
wire  signed [7:0] mul_ln1352_151_fu_8305_p1;
wire  signed [7:0] mul_ln1352_153_fu_8314_p0;
wire  signed [7:0] mul_ln1352_153_fu_8314_p1;
wire  signed [7:0] mul_ln1352_155_fu_8323_p0;
wire  signed [7:0] mul_ln1352_155_fu_8323_p1;
wire  signed [7:0] mul_ln1352_157_fu_8332_p0;
wire  signed [7:0] mul_ln1352_157_fu_8332_p1;
wire  signed [7:0] mul_ln1352_159_fu_8341_p0;
wire  signed [7:0] mul_ln1352_159_fu_8341_p1;
wire  signed [7:0] mul_ln1352_161_fu_8350_p0;
wire  signed [7:0] mul_ln1352_161_fu_8350_p1;
wire  signed [7:0] mul_ln1352_163_fu_8359_p0;
wire  signed [7:0] mul_ln1352_163_fu_8359_p1;
wire  signed [7:0] mul_ln1352_165_fu_8368_p0;
wire  signed [7:0] mul_ln1352_165_fu_8368_p1;
wire  signed [7:0] mul_ln1352_167_fu_8377_p0;
wire  signed [7:0] mul_ln1352_167_fu_8377_p1;
wire  signed [7:0] mul_ln1352_169_fu_8386_p0;
wire  signed [7:0] mul_ln1352_169_fu_8386_p1;
wire  signed [7:0] mul_ln1352_171_fu_8395_p0;
wire  signed [7:0] mul_ln1352_171_fu_8395_p1;
wire  signed [7:0] mul_ln1352_173_fu_8404_p0;
wire  signed [7:0] mul_ln1352_173_fu_8404_p1;
wire  signed [7:0] mul_ln1352_175_fu_8413_p0;
wire  signed [7:0] mul_ln1352_175_fu_8413_p1;
wire  signed [7:0] mul_ln1352_177_fu_8422_p0;
wire  signed [7:0] mul_ln1352_177_fu_8422_p1;
wire  signed [7:0] mul_ln1352_179_fu_8431_p0;
wire  signed [7:0] mul_ln1352_179_fu_8431_p1;
wire  signed [7:0] mul_ln1352_181_fu_8440_p0;
wire  signed [7:0] mul_ln1352_181_fu_8440_p1;
wire  signed [7:0] mul_ln1352_183_fu_8449_p0;
wire  signed [7:0] mul_ln1352_183_fu_8449_p1;
wire  signed [7:0] mul_ln1352_185_fu_8458_p0;
wire  signed [7:0] mul_ln1352_185_fu_8458_p1;
wire  signed [7:0] mul_ln1352_187_fu_8467_p0;
wire  signed [7:0] mul_ln1352_187_fu_8467_p1;
wire  signed [7:0] mul_ln1352_189_fu_8476_p0;
wire  signed [7:0] mul_ln1352_189_fu_8476_p1;
wire  signed [7:0] mul_ln1352_191_fu_8485_p0;
wire  signed [7:0] mul_ln1352_191_fu_8485_p1;
wire  signed [7:0] mul_ln1352_193_fu_8494_p0;
wire  signed [7:0] mul_ln1352_193_fu_8494_p1;
wire  signed [7:0] mul_ln1352_195_fu_8503_p0;
wire  signed [7:0] mul_ln1352_195_fu_8503_p1;
wire  signed [7:0] mul_ln1352_197_fu_8512_p0;
wire  signed [7:0] mul_ln1352_197_fu_8512_p1;
wire  signed [7:0] mul_ln1352_199_fu_8521_p0;
wire  signed [7:0] mul_ln1352_199_fu_8521_p1;
wire  signed [7:0] mul_ln1352_201_fu_8530_p0;
wire  signed [7:0] mul_ln1352_201_fu_8530_p1;
wire  signed [7:0] mul_ln1352_203_fu_8539_p0;
wire  signed [7:0] mul_ln1352_203_fu_8539_p1;
wire  signed [7:0] mul_ln1352_205_fu_8548_p0;
wire  signed [7:0] mul_ln1352_205_fu_8548_p1;
wire  signed [7:0] mul_ln1352_207_fu_8557_p0;
wire  signed [7:0] mul_ln1352_207_fu_8557_p1;
wire  signed [7:0] mul_ln1352_209_fu_8566_p0;
wire  signed [7:0] mul_ln1352_209_fu_8566_p1;
wire  signed [7:0] mul_ln1352_211_fu_8575_p0;
wire  signed [7:0] mul_ln1352_211_fu_8575_p1;
wire  signed [7:0] mul_ln1352_213_fu_8584_p0;
wire  signed [7:0] mul_ln1352_213_fu_8584_p1;
wire  signed [7:0] mul_ln1352_215_fu_8593_p0;
wire  signed [7:0] mul_ln1352_215_fu_8593_p1;
wire  signed [7:0] mul_ln1352_217_fu_8602_p0;
wire  signed [7:0] mul_ln1352_217_fu_8602_p1;
wire  signed [7:0] mul_ln1352_219_fu_8611_p0;
wire  signed [7:0] mul_ln1352_219_fu_8611_p1;
wire  signed [7:0] mul_ln1352_221_fu_8620_p0;
wire  signed [7:0] mul_ln1352_221_fu_8620_p1;
wire  signed [7:0] mul_ln1352_223_fu_8629_p0;
wire  signed [7:0] mul_ln1352_223_fu_8629_p1;
wire  signed [7:0] mul_ln1352_225_fu_8638_p0;
wire  signed [7:0] mul_ln1352_225_fu_8638_p1;
wire  signed [7:0] mul_ln1352_227_fu_8647_p0;
wire  signed [7:0] mul_ln1352_227_fu_8647_p1;
wire  signed [7:0] mul_ln1352_229_fu_8656_p0;
wire  signed [7:0] mul_ln1352_229_fu_8656_p1;
wire  signed [7:0] mul_ln1352_231_fu_8665_p0;
wire  signed [7:0] mul_ln1352_231_fu_8665_p1;
wire  signed [7:0] mul_ln1352_233_fu_8674_p0;
wire  signed [7:0] mul_ln1352_233_fu_8674_p1;
wire  signed [7:0] mul_ln1352_235_fu_8683_p0;
wire  signed [7:0] mul_ln1352_235_fu_8683_p1;
wire  signed [7:0] mul_ln1352_237_fu_8692_p0;
wire  signed [7:0] mul_ln1352_237_fu_8692_p1;
wire  signed [7:0] mul_ln1352_239_fu_8701_p0;
wire  signed [7:0] mul_ln1352_239_fu_8701_p1;
wire  signed [7:0] mul_ln1352_241_fu_8710_p0;
wire  signed [7:0] mul_ln1352_241_fu_8710_p1;
wire  signed [7:0] mul_ln1352_243_fu_8719_p0;
wire  signed [7:0] mul_ln1352_243_fu_8719_p1;
wire  signed [7:0] mul_ln1352_245_fu_8728_p0;
wire  signed [7:0] mul_ln1352_245_fu_8728_p1;
wire  signed [7:0] mul_ln1352_247_fu_8737_p0;
wire  signed [7:0] mul_ln1352_247_fu_8737_p1;
wire  signed [7:0] mul_ln1352_249_fu_8746_p0;
wire  signed [7:0] mul_ln1352_249_fu_8746_p1;
wire  signed [7:0] mul_ln1352_251_fu_8755_p0;
wire  signed [7:0] mul_ln1352_251_fu_8755_p1;
wire  signed [7:0] mul_ln1352_253_fu_8764_p0;
wire  signed [7:0] mul_ln1352_253_fu_8764_p1;
wire  signed [7:0] mul_ln1352_255_fu_8773_p0;
wire  signed [7:0] mul_ln1352_255_fu_8773_p1;
wire  signed [16:0] grp_fu_11622_p3;
wire  signed [16:0] grp_fu_11631_p3;
wire  signed [17:0] sext_ln700_1_fu_8855_p1;
wire  signed [17:0] sext_ln700_2_fu_8858_p1;
wire  signed [16:0] grp_fu_11640_p3;
wire  signed [16:0] grp_fu_11649_p3;
wire  signed [17:0] sext_ln700_4_fu_8867_p1;
wire  signed [17:0] sext_ln700_5_fu_8870_p1;
wire  signed [16:0] grp_fu_11658_p3;
wire  signed [16:0] grp_fu_11667_p3;
wire  signed [17:0] sext_ln700_8_fu_8879_p1;
wire  signed [17:0] sext_ln700_9_fu_8882_p1;
wire  signed [16:0] grp_fu_11676_p3;
wire  signed [16:0] grp_fu_11685_p3;
wire  signed [17:0] sext_ln700_11_fu_8891_p1;
wire  signed [17:0] sext_ln700_12_fu_8894_p1;
wire  signed [16:0] grp_fu_11694_p3;
wire  signed [16:0] grp_fu_11703_p3;
wire  signed [17:0] sext_ln700_16_fu_8951_p1;
wire  signed [17:0] sext_ln700_17_fu_8954_p1;
wire  signed [16:0] grp_fu_11712_p3;
wire  signed [16:0] grp_fu_11721_p3;
wire  signed [17:0] sext_ln700_19_fu_8963_p1;
wire  signed [17:0] sext_ln700_20_fu_8966_p1;
wire  signed [16:0] grp_fu_11730_p3;
wire  signed [16:0] grp_fu_11739_p3;
wire  signed [17:0] sext_ln700_23_fu_8975_p1;
wire  signed [17:0] sext_ln700_24_fu_8978_p1;
wire  signed [16:0] grp_fu_11748_p3;
wire  signed [16:0] grp_fu_11757_p3;
wire  signed [17:0] sext_ln700_26_fu_8987_p1;
wire  signed [17:0] sext_ln700_27_fu_8990_p1;
wire  signed [16:0] grp_fu_11766_p3;
wire  signed [16:0] grp_fu_11775_p3;
wire  signed [17:0] sext_ln700_31_fu_9047_p1;
wire  signed [17:0] sext_ln700_32_fu_9050_p1;
wire  signed [16:0] grp_fu_11784_p3;
wire  signed [16:0] grp_fu_11793_p3;
wire  signed [17:0] sext_ln700_34_fu_9059_p1;
wire  signed [17:0] sext_ln700_35_fu_9062_p1;
wire  signed [16:0] grp_fu_11802_p3;
wire  signed [16:0] grp_fu_11811_p3;
wire  signed [17:0] sext_ln700_38_fu_9071_p1;
wire  signed [17:0] sext_ln700_39_fu_9074_p1;
wire  signed [16:0] grp_fu_11820_p3;
wire  signed [16:0] grp_fu_11829_p3;
wire  signed [17:0] sext_ln700_41_fu_9083_p1;
wire  signed [17:0] sext_ln700_42_fu_9086_p1;
wire  signed [16:0] grp_fu_11838_p3;
wire  signed [16:0] grp_fu_11847_p3;
wire  signed [17:0] sext_ln700_46_fu_9143_p1;
wire  signed [17:0] sext_ln700_47_fu_9146_p1;
wire  signed [16:0] grp_fu_11856_p3;
wire  signed [16:0] grp_fu_11865_p3;
wire  signed [17:0] sext_ln700_49_fu_9155_p1;
wire  signed [17:0] sext_ln700_50_fu_9158_p1;
wire  signed [16:0] grp_fu_11874_p3;
wire  signed [16:0] grp_fu_11883_p3;
wire  signed [17:0] sext_ln700_53_fu_9167_p1;
wire  signed [17:0] sext_ln700_54_fu_9170_p1;
wire  signed [16:0] grp_fu_11892_p3;
wire  signed [16:0] grp_fu_11901_p3;
wire  signed [17:0] sext_ln700_56_fu_9179_p1;
wire  signed [17:0] sext_ln700_57_fu_9182_p1;
wire  signed [16:0] grp_fu_11910_p3;
wire  signed [16:0] grp_fu_11919_p3;
wire  signed [17:0] sext_ln700_61_fu_9239_p1;
wire  signed [17:0] sext_ln700_62_fu_9242_p1;
wire  signed [16:0] grp_fu_11928_p3;
wire  signed [16:0] grp_fu_11937_p3;
wire  signed [17:0] sext_ln700_64_fu_9251_p1;
wire  signed [17:0] sext_ln700_65_fu_9254_p1;
wire  signed [16:0] grp_fu_11946_p3;
wire  signed [16:0] grp_fu_11955_p3;
wire  signed [17:0] sext_ln700_68_fu_9263_p1;
wire  signed [17:0] sext_ln700_69_fu_9266_p1;
wire  signed [16:0] grp_fu_11964_p3;
wire  signed [16:0] grp_fu_11973_p3;
wire  signed [17:0] sext_ln700_71_fu_9275_p1;
wire  signed [17:0] sext_ln700_72_fu_9278_p1;
wire  signed [16:0] grp_fu_11982_p3;
wire  signed [16:0] grp_fu_11991_p3;
wire  signed [17:0] sext_ln700_76_fu_9335_p1;
wire  signed [17:0] sext_ln700_77_fu_9338_p1;
wire  signed [16:0] grp_fu_12000_p3;
wire  signed [16:0] grp_fu_12009_p3;
wire  signed [17:0] sext_ln700_79_fu_9347_p1;
wire  signed [17:0] sext_ln700_80_fu_9350_p1;
wire  signed [16:0] grp_fu_12018_p3;
wire  signed [16:0] grp_fu_12027_p3;
wire  signed [17:0] sext_ln700_83_fu_9359_p1;
wire  signed [17:0] sext_ln700_84_fu_9362_p1;
wire  signed [16:0] grp_fu_12036_p3;
wire  signed [16:0] grp_fu_12045_p3;
wire  signed [17:0] sext_ln700_86_fu_9371_p1;
wire  signed [17:0] sext_ln700_87_fu_9374_p1;
wire  signed [16:0] grp_fu_12054_p3;
wire  signed [16:0] grp_fu_12063_p3;
wire  signed [17:0] sext_ln700_91_fu_9431_p1;
wire  signed [17:0] sext_ln700_92_fu_9434_p1;
wire  signed [16:0] grp_fu_12072_p3;
wire  signed [16:0] grp_fu_12081_p3;
wire  signed [17:0] sext_ln700_94_fu_9443_p1;
wire  signed [17:0] sext_ln700_95_fu_9446_p1;
wire  signed [16:0] grp_fu_12090_p3;
wire  signed [16:0] grp_fu_12099_p3;
wire  signed [17:0] sext_ln700_98_fu_9455_p1;
wire  signed [17:0] sext_ln700_99_fu_9458_p1;
wire  signed [16:0] grp_fu_12108_p3;
wire  signed [16:0] grp_fu_12117_p3;
wire  signed [17:0] sext_ln700_101_fu_9467_p1;
wire  signed [17:0] sext_ln700_102_fu_9470_p1;
wire  signed [16:0] grp_fu_12126_p3;
wire  signed [16:0] grp_fu_12135_p3;
wire  signed [17:0] sext_ln700_106_fu_9527_p1;
wire  signed [17:0] sext_ln700_107_fu_9530_p1;
wire  signed [16:0] grp_fu_12144_p3;
wire  signed [16:0] grp_fu_12153_p3;
wire  signed [17:0] sext_ln700_109_fu_9539_p1;
wire  signed [17:0] sext_ln700_110_fu_9542_p1;
wire  signed [16:0] grp_fu_12162_p3;
wire  signed [16:0] grp_fu_12171_p3;
wire  signed [17:0] sext_ln700_113_fu_9551_p1;
wire  signed [17:0] sext_ln700_114_fu_9554_p1;
wire  signed [16:0] grp_fu_12180_p3;
wire  signed [16:0] grp_fu_12189_p3;
wire  signed [17:0] sext_ln700_116_fu_9563_p1;
wire  signed [17:0] sext_ln700_117_fu_9566_p1;
wire  signed [16:0] grp_fu_12198_p3;
wire  signed [16:0] grp_fu_12207_p3;
wire  signed [17:0] sext_ln700_121_fu_9623_p1;
wire  signed [17:0] sext_ln700_122_fu_9626_p1;
wire  signed [16:0] grp_fu_12216_p3;
wire  signed [16:0] grp_fu_12225_p3;
wire  signed [17:0] sext_ln700_124_fu_9635_p1;
wire  signed [17:0] sext_ln700_125_fu_9638_p1;
wire  signed [16:0] grp_fu_12234_p3;
wire  signed [16:0] grp_fu_12243_p3;
wire  signed [17:0] sext_ln700_128_fu_9647_p1;
wire  signed [17:0] sext_ln700_129_fu_9650_p1;
wire  signed [16:0] grp_fu_12252_p3;
wire  signed [16:0] grp_fu_12261_p3;
wire  signed [17:0] sext_ln700_131_fu_9659_p1;
wire  signed [17:0] sext_ln700_132_fu_9662_p1;
wire  signed [16:0] grp_fu_12270_p3;
wire  signed [16:0] grp_fu_12279_p3;
wire  signed [17:0] sext_ln700_136_fu_9719_p1;
wire  signed [17:0] sext_ln700_137_fu_9722_p1;
wire  signed [16:0] grp_fu_12288_p3;
wire  signed [16:0] grp_fu_12297_p3;
wire  signed [17:0] sext_ln700_139_fu_9731_p1;
wire  signed [17:0] sext_ln700_140_fu_9734_p1;
wire  signed [16:0] grp_fu_12306_p3;
wire  signed [16:0] grp_fu_12315_p3;
wire  signed [17:0] sext_ln700_143_fu_9743_p1;
wire  signed [17:0] sext_ln700_144_fu_9746_p1;
wire  signed [16:0] grp_fu_12324_p3;
wire  signed [16:0] grp_fu_12333_p3;
wire  signed [17:0] sext_ln700_146_fu_9755_p1;
wire  signed [17:0] sext_ln700_147_fu_9758_p1;
wire  signed [16:0] grp_fu_12342_p3;
wire  signed [16:0] grp_fu_12351_p3;
wire  signed [17:0] sext_ln700_151_fu_9815_p1;
wire  signed [17:0] sext_ln700_152_fu_9818_p1;
wire  signed [16:0] grp_fu_12360_p3;
wire  signed [16:0] grp_fu_12369_p3;
wire  signed [17:0] sext_ln700_154_fu_9827_p1;
wire  signed [17:0] sext_ln700_155_fu_9830_p1;
wire  signed [16:0] grp_fu_12378_p3;
wire  signed [16:0] grp_fu_12387_p3;
wire  signed [17:0] sext_ln700_158_fu_9839_p1;
wire  signed [17:0] sext_ln700_159_fu_9842_p1;
wire  signed [16:0] grp_fu_12396_p3;
wire  signed [16:0] grp_fu_12405_p3;
wire  signed [17:0] sext_ln700_161_fu_9851_p1;
wire  signed [17:0] sext_ln700_162_fu_9854_p1;
wire  signed [16:0] grp_fu_12414_p3;
wire  signed [16:0] grp_fu_12423_p3;
wire  signed [17:0] sext_ln700_166_fu_9911_p1;
wire  signed [17:0] sext_ln700_167_fu_9914_p1;
wire  signed [16:0] grp_fu_12432_p3;
wire  signed [16:0] grp_fu_12441_p3;
wire  signed [17:0] sext_ln700_169_fu_9923_p1;
wire  signed [17:0] sext_ln700_170_fu_9926_p1;
wire  signed [16:0] grp_fu_12450_p3;
wire  signed [16:0] grp_fu_12459_p3;
wire  signed [17:0] sext_ln700_173_fu_9935_p1;
wire  signed [17:0] sext_ln700_174_fu_9938_p1;
wire  signed [16:0] grp_fu_12468_p3;
wire  signed [16:0] grp_fu_12477_p3;
wire  signed [17:0] sext_ln700_176_fu_9947_p1;
wire  signed [17:0] sext_ln700_177_fu_9950_p1;
wire  signed [16:0] grp_fu_12486_p3;
wire  signed [16:0] grp_fu_12495_p3;
wire  signed [17:0] sext_ln700_181_fu_10007_p1;
wire  signed [17:0] sext_ln700_182_fu_10010_p1;
wire  signed [16:0] grp_fu_12504_p3;
wire  signed [16:0] grp_fu_12513_p3;
wire  signed [17:0] sext_ln700_184_fu_10019_p1;
wire  signed [17:0] sext_ln700_185_fu_10022_p1;
wire  signed [16:0] grp_fu_12522_p3;
wire  signed [16:0] grp_fu_12531_p3;
wire  signed [17:0] sext_ln700_188_fu_10031_p1;
wire  signed [17:0] sext_ln700_189_fu_10034_p1;
wire  signed [16:0] grp_fu_12540_p3;
wire  signed [16:0] grp_fu_12549_p3;
wire  signed [17:0] sext_ln700_191_fu_10043_p1;
wire  signed [17:0] sext_ln700_192_fu_10046_p1;
wire  signed [16:0] grp_fu_12558_p3;
wire  signed [16:0] grp_fu_12567_p3;
wire  signed [17:0] sext_ln700_196_fu_10103_p1;
wire  signed [17:0] sext_ln700_197_fu_10106_p1;
wire  signed [16:0] grp_fu_12576_p3;
wire  signed [16:0] grp_fu_12585_p3;
wire  signed [17:0] sext_ln700_199_fu_10115_p1;
wire  signed [17:0] sext_ln700_200_fu_10118_p1;
wire  signed [16:0] grp_fu_12594_p3;
wire  signed [16:0] grp_fu_12603_p3;
wire  signed [17:0] sext_ln700_203_fu_10127_p1;
wire  signed [17:0] sext_ln700_204_fu_10130_p1;
wire  signed [16:0] grp_fu_12612_p3;
wire  signed [16:0] grp_fu_12621_p3;
wire  signed [17:0] sext_ln700_206_fu_10139_p1;
wire  signed [17:0] sext_ln700_207_fu_10142_p1;
wire  signed [16:0] grp_fu_12630_p3;
wire  signed [16:0] grp_fu_12639_p3;
wire  signed [17:0] sext_ln700_211_fu_10199_p1;
wire  signed [17:0] sext_ln700_212_fu_10202_p1;
wire  signed [16:0] grp_fu_12648_p3;
wire  signed [16:0] grp_fu_12657_p3;
wire  signed [17:0] sext_ln700_214_fu_10211_p1;
wire  signed [17:0] sext_ln700_215_fu_10214_p1;
wire  signed [16:0] grp_fu_12666_p3;
wire  signed [16:0] grp_fu_12675_p3;
wire  signed [17:0] sext_ln700_218_fu_10223_p1;
wire  signed [17:0] sext_ln700_219_fu_10226_p1;
wire  signed [16:0] grp_fu_12684_p3;
wire  signed [16:0] grp_fu_12693_p3;
wire  signed [17:0] sext_ln700_221_fu_10235_p1;
wire  signed [17:0] sext_ln700_222_fu_10238_p1;
wire  signed [16:0] grp_fu_12702_p3;
wire  signed [16:0] grp_fu_12711_p3;
wire  signed [17:0] sext_ln700_226_fu_10295_p1;
wire  signed [17:0] sext_ln700_227_fu_10298_p1;
wire  signed [16:0] grp_fu_12720_p3;
wire  signed [16:0] grp_fu_12729_p3;
wire  signed [17:0] sext_ln700_229_fu_10307_p1;
wire  signed [17:0] sext_ln700_230_fu_10310_p1;
wire  signed [16:0] grp_fu_12738_p3;
wire  signed [16:0] grp_fu_12747_p3;
wire  signed [17:0] sext_ln700_233_fu_10319_p1;
wire  signed [17:0] sext_ln700_234_fu_10322_p1;
wire  signed [16:0] grp_fu_12756_p3;
wire  signed [16:0] grp_fu_12765_p3;
wire  signed [17:0] sext_ln700_236_fu_10331_p1;
wire  signed [17:0] sext_ln700_237_fu_10334_p1;
wire  signed [18:0] sext_ln700_3_fu_10347_p1;
wire  signed [18:0] sext_ln700_6_fu_10350_p1;
wire   [18:0] add_ln700_6_fu_10353_p2;
wire  signed [18:0] sext_ln700_10_fu_10363_p1;
wire  signed [18:0] sext_ln700_13_fu_10366_p1;
wire   [18:0] add_ln700_13_fu_10369_p2;
wire  signed [19:0] sext_ln700_7_fu_10359_p1;
wire  signed [19:0] sext_ln700_14_fu_10375_p1;
wire  signed [18:0] sext_ln700_18_fu_10385_p1;
wire  signed [18:0] sext_ln700_21_fu_10388_p1;
wire   [18:0] add_ln700_22_fu_10391_p2;
wire  signed [18:0] sext_ln700_25_fu_10401_p1;
wire  signed [18:0] sext_ln700_28_fu_10404_p1;
wire   [18:0] add_ln700_29_fu_10407_p2;
wire  signed [19:0] sext_ln700_22_fu_10397_p1;
wire  signed [19:0] sext_ln700_29_fu_10413_p1;
wire  signed [18:0] sext_ln700_33_fu_10423_p1;
wire  signed [18:0] sext_ln700_36_fu_10426_p1;
wire   [18:0] add_ln700_38_fu_10429_p2;
wire  signed [18:0] sext_ln700_40_fu_10439_p1;
wire  signed [18:0] sext_ln700_43_fu_10442_p1;
wire   [18:0] add_ln700_45_fu_10445_p2;
wire  signed [19:0] sext_ln700_37_fu_10435_p1;
wire  signed [19:0] sext_ln700_44_fu_10451_p1;
wire  signed [18:0] sext_ln700_48_fu_10461_p1;
wire  signed [18:0] sext_ln700_51_fu_10464_p1;
wire   [18:0] add_ln700_54_fu_10467_p2;
wire  signed [18:0] sext_ln700_55_fu_10477_p1;
wire  signed [18:0] sext_ln700_58_fu_10480_p1;
wire   [18:0] add_ln700_61_fu_10483_p2;
wire  signed [19:0] sext_ln700_52_fu_10473_p1;
wire  signed [19:0] sext_ln700_59_fu_10489_p1;
wire  signed [18:0] sext_ln700_63_fu_10499_p1;
wire  signed [18:0] sext_ln700_66_fu_10502_p1;
wire   [18:0] add_ln700_70_fu_10505_p2;
wire  signed [18:0] sext_ln700_70_fu_10515_p1;
wire  signed [18:0] sext_ln700_73_fu_10518_p1;
wire   [18:0] add_ln700_77_fu_10521_p2;
wire  signed [19:0] sext_ln700_67_fu_10511_p1;
wire  signed [19:0] sext_ln700_74_fu_10527_p1;
wire  signed [18:0] sext_ln700_78_fu_10537_p1;
wire  signed [18:0] sext_ln700_81_fu_10540_p1;
wire   [18:0] add_ln700_86_fu_10543_p2;
wire  signed [18:0] sext_ln700_85_fu_10553_p1;
wire  signed [18:0] sext_ln700_88_fu_10556_p1;
wire   [18:0] add_ln700_93_fu_10559_p2;
wire  signed [19:0] sext_ln700_82_fu_10549_p1;
wire  signed [19:0] sext_ln700_89_fu_10565_p1;
wire  signed [18:0] sext_ln700_93_fu_10575_p1;
wire  signed [18:0] sext_ln700_96_fu_10578_p1;
wire   [18:0] add_ln700_102_fu_10581_p2;
wire  signed [18:0] sext_ln700_100_fu_10591_p1;
wire  signed [18:0] sext_ln700_103_fu_10594_p1;
wire   [18:0] add_ln700_109_fu_10597_p2;
wire  signed [19:0] sext_ln700_97_fu_10587_p1;
wire  signed [19:0] sext_ln700_104_fu_10603_p1;
wire  signed [18:0] sext_ln700_108_fu_10613_p1;
wire  signed [18:0] sext_ln700_111_fu_10616_p1;
wire   [18:0] add_ln700_118_fu_10619_p2;
wire  signed [18:0] sext_ln700_115_fu_10629_p1;
wire  signed [18:0] sext_ln700_118_fu_10632_p1;
wire   [18:0] add_ln700_125_fu_10635_p2;
wire  signed [19:0] sext_ln700_112_fu_10625_p1;
wire  signed [19:0] sext_ln700_119_fu_10641_p1;
wire  signed [18:0] sext_ln700_123_fu_10651_p1;
wire  signed [18:0] sext_ln700_126_fu_10654_p1;
wire   [18:0] add_ln700_134_fu_10657_p2;
wire  signed [18:0] sext_ln700_130_fu_10667_p1;
wire  signed [18:0] sext_ln700_133_fu_10670_p1;
wire   [18:0] add_ln700_141_fu_10673_p2;
wire  signed [19:0] sext_ln700_127_fu_10663_p1;
wire  signed [19:0] sext_ln700_134_fu_10679_p1;
wire  signed [18:0] sext_ln700_138_fu_10689_p1;
wire  signed [18:0] sext_ln700_141_fu_10692_p1;
wire   [18:0] add_ln700_150_fu_10695_p2;
wire  signed [18:0] sext_ln700_145_fu_10705_p1;
wire  signed [18:0] sext_ln700_148_fu_10708_p1;
wire   [18:0] add_ln700_157_fu_10711_p2;
wire  signed [19:0] sext_ln700_142_fu_10701_p1;
wire  signed [19:0] sext_ln700_149_fu_10717_p1;
wire  signed [18:0] sext_ln700_153_fu_10727_p1;
wire  signed [18:0] sext_ln700_156_fu_10730_p1;
wire   [18:0] add_ln700_166_fu_10733_p2;
wire  signed [18:0] sext_ln700_160_fu_10743_p1;
wire  signed [18:0] sext_ln700_163_fu_10746_p1;
wire   [18:0] add_ln700_173_fu_10749_p2;
wire  signed [19:0] sext_ln700_157_fu_10739_p1;
wire  signed [19:0] sext_ln700_164_fu_10755_p1;
wire  signed [18:0] sext_ln700_168_fu_10765_p1;
wire  signed [18:0] sext_ln700_171_fu_10768_p1;
wire   [18:0] add_ln700_182_fu_10771_p2;
wire  signed [18:0] sext_ln700_175_fu_10781_p1;
wire  signed [18:0] sext_ln700_178_fu_10784_p1;
wire   [18:0] add_ln700_189_fu_10787_p2;
wire  signed [19:0] sext_ln700_172_fu_10777_p1;
wire  signed [19:0] sext_ln700_179_fu_10793_p1;
wire  signed [18:0] sext_ln700_183_fu_10803_p1;
wire  signed [18:0] sext_ln700_186_fu_10806_p1;
wire   [18:0] add_ln700_198_fu_10809_p2;
wire  signed [18:0] sext_ln700_190_fu_10819_p1;
wire  signed [18:0] sext_ln700_193_fu_10822_p1;
wire   [18:0] add_ln700_205_fu_10825_p2;
wire  signed [19:0] sext_ln700_187_fu_10815_p1;
wire  signed [19:0] sext_ln700_194_fu_10831_p1;
wire  signed [18:0] sext_ln700_198_fu_10841_p1;
wire  signed [18:0] sext_ln700_201_fu_10844_p1;
wire   [18:0] add_ln700_214_fu_10847_p2;
wire  signed [18:0] sext_ln700_205_fu_10857_p1;
wire  signed [18:0] sext_ln700_208_fu_10860_p1;
wire   [18:0] add_ln700_221_fu_10863_p2;
wire  signed [19:0] sext_ln700_202_fu_10853_p1;
wire  signed [19:0] sext_ln700_209_fu_10869_p1;
wire  signed [18:0] sext_ln700_213_fu_10879_p1;
wire  signed [18:0] sext_ln700_216_fu_10882_p1;
wire   [18:0] add_ln700_230_fu_10885_p2;
wire  signed [18:0] sext_ln700_220_fu_10895_p1;
wire  signed [18:0] sext_ln700_223_fu_10898_p1;
wire   [18:0] add_ln700_237_fu_10901_p2;
wire  signed [19:0] sext_ln700_217_fu_10891_p1;
wire  signed [19:0] sext_ln700_224_fu_10907_p1;
wire  signed [18:0] sext_ln700_228_fu_10917_p1;
wire  signed [18:0] sext_ln700_231_fu_10920_p1;
wire   [18:0] add_ln700_246_fu_10923_p2;
wire  signed [18:0] sext_ln700_235_fu_10933_p1;
wire  signed [18:0] sext_ln700_238_fu_10936_p1;
wire   [18:0] add_ln700_253_fu_10939_p2;
wire  signed [19:0] sext_ln700_232_fu_10929_p1;
wire  signed [19:0] sext_ln700_239_fu_10945_p1;
wire  signed [31:0] sext_ln68_fu_10955_p1;
wire   [31:0] add_ln700_15_fu_10958_p2;
wire  signed [31:0] sext_ln68_1_fu_10974_p1;
wire   [31:0] add_ln700_31_fu_10977_p2;
wire  signed [31:0] sext_ln68_2_fu_10994_p1;
wire   [31:0] add_ln700_47_fu_10997_p2;
wire  signed [31:0] sext_ln68_3_fu_11014_p1;
wire   [31:0] add_ln700_63_fu_11017_p2;
wire  signed [31:0] sext_ln68_4_fu_11034_p1;
wire   [31:0] add_ln700_79_fu_11037_p2;
wire  signed [31:0] sext_ln68_5_fu_11054_p1;
wire   [31:0] add_ln700_95_fu_11057_p2;
wire  signed [31:0] sext_ln68_6_fu_11074_p1;
wire   [31:0] add_ln700_111_fu_11077_p2;
wire  signed [31:0] sext_ln68_7_fu_11094_p1;
wire   [31:0] add_ln700_127_fu_11097_p2;
wire  signed [31:0] sext_ln68_8_fu_11114_p1;
wire   [31:0] add_ln700_143_fu_11117_p2;
wire  signed [31:0] sext_ln68_9_fu_11134_p1;
wire   [31:0] add_ln700_159_fu_11137_p2;
wire  signed [31:0] sext_ln68_10_fu_11154_p1;
wire   [31:0] add_ln700_175_fu_11157_p2;
wire  signed [31:0] sext_ln68_11_fu_11174_p1;
wire   [31:0] add_ln700_191_fu_11177_p2;
wire  signed [31:0] sext_ln68_12_fu_11194_p1;
wire   [31:0] add_ln700_207_fu_11197_p2;
wire  signed [31:0] sext_ln68_13_fu_11214_p1;
wire   [31:0] add_ln700_223_fu_11217_p2;
wire  signed [31:0] sext_ln68_14_fu_11234_p1;
wire   [31:0] add_ln700_239_fu_11237_p2;
wire  signed [31:0] sext_ln68_15_fu_11254_p1;
wire   [31:0] add_ln700_255_fu_11257_p2;
wire   [31:0] a_tensor_0_15_V_1_fu_11263_p3;
wire   [31:0] a_tensor_0_14_V_1_fu_11243_p3;
wire   [31:0] a_tensor_0_13_V_1_fu_11223_p3;
wire   [31:0] a_tensor_0_12_V_1_fu_11203_p3;
wire   [31:0] a_tensor_0_11_V_1_fu_11183_p3;
wire   [31:0] select_ln304_5_fu_11163_p3;
wire   [31:0] select_ln304_4_fu_11143_p3;
wire   [31:0] select_ln304_3_fu_11123_p3;
wire   [31:0] select_ln304_2_fu_11103_p3;
wire   [31:0] select_ln304_1_fu_11083_p3;
wire   [31:0] select_ln304_fu_11063_p3;
wire   [31:0] a_tensor_0_4_V_1_fu_11043_p3;
wire   [31:0] a_tensor_0_3_V_1_fu_11023_p3;
wire   [31:0] a_tensor_0_2_V_1_fu_11003_p3;
wire   [31:0] a_tensor_0_1_V_1_fu_10983_p3;
wire   [31:0] a_tensor_0_0_V_1_fu_10963_p3;
wire   [7:0] trunc_ln647_20_fu_11270_p1;
wire   [7:0] trunc_ln647_19_fu_11250_p1;
wire   [7:0] trunc_ln647_18_fu_11230_p1;
wire   [7:0] trunc_ln647_17_fu_11210_p1;
wire   [7:0] trunc_ln647_16_fu_11190_p1;
wire   [7:0] trunc_ln647_15_fu_11170_p1;
wire   [7:0] trunc_ln647_14_fu_11150_p1;
wire   [7:0] trunc_ln647_13_fu_11130_p1;
wire   [7:0] trunc_ln647_12_fu_11110_p1;
wire   [7:0] trunc_ln647_11_fu_11090_p1;
wire   [7:0] trunc_ln647_10_fu_11070_p1;
wire   [7:0] o_tensor_0_4_V_1_fu_11050_p1;
wire   [7:0] o_tensor_0_3_V_1_fu_11030_p1;
wire   [7:0] o_tensor_0_2_V_1_fu_11010_p1;
wire   [7:0] o_tensor_0_1_V_1_fu_10990_p1;
wire   [7:0] o_tensor_0_0_V_1_fu_10970_p1;
wire   [34:0] ret_V_fu_11359_p3;
wire   [35:0] zext_ln1352_fu_11367_p1;
wire   [15:0] trunc_ln89_fu_11403_p1;
wire   [15:0] add_ln89_1_fu_11407_p2;
wire   [9:0] zext_ln89_2_fu_11445_p1;
wire   [9:0] zext_ln89_3_fu_11448_p1;
wire   [9:0] xor_ln89_fu_11454_p2;
wire   [9:0] select_ln89_fu_11460_p3;
wire   [9:0] select_ln89_2_fu_11474_p3;
wire   [9:0] select_ln89_1_fu_11467_p3;
wire   [9:0] xor_ln89_1_fu_11481_p2;
wire   [511:0] zext_ln89_4_fu_11451_p1;
wire   [511:0] zext_ln89_5_fu_11487_p1;
wire   [511:0] zext_ln89_6_fu_11491_p1;
wire   [511:0] zext_ln89_7_fu_11495_p1;
wire   [511:0] shl_ln89_3_fu_11505_p2;
wire   [511:0] lshr_ln89_fu_11511_p2;
wire   [5:0] tmp_34_fu_11523_p3;
wire   [63:0] zext_ln89_8_fu_11530_p1;
reg   [511:0] tmp_33_fu_11544_p4;
wire   [511:0] select_ln89_3_fu_11553_p3;
wire   [14:0] trunc_ln480_fu_11602_p1;
wire  signed [7:0] grp_fu_11622_p0;
wire  signed [15:0] sext_ln215_fu_8783_p1;
wire  signed [7:0] grp_fu_11631_p0;
wire  signed [15:0] sext_ln215_4_fu_8792_p1;
wire  signed [7:0] grp_fu_11640_p0;
wire  signed [15:0] sext_ln215_8_fu_8801_p1;
wire  signed [7:0] grp_fu_11649_p0;
wire  signed [15:0] sext_ln215_12_fu_8810_p1;
wire  signed [7:0] grp_fu_11658_p0;
wire  signed [15:0] sext_ln215_16_fu_8819_p1;
wire  signed [7:0] grp_fu_11667_p0;
wire  signed [15:0] sext_ln215_20_fu_8828_p1;
wire  signed [7:0] grp_fu_11676_p0;
wire  signed [15:0] sext_ln215_24_fu_8837_p1;
wire  signed [7:0] grp_fu_11685_p0;
wire  signed [15:0] sext_ln215_28_fu_8846_p1;
wire  signed [7:0] grp_fu_11694_p0;
wire  signed [7:0] grp_fu_11703_p0;
wire  signed [7:0] grp_fu_11712_p0;
wire  signed [7:0] grp_fu_11721_p0;
wire  signed [7:0] grp_fu_11730_p0;
wire  signed [7:0] grp_fu_11739_p0;
wire  signed [7:0] grp_fu_11748_p0;
wire  signed [7:0] grp_fu_11757_p0;
wire  signed [7:0] grp_fu_11766_p0;
wire  signed [7:0] grp_fu_11775_p0;
wire  signed [7:0] grp_fu_11784_p0;
wire  signed [7:0] grp_fu_11793_p0;
wire  signed [7:0] grp_fu_11802_p0;
wire  signed [7:0] grp_fu_11811_p0;
wire  signed [7:0] grp_fu_11820_p0;
wire  signed [7:0] grp_fu_11829_p0;
wire  signed [7:0] grp_fu_11838_p0;
wire  signed [7:0] grp_fu_11847_p0;
wire  signed [7:0] grp_fu_11856_p0;
wire  signed [7:0] grp_fu_11865_p0;
wire  signed [7:0] grp_fu_11874_p0;
wire  signed [7:0] grp_fu_11883_p0;
wire  signed [7:0] grp_fu_11892_p0;
wire  signed [7:0] grp_fu_11901_p0;
wire  signed [7:0] grp_fu_11910_p0;
wire  signed [7:0] grp_fu_11919_p0;
wire  signed [7:0] grp_fu_11928_p0;
wire  signed [7:0] grp_fu_11937_p0;
wire  signed [7:0] grp_fu_11946_p0;
wire  signed [7:0] grp_fu_11955_p0;
wire  signed [7:0] grp_fu_11964_p0;
wire  signed [7:0] grp_fu_11973_p0;
wire  signed [7:0] grp_fu_11982_p0;
wire  signed [7:0] grp_fu_11991_p0;
wire  signed [7:0] grp_fu_12000_p0;
wire  signed [7:0] grp_fu_12009_p0;
wire  signed [7:0] grp_fu_12018_p0;
wire  signed [7:0] grp_fu_12027_p0;
wire  signed [7:0] grp_fu_12036_p0;
wire  signed [7:0] grp_fu_12045_p0;
wire  signed [7:0] grp_fu_12054_p0;
wire  signed [7:0] grp_fu_12063_p0;
wire  signed [7:0] grp_fu_12072_p0;
wire  signed [7:0] grp_fu_12081_p0;
wire  signed [7:0] grp_fu_12090_p0;
wire  signed [7:0] grp_fu_12099_p0;
wire  signed [7:0] grp_fu_12108_p0;
wire  signed [7:0] grp_fu_12117_p0;
wire  signed [7:0] grp_fu_12126_p0;
wire  signed [7:0] grp_fu_12135_p0;
wire  signed [7:0] grp_fu_12144_p0;
wire  signed [7:0] grp_fu_12153_p0;
wire  signed [7:0] grp_fu_12162_p0;
wire  signed [7:0] grp_fu_12171_p0;
wire  signed [7:0] grp_fu_12180_p0;
wire  signed [7:0] grp_fu_12189_p0;
wire  signed [7:0] grp_fu_12198_p0;
wire  signed [7:0] grp_fu_12207_p0;
wire  signed [7:0] grp_fu_12216_p0;
wire  signed [7:0] grp_fu_12225_p0;
wire  signed [7:0] grp_fu_12234_p0;
wire  signed [7:0] grp_fu_12243_p0;
wire  signed [7:0] grp_fu_12252_p0;
wire  signed [7:0] grp_fu_12261_p0;
wire  signed [7:0] grp_fu_12270_p0;
wire  signed [7:0] grp_fu_12279_p0;
wire  signed [7:0] grp_fu_12288_p0;
wire  signed [7:0] grp_fu_12297_p0;
wire  signed [7:0] grp_fu_12306_p0;
wire  signed [7:0] grp_fu_12315_p0;
wire  signed [7:0] grp_fu_12324_p0;
wire  signed [7:0] grp_fu_12333_p0;
wire  signed [7:0] grp_fu_12342_p0;
wire  signed [7:0] grp_fu_12351_p0;
wire  signed [7:0] grp_fu_12360_p0;
wire  signed [7:0] grp_fu_12369_p0;
wire  signed [7:0] grp_fu_12378_p0;
wire  signed [7:0] grp_fu_12387_p0;
wire  signed [7:0] grp_fu_12396_p0;
wire  signed [7:0] grp_fu_12405_p0;
wire  signed [7:0] grp_fu_12414_p0;
wire  signed [7:0] grp_fu_12423_p0;
wire  signed [7:0] grp_fu_12432_p0;
wire  signed [7:0] grp_fu_12441_p0;
wire  signed [7:0] grp_fu_12450_p0;
wire  signed [7:0] grp_fu_12459_p0;
wire  signed [7:0] grp_fu_12468_p0;
wire  signed [7:0] grp_fu_12477_p0;
wire  signed [7:0] grp_fu_12486_p0;
wire  signed [7:0] grp_fu_12495_p0;
wire  signed [7:0] grp_fu_12504_p0;
wire  signed [7:0] grp_fu_12513_p0;
wire  signed [7:0] grp_fu_12522_p0;
wire  signed [7:0] grp_fu_12531_p0;
wire  signed [7:0] grp_fu_12540_p0;
wire  signed [7:0] grp_fu_12549_p0;
wire  signed [7:0] grp_fu_12558_p0;
wire  signed [7:0] grp_fu_12567_p0;
wire  signed [7:0] grp_fu_12576_p0;
wire  signed [7:0] grp_fu_12585_p0;
wire  signed [7:0] grp_fu_12594_p0;
wire  signed [7:0] grp_fu_12603_p0;
wire  signed [7:0] grp_fu_12612_p0;
wire  signed [7:0] grp_fu_12621_p0;
wire  signed [7:0] grp_fu_12630_p0;
wire  signed [7:0] grp_fu_12639_p0;
wire  signed [7:0] grp_fu_12648_p0;
wire  signed [7:0] grp_fu_12657_p0;
wire  signed [7:0] grp_fu_12666_p0;
wire  signed [7:0] grp_fu_12675_p0;
wire  signed [7:0] grp_fu_12684_p0;
wire  signed [7:0] grp_fu_12693_p0;
wire  signed [7:0] grp_fu_12702_p0;
wire  signed [7:0] grp_fu_12711_p0;
wire  signed [7:0] grp_fu_12720_p0;
wire  signed [7:0] grp_fu_12729_p0;
wire  signed [7:0] grp_fu_12738_p0;
wire  signed [7:0] grp_fu_12747_p0;
wire  signed [7:0] grp_fu_12756_p0;
wire  signed [7:0] grp_fu_12765_p0;
wire    regslice_both_g2l_dep_queue_V_U_apdone_blk;
wire    regslice_both_g2s_dep_queue_V_U_apdone_blk;
reg    ap_block_state64;
reg    ap_block_state64_io;
reg   [42:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_block_pp1;
reg    ap_block_pp2;
reg    ap_block_pp3;
reg    ap_enable_operation_248;
reg    ap_enable_state13_pp0_iter1_stage1;
reg    ap_enable_operation_252;
reg    ap_enable_state14_pp0_iter2_stage0;
reg    ap_enable_operation_695;
reg    ap_enable_state18_pp0_iter4_stage0;
reg    ap_enable_operation_251;
reg    ap_enable_operation_269;
reg    ap_enable_operation_1334;
reg    ap_enable_state35_pp1_iter7_stage0;
reg    ap_enable_operation_2175;
reg    ap_enable_state36_pp1_iter8_stage0;
reg    ap_enable_operation_2406;
reg    ap_enable_state37_pp1_iter9_stage0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
wire    regslice_both_gemm_queue_V_V_U_apdone_blk;
wire   [127:0] gemm_queue_V_V_TDATA_int;
wire    gemm_queue_V_V_TVALID_int;
reg    gemm_queue_V_V_TREADY_int;
wire    regslice_both_gemm_queue_V_V_U_ack_in;
wire    regslice_both_l2g_dep_queue_V_U_apdone_blk;
wire   [7:0] l2g_dep_queue_V_TDATA_int;
wire    l2g_dep_queue_V_TVALID_int;
reg    l2g_dep_queue_V_TREADY_int;
wire    regslice_both_l2g_dep_queue_V_U_ack_in;
wire    regslice_both_s2g_dep_queue_V_U_apdone_blk;
wire   [7:0] s2g_dep_queue_V_TDATA_int;
wire    s2g_dep_queue_V_TVALID_int;
reg    s2g_dep_queue_V_TREADY_int;
wire    regslice_both_s2g_dep_queue_V_U_ack_in;
reg    g2l_dep_queue_V_TVALID_int;
wire    g2l_dep_queue_V_TREADY_int;
wire    regslice_both_g2l_dep_queue_V_U_vld_out;
reg    g2s_dep_queue_V_TVALID_int;
wire    g2s_dep_queue_V_TREADY_int;
wire    regslice_both_g2s_dep_queue_V_U_vld_out;
wire   [45:0] grp_fu_1890_p00;
wire   [45:0] grp_fu_1890_p10;
wire   [59:0] grp_fu_1903_p00;
wire   [59:0] grp_fu_1903_p10;
wire   [45:0] grp_fu_4615_p00;
wire   [45:0] grp_fu_4615_p10;
wire   [59:0] grp_fu_4628_p00;
wire   [59:0] grp_fu_4628_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 43'd1;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 ap_enable_reg_pp1_iter7 = 1'b0;
#0 ap_enable_reg_pp1_iter9 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
end

compute_uop_mem_V #(
    .DataWidth( 32 ),
    .AddressRange( 8192 ),
    .AddressWidth( 13 ))
uop_mem_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(uop_mem_V_address0),
    .ce0(uop_mem_V_ce0),
    .we0(uop_mem_V_we0),
    .d0(uop_port_addr_read_reg_16568),
    .q0(uop_mem_V_q0)
);

compute_acc_mem_V #(
    .DataWidth( 512 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
acc_mem_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(acc_mem_V_address0),
    .ce0(acc_mem_V_ce0),
    .we0(acc_mem_V_we0),
    .d0(acc_mem_V_d0),
    .q0(acc_mem_V_q0),
    .address1(acc_mem_V_address1),
    .ce1(acc_mem_V_ce1),
    .we1(acc_mem_V_we1),
    .d1(acc_mem_V_d1),
    .q1(acc_mem_V_q1)
);

compute_CONTROL_BUS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_BUS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_BUS_DATA_WIDTH ))
compute_CONTROL_BUS_s_axi_U(
    .AWVALID(s_axi_CONTROL_BUS_AWVALID),
    .AWREADY(s_axi_CONTROL_BUS_AWREADY),
    .AWADDR(s_axi_CONTROL_BUS_AWADDR),
    .WVALID(s_axi_CONTROL_BUS_WVALID),
    .WREADY(s_axi_CONTROL_BUS_WREADY),
    .WDATA(s_axi_CONTROL_BUS_WDATA),
    .WSTRB(s_axi_CONTROL_BUS_WSTRB),
    .ARVALID(s_axi_CONTROL_BUS_ARVALID),
    .ARREADY(s_axi_CONTROL_BUS_ARREADY),
    .ARADDR(s_axi_CONTROL_BUS_ARADDR),
    .RVALID(s_axi_CONTROL_BUS_RVALID),
    .RREADY(s_axi_CONTROL_BUS_RREADY),
    .RDATA(s_axi_CONTROL_BUS_RDATA),
    .RRESP(s_axi_CONTROL_BUS_RRESP),
    .BVALID(s_axi_CONTROL_BUS_BVALID),
    .BREADY(s_axi_CONTROL_BUS_BREADY),
    .BRESP(s_axi_CONTROL_BUS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .done_o(done_o),
    .done_o_ap_vld(done_o_ap_vld),
    .done_i(done_i),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .uops_V(uops_V),
    .biases_V(biases_V)
);

compute_uop_port_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_UOP_PORT_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_UOP_PORT_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_UOP_PORT_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_UOP_PORT_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_UOP_PORT_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_UOP_PORT_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_UOP_PORT_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_UOP_PORT_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_UOP_PORT_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_UOP_PORT_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_UOP_PORT_CACHE_VALUE ))
compute_uop_port_m_axi_U(
    .AWVALID(m_axi_uop_port_AWVALID),
    .AWREADY(m_axi_uop_port_AWREADY),
    .AWADDR(m_axi_uop_port_AWADDR),
    .AWID(m_axi_uop_port_AWID),
    .AWLEN(m_axi_uop_port_AWLEN),
    .AWSIZE(m_axi_uop_port_AWSIZE),
    .AWBURST(m_axi_uop_port_AWBURST),
    .AWLOCK(m_axi_uop_port_AWLOCK),
    .AWCACHE(m_axi_uop_port_AWCACHE),
    .AWPROT(m_axi_uop_port_AWPROT),
    .AWQOS(m_axi_uop_port_AWQOS),
    .AWREGION(m_axi_uop_port_AWREGION),
    .AWUSER(m_axi_uop_port_AWUSER),
    .WVALID(m_axi_uop_port_WVALID),
    .WREADY(m_axi_uop_port_WREADY),
    .WDATA(m_axi_uop_port_WDATA),
    .WSTRB(m_axi_uop_port_WSTRB),
    .WLAST(m_axi_uop_port_WLAST),
    .WID(m_axi_uop_port_WID),
    .WUSER(m_axi_uop_port_WUSER),
    .ARVALID(m_axi_uop_port_ARVALID),
    .ARREADY(m_axi_uop_port_ARREADY),
    .ARADDR(m_axi_uop_port_ARADDR),
    .ARID(m_axi_uop_port_ARID),
    .ARLEN(m_axi_uop_port_ARLEN),
    .ARSIZE(m_axi_uop_port_ARSIZE),
    .ARBURST(m_axi_uop_port_ARBURST),
    .ARLOCK(m_axi_uop_port_ARLOCK),
    .ARCACHE(m_axi_uop_port_ARCACHE),
    .ARPROT(m_axi_uop_port_ARPROT),
    .ARQOS(m_axi_uop_port_ARQOS),
    .ARREGION(m_axi_uop_port_ARREGION),
    .ARUSER(m_axi_uop_port_ARUSER),
    .RVALID(m_axi_uop_port_RVALID),
    .RREADY(m_axi_uop_port_RREADY),
    .RDATA(m_axi_uop_port_RDATA),
    .RLAST(m_axi_uop_port_RLAST),
    .RID(m_axi_uop_port_RID),
    .RUSER(m_axi_uop_port_RUSER),
    .RRESP(m_axi_uop_port_RRESP),
    .BVALID(m_axi_uop_port_BVALID),
    .BREADY(m_axi_uop_port_BREADY),
    .BRESP(m_axi_uop_port_BRESP),
    .BID(m_axi_uop_port_BID),
    .BUSER(m_axi_uop_port_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(uop_port_ARVALID),
    .I_ARREADY(uop_port_ARREADY),
    .I_ARADDR(uop_port_addr_reg_12976),
    .I_ARID(1'd0),
    .I_ARLEN(uop_port_ARLEN),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(uop_port_RVALID),
    .I_RREADY(uop_port_RREADY),
    .I_RDATA(uop_port_RDATA),
    .I_RID(uop_port_RID),
    .I_RUSER(uop_port_RUSER),
    .I_RRESP(uop_port_RRESP),
    .I_RLAST(uop_port_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(uop_port_AWREADY),
    .I_AWADDR(32'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(uop_port_WREADY),
    .I_WDATA(32'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd0),
    .I_BVALID(uop_port_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(uop_port_BRESP),
    .I_BID(uop_port_BID),
    .I_BUSER(uop_port_BUSER)
);

compute_data_port_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 64 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_DATA_PORT_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_DATA_PORT_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_DATA_PORT_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_DATA_PORT_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_DATA_PORT_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_DATA_PORT_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_DATA_PORT_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_DATA_PORT_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_DATA_PORT_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_DATA_PORT_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_DATA_PORT_CACHE_VALUE ))
compute_data_port_m_axi_U(
    .AWVALID(m_axi_data_port_AWVALID),
    .AWREADY(m_axi_data_port_AWREADY),
    .AWADDR(m_axi_data_port_AWADDR),
    .AWID(m_axi_data_port_AWID),
    .AWLEN(m_axi_data_port_AWLEN),
    .AWSIZE(m_axi_data_port_AWSIZE),
    .AWBURST(m_axi_data_port_AWBURST),
    .AWLOCK(m_axi_data_port_AWLOCK),
    .AWCACHE(m_axi_data_port_AWCACHE),
    .AWPROT(m_axi_data_port_AWPROT),
    .AWQOS(m_axi_data_port_AWQOS),
    .AWREGION(m_axi_data_port_AWREGION),
    .AWUSER(m_axi_data_port_AWUSER),
    .WVALID(m_axi_data_port_WVALID),
    .WREADY(m_axi_data_port_WREADY),
    .WDATA(m_axi_data_port_WDATA),
    .WSTRB(m_axi_data_port_WSTRB),
    .WLAST(m_axi_data_port_WLAST),
    .WID(m_axi_data_port_WID),
    .WUSER(m_axi_data_port_WUSER),
    .ARVALID(m_axi_data_port_ARVALID),
    .ARREADY(m_axi_data_port_ARREADY),
    .ARADDR(m_axi_data_port_ARADDR),
    .ARID(m_axi_data_port_ARID),
    .ARLEN(m_axi_data_port_ARLEN),
    .ARSIZE(m_axi_data_port_ARSIZE),
    .ARBURST(m_axi_data_port_ARBURST),
    .ARLOCK(m_axi_data_port_ARLOCK),
    .ARCACHE(m_axi_data_port_ARCACHE),
    .ARPROT(m_axi_data_port_ARPROT),
    .ARQOS(m_axi_data_port_ARQOS),
    .ARREGION(m_axi_data_port_ARREGION),
    .ARUSER(m_axi_data_port_ARUSER),
    .RVALID(m_axi_data_port_RVALID),
    .RREADY(m_axi_data_port_RREADY),
    .RDATA(m_axi_data_port_RDATA),
    .RLAST(m_axi_data_port_RLAST),
    .RID(m_axi_data_port_RID),
    .RUSER(m_axi_data_port_RUSER),
    .RRESP(m_axi_data_port_RRESP),
    .BVALID(m_axi_data_port_BVALID),
    .BREADY(m_axi_data_port_BREADY),
    .BRESP(m_axi_data_port_BRESP),
    .BID(m_axi_data_port_BID),
    .BUSER(m_axi_data_port_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(data_port_ARVALID),
    .I_ARREADY(data_port_ARREADY),
    .I_ARADDR(data_port_ARADDR),
    .I_ARID(1'd0),
    .I_ARLEN(zext_ln89_reg_12971),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(data_port_RVALID),
    .I_RREADY(data_port_RREADY),
    .I_RDATA(data_port_RDATA),
    .I_RID(data_port_RID),
    .I_RUSER(data_port_RUSER),
    .I_RRESP(data_port_RRESP),
    .I_RLAST(data_port_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(data_port_AWREADY),
    .I_AWADDR(32'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(data_port_WREADY),
    .I_WDATA(64'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(8'd0),
    .I_BVALID(data_port_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(data_port_BRESP),
    .I_BID(data_port_BID),
    .I_BUSER(data_port_BUSER)
);

compute_mul_32ns_14ns_46_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 46 ))
compute_mul_32ns_14ns_46_3_1_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1890_p0),
    .din1(grp_fu_1890_p1),
    .ce(1'b1),
    .dout(grp_fu_1890_p2)
);

compute_mul_46ns_14ns_60_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 46 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 60 ))
compute_mul_46ns_14ns_60_5_1_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1903_p0),
    .din1(grp_fu_1903_p1),
    .ce(1'b1),
    .dout(grp_fu_1903_p2)
);

compute_mul_14ns_32ns_46_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 46 ))
compute_mul_14ns_32ns_46_3_1_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_4615_p0),
    .din1(grp_fu_4615_p1),
    .ce(1'b1),
    .dout(grp_fu_4615_p2)
);

compute_mul_14ns_46ns_60_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 46 ),
    .dout_WIDTH( 60 ))
compute_mul_14ns_46ns_60_5_1_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_4628_p0),
    .din1(grp_fu_4628_p1),
    .ce(1'b1),
    .dout(grp_fu_4628_p2)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U5(
    .din0(grp_fu_11622_p0),
    .din1(trunc_ln647_1_reg_14035_pp1_iter6_reg),
    .din2(mul_ln1352_1_reg_15395),
    .dout(grp_fu_11622_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U6(
    .din0(grp_fu_11631_p0),
    .din1(w_tensor_i_0_2_reg_14045_pp1_iter6_reg),
    .din2(mul_ln1352_3_reg_15400),
    .dout(grp_fu_11631_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U7(
    .din0(grp_fu_11640_p0),
    .din1(w_tensor_i_0_4_reg_14055_pp1_iter6_reg),
    .din2(mul_ln1352_5_reg_15405),
    .dout(grp_fu_11640_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U8(
    .din0(grp_fu_11649_p0),
    .din1(w_tensor_i_0_6_reg_14065_pp1_iter6_reg),
    .din2(mul_ln1352_7_reg_15410),
    .dout(grp_fu_11649_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U9(
    .din0(grp_fu_11658_p0),
    .din1(trunc_ln647_2_reg_14075_pp1_iter6_reg),
    .din2(mul_ln1352_9_reg_15415),
    .dout(grp_fu_11658_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U10(
    .din0(grp_fu_11667_p0),
    .din1(w_tensor_i_0_s_reg_14085_pp1_iter6_reg),
    .din2(mul_ln1352_11_reg_15420),
    .dout(grp_fu_11667_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U11(
    .din0(grp_fu_11676_p0),
    .din1(w_tensor_i_0_10_reg_14095_pp1_iter6_reg),
    .din2(mul_ln1352_13_reg_15425),
    .dout(grp_fu_11676_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U12(
    .din0(grp_fu_11685_p0),
    .din1(w_tensor_i_0_12_reg_14105_pp1_iter6_reg),
    .din2(mul_ln1352_15_reg_15430),
    .dout(grp_fu_11685_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U13(
    .din0(grp_fu_11694_p0),
    .din1(w_tensor_i_1_reg_14115_pp1_iter6_reg),
    .din2(mul_ln1352_17_reg_15435),
    .dout(grp_fu_11694_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U14(
    .din0(grp_fu_11703_p0),
    .din1(w_tensor_i_1_2_reg_14125_pp1_iter6_reg),
    .din2(mul_ln1352_19_reg_15440),
    .dout(grp_fu_11703_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U15(
    .din0(grp_fu_11712_p0),
    .din1(w_tensor_i_1_4_reg_14135_pp1_iter6_reg),
    .din2(mul_ln1352_21_reg_15445),
    .dout(grp_fu_11712_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U16(
    .din0(grp_fu_11721_p0),
    .din1(w_tensor_i_1_6_reg_14145_pp1_iter6_reg),
    .din2(mul_ln1352_23_reg_15450),
    .dout(grp_fu_11721_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U17(
    .din0(grp_fu_11730_p0),
    .din1(w_tensor_i_1_8_reg_14155_pp1_iter6_reg),
    .din2(mul_ln1352_25_reg_15455),
    .dout(grp_fu_11730_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U18(
    .din0(grp_fu_11739_p0),
    .din1(w_tensor_i_1_s_reg_14165_pp1_iter6_reg),
    .din2(mul_ln1352_27_reg_15460),
    .dout(grp_fu_11739_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U19(
    .din0(grp_fu_11748_p0),
    .din1(w_tensor_i_1_11_reg_14175_pp1_iter6_reg),
    .din2(mul_ln1352_29_reg_15465),
    .dout(grp_fu_11748_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U20(
    .din0(grp_fu_11757_p0),
    .din1(w_tensor_i_1_13_reg_14185_pp1_iter6_reg),
    .din2(mul_ln1352_31_reg_15470),
    .dout(grp_fu_11757_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U21(
    .din0(grp_fu_11766_p0),
    .din1(w_tensor_i_2_reg_14195_pp1_iter6_reg),
    .din2(mul_ln1352_33_reg_15475),
    .dout(grp_fu_11766_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U22(
    .din0(grp_fu_11775_p0),
    .din1(w_tensor_i_2_2_reg_14205_pp1_iter6_reg),
    .din2(mul_ln1352_35_reg_15480),
    .dout(grp_fu_11775_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U23(
    .din0(grp_fu_11784_p0),
    .din1(w_tensor_i_2_4_reg_14215_pp1_iter6_reg),
    .din2(mul_ln1352_37_reg_15485),
    .dout(grp_fu_11784_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U24(
    .din0(grp_fu_11793_p0),
    .din1(w_tensor_i_2_6_reg_14225_pp1_iter6_reg),
    .din2(mul_ln1352_39_reg_15490),
    .dout(grp_fu_11793_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U25(
    .din0(grp_fu_11802_p0),
    .din1(w_tensor_i_2_8_reg_14235_pp1_iter6_reg),
    .din2(mul_ln1352_41_reg_15495),
    .dout(grp_fu_11802_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U26(
    .din0(grp_fu_11811_p0),
    .din1(w_tensor_i_2_s_reg_14245_pp1_iter6_reg),
    .din2(mul_ln1352_43_reg_15500),
    .dout(grp_fu_11811_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U27(
    .din0(grp_fu_11820_p0),
    .din1(w_tensor_i_2_11_reg_14255_pp1_iter6_reg),
    .din2(mul_ln1352_45_reg_15505),
    .dout(grp_fu_11820_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U28(
    .din0(grp_fu_11829_p0),
    .din1(w_tensor_i_2_13_reg_14265_pp1_iter6_reg),
    .din2(mul_ln1352_47_reg_15510),
    .dout(grp_fu_11829_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U29(
    .din0(grp_fu_11838_p0),
    .din1(w_tensor_i_3_reg_14275_pp1_iter6_reg),
    .din2(mul_ln1352_49_reg_15515),
    .dout(grp_fu_11838_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U30(
    .din0(grp_fu_11847_p0),
    .din1(w_tensor_i_3_2_reg_14285_pp1_iter6_reg),
    .din2(mul_ln1352_51_reg_15520),
    .dout(grp_fu_11847_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U31(
    .din0(grp_fu_11856_p0),
    .din1(w_tensor_i_3_4_reg_14295_pp1_iter6_reg),
    .din2(mul_ln1352_53_reg_15525),
    .dout(grp_fu_11856_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U32(
    .din0(grp_fu_11865_p0),
    .din1(w_tensor_i_3_6_reg_14305_pp1_iter6_reg),
    .din2(mul_ln1352_55_reg_15530),
    .dout(grp_fu_11865_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U33(
    .din0(grp_fu_11874_p0),
    .din1(w_tensor_i_3_8_reg_14315_pp1_iter6_reg),
    .din2(mul_ln1352_57_reg_15535),
    .dout(grp_fu_11874_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U34(
    .din0(grp_fu_11883_p0),
    .din1(w_tensor_i_3_s_reg_14325_pp1_iter6_reg),
    .din2(mul_ln1352_59_reg_15540),
    .dout(grp_fu_11883_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U35(
    .din0(grp_fu_11892_p0),
    .din1(w_tensor_i_3_11_reg_14335_pp1_iter6_reg),
    .din2(mul_ln1352_61_reg_15545),
    .dout(grp_fu_11892_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U36(
    .din0(grp_fu_11901_p0),
    .din1(w_tensor_i_3_13_reg_14345_pp1_iter6_reg),
    .din2(mul_ln1352_63_reg_15550),
    .dout(grp_fu_11901_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U37(
    .din0(grp_fu_11910_p0),
    .din1(w_tensor_i_4_reg_14355_pp1_iter6_reg),
    .din2(mul_ln1352_65_reg_15555),
    .dout(grp_fu_11910_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U38(
    .din0(grp_fu_11919_p0),
    .din1(w_tensor_i_4_2_reg_14365_pp1_iter6_reg),
    .din2(mul_ln1352_67_reg_15560),
    .dout(grp_fu_11919_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U39(
    .din0(grp_fu_11928_p0),
    .din1(w_tensor_i_4_4_reg_14375_pp1_iter6_reg),
    .din2(mul_ln1352_69_reg_15565),
    .dout(grp_fu_11928_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U40(
    .din0(grp_fu_11937_p0),
    .din1(w_tensor_i_4_6_reg_14385_pp1_iter6_reg),
    .din2(mul_ln1352_71_reg_15570),
    .dout(grp_fu_11937_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U41(
    .din0(grp_fu_11946_p0),
    .din1(w_tensor_i_4_8_reg_14395_pp1_iter6_reg),
    .din2(mul_ln1352_73_reg_15575),
    .dout(grp_fu_11946_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U42(
    .din0(grp_fu_11955_p0),
    .din1(w_tensor_i_4_s_reg_14405_pp1_iter6_reg),
    .din2(mul_ln1352_75_reg_15580),
    .dout(grp_fu_11955_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U43(
    .din0(grp_fu_11964_p0),
    .din1(w_tensor_i_4_11_reg_14415_pp1_iter6_reg),
    .din2(mul_ln1352_77_reg_15585),
    .dout(grp_fu_11964_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U44(
    .din0(grp_fu_11973_p0),
    .din1(w_tensor_i_4_13_reg_14425_pp1_iter6_reg),
    .din2(mul_ln1352_79_reg_15590),
    .dout(grp_fu_11973_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U45(
    .din0(grp_fu_11982_p0),
    .din1(w_tensor_i_5_reg_14435_pp1_iter6_reg),
    .din2(mul_ln1352_81_reg_15595),
    .dout(grp_fu_11982_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U46(
    .din0(grp_fu_11991_p0),
    .din1(w_tensor_i_5_2_reg_14445_pp1_iter6_reg),
    .din2(mul_ln1352_83_reg_15600),
    .dout(grp_fu_11991_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U47(
    .din0(grp_fu_12000_p0),
    .din1(w_tensor_i_5_4_reg_14455_pp1_iter6_reg),
    .din2(mul_ln1352_85_reg_15605),
    .dout(grp_fu_12000_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U48(
    .din0(grp_fu_12009_p0),
    .din1(w_tensor_i_5_6_reg_14465_pp1_iter6_reg),
    .din2(mul_ln1352_87_reg_15610),
    .dout(grp_fu_12009_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U49(
    .din0(grp_fu_12018_p0),
    .din1(w_tensor_i_5_8_reg_14475_pp1_iter6_reg),
    .din2(mul_ln1352_89_reg_15615),
    .dout(grp_fu_12018_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U50(
    .din0(grp_fu_12027_p0),
    .din1(w_tensor_i_5_s_reg_14485_pp1_iter6_reg),
    .din2(mul_ln1352_91_reg_15620),
    .dout(grp_fu_12027_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U51(
    .din0(grp_fu_12036_p0),
    .din1(w_tensor_i_5_11_reg_14495_pp1_iter6_reg),
    .din2(mul_ln1352_93_reg_15625),
    .dout(grp_fu_12036_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U52(
    .din0(grp_fu_12045_p0),
    .din1(w_tensor_i_5_13_reg_14505_pp1_iter6_reg),
    .din2(mul_ln1352_95_reg_15630),
    .dout(grp_fu_12045_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U53(
    .din0(grp_fu_12054_p0),
    .din1(w_tensor_i_6_reg_14515_pp1_iter6_reg),
    .din2(mul_ln1352_97_reg_15635),
    .dout(grp_fu_12054_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U54(
    .din0(grp_fu_12063_p0),
    .din1(w_tensor_i_6_2_reg_14525_pp1_iter6_reg),
    .din2(mul_ln1352_99_reg_15640),
    .dout(grp_fu_12063_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U55(
    .din0(grp_fu_12072_p0),
    .din1(w_tensor_i_6_4_reg_14535_pp1_iter6_reg),
    .din2(mul_ln1352_101_reg_15645),
    .dout(grp_fu_12072_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U56(
    .din0(grp_fu_12081_p0),
    .din1(w_tensor_i_6_6_reg_14545_pp1_iter6_reg),
    .din2(mul_ln1352_103_reg_15650),
    .dout(grp_fu_12081_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U57(
    .din0(grp_fu_12090_p0),
    .din1(w_tensor_i_6_8_reg_14555_pp1_iter6_reg),
    .din2(mul_ln1352_105_reg_15655),
    .dout(grp_fu_12090_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U58(
    .din0(grp_fu_12099_p0),
    .din1(w_tensor_i_6_s_reg_14565_pp1_iter6_reg),
    .din2(mul_ln1352_107_reg_15660),
    .dout(grp_fu_12099_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U59(
    .din0(grp_fu_12108_p0),
    .din1(w_tensor_i_6_11_reg_14575_pp1_iter6_reg),
    .din2(mul_ln1352_109_reg_15665),
    .dout(grp_fu_12108_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U60(
    .din0(grp_fu_12117_p0),
    .din1(w_tensor_i_6_13_reg_14585_pp1_iter6_reg),
    .din2(mul_ln1352_111_reg_15670),
    .dout(grp_fu_12117_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U61(
    .din0(grp_fu_12126_p0),
    .din1(w_tensor_i_7_reg_14595_pp1_iter6_reg),
    .din2(mul_ln1352_113_reg_15675),
    .dout(grp_fu_12126_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U62(
    .din0(grp_fu_12135_p0),
    .din1(w_tensor_i_7_2_reg_14605_pp1_iter6_reg),
    .din2(mul_ln1352_115_reg_15680),
    .dout(grp_fu_12135_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U63(
    .din0(grp_fu_12144_p0),
    .din1(w_tensor_i_7_4_reg_14615_pp1_iter6_reg),
    .din2(mul_ln1352_117_reg_15685),
    .dout(grp_fu_12144_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U64(
    .din0(grp_fu_12153_p0),
    .din1(w_tensor_i_7_6_reg_14625_pp1_iter6_reg),
    .din2(mul_ln1352_119_reg_15690),
    .dout(grp_fu_12153_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U65(
    .din0(grp_fu_12162_p0),
    .din1(w_tensor_i_7_8_reg_14635_pp1_iter6_reg),
    .din2(mul_ln1352_121_reg_15695),
    .dout(grp_fu_12162_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U66(
    .din0(grp_fu_12171_p0),
    .din1(w_tensor_i_7_s_reg_14645_pp1_iter6_reg),
    .din2(mul_ln1352_123_reg_15700),
    .dout(grp_fu_12171_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U67(
    .din0(grp_fu_12180_p0),
    .din1(w_tensor_i_7_11_reg_14655_pp1_iter6_reg),
    .din2(mul_ln1352_125_reg_15705),
    .dout(grp_fu_12180_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U68(
    .din0(grp_fu_12189_p0),
    .din1(w_tensor_i_7_13_reg_14665_pp1_iter6_reg),
    .din2(mul_ln1352_127_reg_15710),
    .dout(grp_fu_12189_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U69(
    .din0(grp_fu_12198_p0),
    .din1(w_tensor_i_8_reg_14675_pp1_iter6_reg),
    .din2(mul_ln1352_129_reg_15715),
    .dout(grp_fu_12198_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U70(
    .din0(grp_fu_12207_p0),
    .din1(w_tensor_i_8_2_reg_14685_pp1_iter6_reg),
    .din2(mul_ln1352_131_reg_15720),
    .dout(grp_fu_12207_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U71(
    .din0(grp_fu_12216_p0),
    .din1(w_tensor_i_8_4_reg_14695_pp1_iter6_reg),
    .din2(mul_ln1352_133_reg_15725),
    .dout(grp_fu_12216_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U72(
    .din0(grp_fu_12225_p0),
    .din1(w_tensor_i_8_6_reg_14705_pp1_iter6_reg),
    .din2(mul_ln1352_135_reg_15730),
    .dout(grp_fu_12225_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U73(
    .din0(grp_fu_12234_p0),
    .din1(w_tensor_i_8_8_reg_14715_pp1_iter6_reg),
    .din2(mul_ln1352_137_reg_15735),
    .dout(grp_fu_12234_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U74(
    .din0(grp_fu_12243_p0),
    .din1(w_tensor_i_8_s_reg_14725_pp1_iter6_reg),
    .din2(mul_ln1352_139_reg_15740),
    .dout(grp_fu_12243_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U75(
    .din0(grp_fu_12252_p0),
    .din1(w_tensor_i_8_11_reg_14735_pp1_iter6_reg),
    .din2(mul_ln1352_141_reg_15745),
    .dout(grp_fu_12252_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U76(
    .din0(grp_fu_12261_p0),
    .din1(w_tensor_i_8_13_reg_14745_pp1_iter6_reg),
    .din2(mul_ln1352_143_reg_15750),
    .dout(grp_fu_12261_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U77(
    .din0(grp_fu_12270_p0),
    .din1(w_tensor_i_9_reg_14755_pp1_iter6_reg),
    .din2(mul_ln1352_145_reg_15755),
    .dout(grp_fu_12270_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U78(
    .din0(grp_fu_12279_p0),
    .din1(w_tensor_i_9_2_reg_14765_pp1_iter6_reg),
    .din2(mul_ln1352_147_reg_15760),
    .dout(grp_fu_12279_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U79(
    .din0(grp_fu_12288_p0),
    .din1(w_tensor_i_9_4_reg_14775_pp1_iter6_reg),
    .din2(mul_ln1352_149_reg_15765),
    .dout(grp_fu_12288_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U80(
    .din0(grp_fu_12297_p0),
    .din1(w_tensor_i_9_6_reg_14785_pp1_iter6_reg),
    .din2(mul_ln1352_151_reg_15770),
    .dout(grp_fu_12297_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U81(
    .din0(grp_fu_12306_p0),
    .din1(w_tensor_i_9_8_reg_14795_pp1_iter6_reg),
    .din2(mul_ln1352_153_reg_15775),
    .dout(grp_fu_12306_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U82(
    .din0(grp_fu_12315_p0),
    .din1(w_tensor_i_9_s_reg_14805_pp1_iter6_reg),
    .din2(mul_ln1352_155_reg_15780),
    .dout(grp_fu_12315_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U83(
    .din0(grp_fu_12324_p0),
    .din1(w_tensor_i_9_11_reg_14815_pp1_iter6_reg),
    .din2(mul_ln1352_157_reg_15785),
    .dout(grp_fu_12324_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U84(
    .din0(grp_fu_12333_p0),
    .din1(w_tensor_i_9_13_reg_14825_pp1_iter6_reg),
    .din2(mul_ln1352_159_reg_15790),
    .dout(grp_fu_12333_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U85(
    .din0(grp_fu_12342_p0),
    .din1(w_tensor_i_s_reg_14835_pp1_iter6_reg),
    .din2(mul_ln1352_161_reg_15795),
    .dout(grp_fu_12342_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U86(
    .din0(grp_fu_12351_p0),
    .din1(w_tensor_i_10_2_reg_14845_pp1_iter6_reg),
    .din2(mul_ln1352_163_reg_15800),
    .dout(grp_fu_12351_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U87(
    .din0(grp_fu_12360_p0),
    .din1(w_tensor_i_10_4_reg_14855_pp1_iter6_reg),
    .din2(mul_ln1352_165_reg_15805),
    .dout(grp_fu_12360_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U88(
    .din0(grp_fu_12369_p0),
    .din1(w_tensor_i_10_6_reg_14865_pp1_iter6_reg),
    .din2(mul_ln1352_167_reg_15810),
    .dout(grp_fu_12369_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U89(
    .din0(grp_fu_12378_p0),
    .din1(w_tensor_i_10_8_reg_14875_pp1_iter6_reg),
    .din2(mul_ln1352_169_reg_15815),
    .dout(grp_fu_12378_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U90(
    .din0(grp_fu_12387_p0),
    .din1(w_tensor_i_10_s_reg_14885_pp1_iter6_reg),
    .din2(mul_ln1352_171_reg_15820),
    .dout(grp_fu_12387_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U91(
    .din0(grp_fu_12396_p0),
    .din1(w_tensor_i_10_11_reg_14895_pp1_iter6_reg),
    .din2(mul_ln1352_173_reg_15825),
    .dout(grp_fu_12396_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U92(
    .din0(grp_fu_12405_p0),
    .din1(w_tensor_i_10_13_reg_14905_pp1_iter6_reg),
    .din2(mul_ln1352_175_reg_15830),
    .dout(grp_fu_12405_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U93(
    .din0(grp_fu_12414_p0),
    .din1(w_tensor_i_10_reg_14915_pp1_iter6_reg),
    .din2(mul_ln1352_177_reg_15835),
    .dout(grp_fu_12414_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U94(
    .din0(grp_fu_12423_p0),
    .din1(w_tensor_i_11_2_reg_14925_pp1_iter6_reg),
    .din2(mul_ln1352_179_reg_15840),
    .dout(grp_fu_12423_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U95(
    .din0(grp_fu_12432_p0),
    .din1(w_tensor_i_11_4_reg_14935_pp1_iter6_reg),
    .din2(mul_ln1352_181_reg_15845),
    .dout(grp_fu_12432_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U96(
    .din0(grp_fu_12441_p0),
    .din1(w_tensor_i_11_6_reg_14945_pp1_iter6_reg),
    .din2(mul_ln1352_183_reg_15850),
    .dout(grp_fu_12441_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U97(
    .din0(grp_fu_12450_p0),
    .din1(w_tensor_i_11_8_reg_14955_pp1_iter6_reg),
    .din2(mul_ln1352_185_reg_15855),
    .dout(grp_fu_12450_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U98(
    .din0(grp_fu_12459_p0),
    .din1(w_tensor_i_11_s_reg_14965_pp1_iter6_reg),
    .din2(mul_ln1352_187_reg_15860),
    .dout(grp_fu_12459_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U99(
    .din0(grp_fu_12468_p0),
    .din1(w_tensor_i_11_11_reg_14975_pp1_iter6_reg),
    .din2(mul_ln1352_189_reg_15865),
    .dout(grp_fu_12468_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U100(
    .din0(grp_fu_12477_p0),
    .din1(w_tensor_i_11_13_reg_14985_pp1_iter6_reg),
    .din2(mul_ln1352_191_reg_15870),
    .dout(grp_fu_12477_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U101(
    .din0(grp_fu_12486_p0),
    .din1(w_tensor_i_11_reg_14995_pp1_iter6_reg),
    .din2(mul_ln1352_193_reg_15875),
    .dout(grp_fu_12486_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U102(
    .din0(grp_fu_12495_p0),
    .din1(w_tensor_i_12_2_reg_15005_pp1_iter6_reg),
    .din2(mul_ln1352_195_reg_15880),
    .dout(grp_fu_12495_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U103(
    .din0(grp_fu_12504_p0),
    .din1(w_tensor_i_12_4_reg_15015_pp1_iter6_reg),
    .din2(mul_ln1352_197_reg_15885),
    .dout(grp_fu_12504_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U104(
    .din0(grp_fu_12513_p0),
    .din1(w_tensor_i_12_6_reg_15025_pp1_iter6_reg),
    .din2(mul_ln1352_199_reg_15890),
    .dout(grp_fu_12513_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U105(
    .din0(grp_fu_12522_p0),
    .din1(w_tensor_i_12_8_reg_15035_pp1_iter6_reg),
    .din2(mul_ln1352_201_reg_15895),
    .dout(grp_fu_12522_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U106(
    .din0(grp_fu_12531_p0),
    .din1(w_tensor_i_12_s_reg_15045_pp1_iter6_reg),
    .din2(mul_ln1352_203_reg_15900),
    .dout(grp_fu_12531_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U107(
    .din0(grp_fu_12540_p0),
    .din1(w_tensor_i_12_11_reg_15055_pp1_iter6_reg),
    .din2(mul_ln1352_205_reg_15905),
    .dout(grp_fu_12540_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U108(
    .din0(grp_fu_12549_p0),
    .din1(w_tensor_i_12_13_reg_15065_pp1_iter6_reg),
    .din2(mul_ln1352_207_reg_15910),
    .dout(grp_fu_12549_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U109(
    .din0(grp_fu_12558_p0),
    .din1(w_tensor_i_12_reg_15075_pp1_iter6_reg),
    .din2(mul_ln1352_209_reg_15915),
    .dout(grp_fu_12558_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U110(
    .din0(grp_fu_12567_p0),
    .din1(w_tensor_i_13_2_reg_15085_pp1_iter6_reg),
    .din2(mul_ln1352_211_reg_15920),
    .dout(grp_fu_12567_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U111(
    .din0(grp_fu_12576_p0),
    .din1(w_tensor_i_13_4_reg_15095_pp1_iter6_reg),
    .din2(mul_ln1352_213_reg_15925),
    .dout(grp_fu_12576_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U112(
    .din0(grp_fu_12585_p0),
    .din1(w_tensor_i_13_6_reg_15105_pp1_iter6_reg),
    .din2(mul_ln1352_215_reg_15930),
    .dout(grp_fu_12585_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U113(
    .din0(grp_fu_12594_p0),
    .din1(w_tensor_i_13_8_reg_15115_pp1_iter6_reg),
    .din2(mul_ln1352_217_reg_15935),
    .dout(grp_fu_12594_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U114(
    .din0(grp_fu_12603_p0),
    .din1(w_tensor_i_13_s_reg_15125_pp1_iter6_reg),
    .din2(mul_ln1352_219_reg_15940),
    .dout(grp_fu_12603_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U115(
    .din0(grp_fu_12612_p0),
    .din1(w_tensor_i_13_11_reg_15135_pp1_iter6_reg),
    .din2(mul_ln1352_221_reg_15945),
    .dout(grp_fu_12612_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U116(
    .din0(grp_fu_12621_p0),
    .din1(w_tensor_i_13_13_reg_15145_pp1_iter6_reg),
    .din2(mul_ln1352_223_reg_15950),
    .dout(grp_fu_12621_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U117(
    .din0(grp_fu_12630_p0),
    .din1(w_tensor_i_13_reg_15155_pp1_iter6_reg),
    .din2(mul_ln1352_225_reg_15955),
    .dout(grp_fu_12630_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U118(
    .din0(grp_fu_12639_p0),
    .din1(w_tensor_i_14_2_reg_15165_pp1_iter6_reg),
    .din2(mul_ln1352_227_reg_15960),
    .dout(grp_fu_12639_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U119(
    .din0(grp_fu_12648_p0),
    .din1(w_tensor_i_14_4_reg_15175_pp1_iter6_reg),
    .din2(mul_ln1352_229_reg_15965),
    .dout(grp_fu_12648_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U120(
    .din0(grp_fu_12657_p0),
    .din1(w_tensor_i_14_6_reg_15185_pp1_iter6_reg),
    .din2(mul_ln1352_231_reg_15970),
    .dout(grp_fu_12657_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U121(
    .din0(grp_fu_12666_p0),
    .din1(w_tensor_i_14_8_reg_15195_pp1_iter6_reg),
    .din2(mul_ln1352_233_reg_15975),
    .dout(grp_fu_12666_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U122(
    .din0(grp_fu_12675_p0),
    .din1(w_tensor_i_14_s_reg_15205_pp1_iter6_reg),
    .din2(mul_ln1352_235_reg_15980),
    .dout(grp_fu_12675_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U123(
    .din0(grp_fu_12684_p0),
    .din1(w_tensor_i_14_11_reg_15215_pp1_iter6_reg),
    .din2(mul_ln1352_237_reg_15985),
    .dout(grp_fu_12684_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U124(
    .din0(grp_fu_12693_p0),
    .din1(w_tensor_i_14_13_reg_15225_pp1_iter6_reg),
    .din2(mul_ln1352_239_reg_15990),
    .dout(grp_fu_12693_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U125(
    .din0(grp_fu_12702_p0),
    .din1(w_tensor_i_14_reg_15235_pp1_iter6_reg),
    .din2(mul_ln1352_241_reg_15995),
    .dout(grp_fu_12702_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U126(
    .din0(grp_fu_12711_p0),
    .din1(w_tensor_i_15_2_reg_15245_pp1_iter6_reg),
    .din2(mul_ln1352_243_reg_16000),
    .dout(grp_fu_12711_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U127(
    .din0(grp_fu_12720_p0),
    .din1(w_tensor_i_15_4_reg_15255_pp1_iter6_reg),
    .din2(mul_ln1352_245_reg_16005),
    .dout(grp_fu_12720_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U128(
    .din0(grp_fu_12729_p0),
    .din1(w_tensor_i_15_6_reg_15265_pp1_iter6_reg),
    .din2(mul_ln1352_247_reg_16010),
    .dout(grp_fu_12729_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U129(
    .din0(grp_fu_12738_p0),
    .din1(w_tensor_i_15_8_reg_15275_pp1_iter6_reg),
    .din2(mul_ln1352_249_reg_16015),
    .dout(grp_fu_12738_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U130(
    .din0(grp_fu_12747_p0),
    .din1(w_tensor_i_15_s_reg_15285_pp1_iter6_reg),
    .din2(mul_ln1352_251_reg_16020),
    .dout(grp_fu_12747_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U131(
    .din0(grp_fu_12756_p0),
    .din1(w_tensor_i_15_11_reg_15295_pp1_iter6_reg),
    .din2(mul_ln1352_253_reg_16025),
    .dout(grp_fu_12756_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U132(
    .din0(grp_fu_12765_p0),
    .din1(w_tensor_i_15_13_reg_15305_pp1_iter6_reg),
    .din2(mul_ln1352_255_reg_16030),
    .dout(grp_fu_12765_p3)
);

regslice_both #(
    .DataWidth( 128 ))
regslice_both_gemm_queue_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(gemm_queue_V_V_TDATA),
    .vld_in(gemm_queue_V_V_TVALID),
    .ack_in(regslice_both_gemm_queue_V_V_U_ack_in),
    .data_out(gemm_queue_V_V_TDATA_int),
    .vld_out(gemm_queue_V_V_TVALID_int),
    .ack_out(gemm_queue_V_V_TREADY_int),
    .apdone_blk(regslice_both_gemm_queue_V_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 8 ))
regslice_both_l2g_dep_queue_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(l2g_dep_queue_V_TDATA),
    .vld_in(l2g_dep_queue_V_TVALID),
    .ack_in(regslice_both_l2g_dep_queue_V_U_ack_in),
    .data_out(l2g_dep_queue_V_TDATA_int),
    .vld_out(l2g_dep_queue_V_TVALID_int),
    .ack_out(l2g_dep_queue_V_TREADY_int),
    .apdone_blk(regslice_both_l2g_dep_queue_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 8 ))
regslice_both_s2g_dep_queue_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(s2g_dep_queue_V_TDATA),
    .vld_in(s2g_dep_queue_V_TVALID),
    .ack_in(regslice_both_s2g_dep_queue_V_U_ack_in),
    .data_out(s2g_dep_queue_V_TDATA_int),
    .vld_out(s2g_dep_queue_V_TVALID_int),
    .ack_out(s2g_dep_queue_V_TREADY_int),
    .apdone_blk(regslice_both_s2g_dep_queue_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 8 ))
regslice_both_g2l_dep_queue_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(8'd1),
    .vld_in(g2l_dep_queue_V_TVALID_int),
    .ack_in(g2l_dep_queue_V_TREADY_int),
    .data_out(g2l_dep_queue_V_TDATA),
    .vld_out(regslice_both_g2l_dep_queue_V_U_vld_out),
    .ack_out(g2l_dep_queue_V_TREADY),
    .apdone_blk(regslice_both_g2l_dep_queue_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 8 ))
regslice_both_g2s_dep_queue_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(8'd1),
    .vld_in(g2s_dep_queue_V_TVALID_int),
    .ack_in(g2s_dep_queue_V_TREADY_int),
    .data_out(g2s_dep_queue_V_TDATA),
    .vld_out(regslice_both_g2s_dep_queue_V_U_vld_out),
    .ack_out(g2s_dep_queue_V_TREADY),
    .apdone_blk(regslice_both_g2s_dep_queue_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state10))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state28) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state27)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state28)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state28);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
        end else if ((1'b1 == ap_CS_fsm_state27)) begin
            ap_enable_reg_pp1_iter9 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_condition_pp2_exit_iter0_state46))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state45)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state46)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state46);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end else if ((1'b1 == ap_CS_fsm_state45)) begin
            ap_enable_reg_pp2_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state58) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state57)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state58)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state58);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end else if ((1'b1 == ap_CS_fsm_state57)) begin
            ap_enable_reg_pp3_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        dram_idx_assign_0_reg_1274 <= add_ln700_267_fu_11571_p2;
    end else if ((~((ap_start == 1'b0) | (gemm_queue_V_V_TVALID_int == 1'b0) | ((s2g_dep_queue_V_TVALID_int == 1'b0) & (tmp_6_fu_1679_p3 == 1'd1)) | ((l2g_dep_queue_V_TVALID_int == 1'b0) & (tmp_4_fu_1671_p3 == 1'd1))) & (icmp_ln482_fu_1827_p2 == 1'd1) & (icmp_ln473_fu_1697_p2 == 1'd1) & (icmp_ln477_fu_1821_p2 == 1'd0) & (icmp_ln470_fu_1691_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        dram_idx_assign_0_reg_1274 <= {{gemm_queue_V_V_TDATA_int[56:25]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln343_reg_13229 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        dst_offset_in_0_i175_reg_1132 <= select_ln348_reg_13254;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        dst_offset_in_0_i175_reg_1132 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln253_reg_13919_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        dst_offset_in_0_i_reg_1218 <= select_ln259_reg_13977;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        dst_offset_in_0_i_reg_1218 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln343_reg_13229 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        dst_offset_in_V_1_reg_1099 <= select_ln343_reg_13238;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        dst_offset_in_V_1_reg_1099 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln253_fu_4691_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        dst_offset_in_V_reg_1174 <= select_ln253_fu_4722_p3;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        dst_offset_in_V_reg_1174 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        i_op_assign_reg_1284 <= y_reg_16454;
    end else if ((~((ap_start == 1'b0) | (gemm_queue_V_V_TVALID_int == 1'b0) | ((s2g_dep_queue_V_TVALID_int == 1'b0) & (tmp_6_fu_1679_p3 == 1'd1)) | ((l2g_dep_queue_V_TVALID_int == 1'b0) & (tmp_4_fu_1671_p3 == 1'd1))) & (icmp_ln482_fu_1827_p2 == 1'd1) & (icmp_ln473_fu_1697_p2 == 1'd1) & (icmp_ln477_fu_1821_p2 == 1'd0) & (icmp_ln470_fu_1691_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        i_op_assign_reg_1284 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln253_fu_4691_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        indvar_flatten15_reg_1163 <= add_ln253_fu_4696_p2;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        indvar_flatten15_reg_1163 <= 60'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln343_reg_13229 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        indvar_flatten25_reg_1121 <= select_ln348_2_reg_13266;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        indvar_flatten25_reg_1121 <= 46'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln343_reg_13229 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        indvar_flatten71_reg_1088 <= add_ln343_reg_13233;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        indvar_flatten71_reg_1088 <= 60'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln253_fu_4691_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        indvar_flatten_reg_1207 <= select_ln259_3_fu_4752_p3;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        indvar_flatten_reg_1207 <= 46'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln480_fu_11590_p2 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        phi_ln480_reg_1306 <= add_ln480_fu_11596_p2;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        phi_ln480_reg_1306 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln89_fu_11392_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        phi_ln89_reg_1295 <= add_ln89_fu_11397_p2;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        phi_ln89_reg_1295 <= 19'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        sram_idx_V_assign_0_reg_1264 <= add_ln700_266_fu_11565_p2;
    end else if ((~((ap_start == 1'b0) | (gemm_queue_V_V_TVALID_int == 1'b0) | ((s2g_dep_queue_V_TVALID_int == 1'b0) & (tmp_6_fu_1679_p3 == 1'd1)) | ((l2g_dep_queue_V_TVALID_int == 1'b0) & (tmp_4_fu_1671_p3 == 1'd1))) & (icmp_ln482_fu_1827_p2 == 1'd1) & (icmp_ln473_fu_1697_p2 == 1'd1) & (icmp_ln477_fu_1821_p2 == 1'd0) & (icmp_ln470_fu_1691_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        sram_idx_V_assign_0_reg_1264 <= {{gemm_queue_V_V_TDATA_int[24:9]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln343_reg_13229 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        src_offset_in_0_i176_reg_1143 <= select_ln348_1_reg_13260;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        src_offset_in_0_i176_reg_1143 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln253_reg_13919_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        src_offset_in_0_i_reg_1230 <= select_ln259_1_reg_13983;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        src_offset_in_0_i_reg_1230 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln343_reg_13229 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        src_offset_in_V_1_reg_1110 <= select_ln343_1_reg_13243;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        src_offset_in_V_1_reg_1110 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln253_fu_4691_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        src_offset_in_V_reg_1185 <= select_ln253_1_fu_4730_p3;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        src_offset_in_V_reg_1185 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln343_reg_13229 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        upc_0_i180_reg_1154 <= upc_3_reg_13276;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        upc_0_i180_reg_1154 <= zext_ln350_fu_1909_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln253_reg_13919_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        upc_0_i_reg_1254 <= upc_1_reg_13995;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        upc_0_i_reg_1254 <= zext_ln262_fu_4634_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln253_reg_13919_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        wgt_offset_in_0_i_reg_1242 <= select_ln259_2_reg_13989;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        wgt_offset_in_0_i_reg_1242 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln253_fu_4691_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        wgt_offset_in_V_reg_1196 <= select_ln253_2_fu_4738_p3;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        wgt_offset_in_V_reg_1196 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln253_reg_13919_pp1_iter7_reg == 1'd0))) begin
        a_tensor_0_0_V_reg_16366 <= a_tensor_0_0_V_fu_10343_p1;
        add_ln700_110_reg_16401 <= add_ln700_110_fu_10607_p2;
        add_ln700_126_reg_16406 <= add_ln700_126_fu_10645_p2;
        add_ln700_142_reg_16411 <= add_ln700_142_fu_10683_p2;
        add_ln700_14_reg_16371 <= add_ln700_14_fu_10379_p2;
        add_ln700_158_reg_16416 <= add_ln700_158_fu_10721_p2;
        add_ln700_174_reg_16421 <= add_ln700_174_fu_10759_p2;
        add_ln700_190_reg_16426 <= add_ln700_190_fu_10797_p2;
        add_ln700_206_reg_16431 <= add_ln700_206_fu_10835_p2;
        add_ln700_222_reg_16436 <= add_ln700_222_fu_10873_p2;
        add_ln700_238_reg_16441 <= add_ln700_238_fu_10911_p2;
        add_ln700_254_reg_16446 <= add_ln700_254_fu_10949_p2;
        add_ln700_30_reg_16376 <= add_ln700_30_fu_10417_p2;
        add_ln700_46_reg_16381 <= add_ln700_46_fu_10455_p2;
        add_ln700_62_reg_16386 <= add_ln700_62_fu_10493_p2;
        add_ln700_78_reg_16391 <= add_ln700_78_fu_10531_p2;
        add_ln700_94_reg_16396 <= add_ln700_94_fu_10569_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln253_reg_13919_pp1_iter6_reg == 1'd0))) begin
        acc_mem_V_addr_1_reg_16040 <= zext_ln544_2_fu_8779_p1;
        add_ln700_101_reg_16171 <= add_ln700_101_fu_9449_p2;
        add_ln700_105_reg_16176 <= add_ln700_105_fu_9461_p2;
        add_ln700_108_reg_16181 <= add_ln700_108_fu_9473_p2;
        add_ln700_114_reg_16186 <= add_ln700_114_fu_9533_p2;
        add_ln700_117_reg_16191 <= add_ln700_117_fu_9545_p2;
        add_ln700_121_reg_16196 <= add_ln700_121_fu_9557_p2;
        add_ln700_124_reg_16201 <= add_ln700_124_fu_9569_p2;
        add_ln700_12_reg_16061 <= add_ln700_12_fu_8897_p2;
        add_ln700_130_reg_16206 <= add_ln700_130_fu_9629_p2;
        add_ln700_133_reg_16211 <= add_ln700_133_fu_9641_p2;
        add_ln700_137_reg_16216 <= add_ln700_137_fu_9653_p2;
        add_ln700_140_reg_16221 <= add_ln700_140_fu_9665_p2;
        add_ln700_146_reg_16226 <= add_ln700_146_fu_9725_p2;
        add_ln700_149_reg_16231 <= add_ln700_149_fu_9737_p2;
        add_ln700_153_reg_16236 <= add_ln700_153_fu_9749_p2;
        add_ln700_156_reg_16241 <= add_ln700_156_fu_9761_p2;
        add_ln700_162_reg_16246 <= add_ln700_162_fu_9821_p2;
        add_ln700_165_reg_16251 <= add_ln700_165_fu_9833_p2;
        add_ln700_169_reg_16256 <= add_ln700_169_fu_9845_p2;
        add_ln700_172_reg_16261 <= add_ln700_172_fu_9857_p2;
        add_ln700_178_reg_16266 <= add_ln700_178_fu_9917_p2;
        add_ln700_181_reg_16271 <= add_ln700_181_fu_9929_p2;
        add_ln700_185_reg_16276 <= add_ln700_185_fu_9941_p2;
        add_ln700_188_reg_16281 <= add_ln700_188_fu_9953_p2;
        add_ln700_18_reg_16066 <= add_ln700_18_fu_8957_p2;
        add_ln700_194_reg_16286 <= add_ln700_194_fu_10013_p2;
        add_ln700_197_reg_16291 <= add_ln700_197_fu_10025_p2;
        add_ln700_201_reg_16296 <= add_ln700_201_fu_10037_p2;
        add_ln700_204_reg_16301 <= add_ln700_204_fu_10049_p2;
        add_ln700_210_reg_16306 <= add_ln700_210_fu_10109_p2;
        add_ln700_213_reg_16311 <= add_ln700_213_fu_10121_p2;
        add_ln700_217_reg_16316 <= add_ln700_217_fu_10133_p2;
        add_ln700_21_reg_16071 <= add_ln700_21_fu_8969_p2;
        add_ln700_220_reg_16321 <= add_ln700_220_fu_10145_p2;
        add_ln700_226_reg_16326 <= add_ln700_226_fu_10205_p2;
        add_ln700_229_reg_16331 <= add_ln700_229_fu_10217_p2;
        add_ln700_233_reg_16336 <= add_ln700_233_fu_10229_p2;
        add_ln700_236_reg_16341 <= add_ln700_236_fu_10241_p2;
        add_ln700_242_reg_16346 <= add_ln700_242_fu_10301_p2;
        add_ln700_245_reg_16351 <= add_ln700_245_fu_10313_p2;
        add_ln700_249_reg_16356 <= add_ln700_249_fu_10325_p2;
        add_ln700_252_reg_16361 <= add_ln700_252_fu_10337_p2;
        add_ln700_25_reg_16076 <= add_ln700_25_fu_8981_p2;
        add_ln700_28_reg_16081 <= add_ln700_28_fu_8993_p2;
        add_ln700_2_reg_16046 <= add_ln700_2_fu_8861_p2;
        add_ln700_34_reg_16086 <= add_ln700_34_fu_9053_p2;
        add_ln700_37_reg_16091 <= add_ln700_37_fu_9065_p2;
        add_ln700_41_reg_16096 <= add_ln700_41_fu_9077_p2;
        add_ln700_44_reg_16101 <= add_ln700_44_fu_9089_p2;
        add_ln700_50_reg_16106 <= add_ln700_50_fu_9149_p2;
        add_ln700_53_reg_16111 <= add_ln700_53_fu_9161_p2;
        add_ln700_57_reg_16116 <= add_ln700_57_fu_9173_p2;
        add_ln700_5_reg_16051 <= add_ln700_5_fu_8873_p2;
        add_ln700_60_reg_16121 <= add_ln700_60_fu_9185_p2;
        add_ln700_66_reg_16126 <= add_ln700_66_fu_9245_p2;
        add_ln700_69_reg_16131 <= add_ln700_69_fu_9257_p2;
        add_ln700_73_reg_16136 <= add_ln700_73_fu_9269_p2;
        add_ln700_76_reg_16141 <= add_ln700_76_fu_9281_p2;
        add_ln700_82_reg_16146 <= add_ln700_82_fu_9341_p2;
        add_ln700_85_reg_16151 <= add_ln700_85_fu_9353_p2;
        add_ln700_89_reg_16156 <= add_ln700_89_fu_9365_p2;
        add_ln700_92_reg_16161 <= add_ln700_92_fu_9377_p2;
        add_ln700_98_reg_16166 <= add_ln700_98_fu_9437_p2;
        add_ln700_9_reg_16056 <= add_ln700_9_fu_8885_p2;
        zext_ln544_2_reg_16035[11 : 0] <= zext_ln544_2_fu_8779_p1[11 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        acc_mem_V_addr_1_reg_16040_pp1_iter8_reg <= acc_mem_V_addr_1_reg_16040;
        dst_idx_V_reg_14005_pp1_iter4_reg <= dst_idx_V_reg_14005;
        dst_idx_V_reg_14005_pp1_iter5_reg <= dst_idx_V_reg_14005_pp1_iter4_reg;
        dst_idx_V_reg_14005_pp1_iter6_reg <= dst_idx_V_reg_14005_pp1_iter5_reg;
        i_tensor_i_0_11_reg_15375_pp1_iter6_reg <= i_tensor_i_0_11_reg_15375;
        i_tensor_i_0_13_reg_15385_pp1_iter6_reg <= i_tensor_i_0_13_reg_15385;
        i_tensor_i_0_2_reg_15325_pp1_iter6_reg <= i_tensor_i_0_2_reg_15325;
        i_tensor_i_0_4_reg_15335_pp1_iter6_reg <= i_tensor_i_0_4_reg_15335;
        i_tensor_i_0_6_reg_15345_pp1_iter6_reg <= i_tensor_i_0_6_reg_15345;
        i_tensor_i_0_8_reg_15355_pp1_iter6_reg <= i_tensor_i_0_8_reg_15355;
        i_tensor_i_0_s_reg_15365_pp1_iter6_reg <= i_tensor_i_0_s_reg_15365;
        icmp_ln253_reg_13919_pp1_iter2_reg <= icmp_ln253_reg_13919_pp1_iter1_reg;
        icmp_ln253_reg_13919_pp1_iter3_reg <= icmp_ln253_reg_13919_pp1_iter2_reg;
        icmp_ln253_reg_13919_pp1_iter4_reg <= icmp_ln253_reg_13919_pp1_iter3_reg;
        icmp_ln253_reg_13919_pp1_iter5_reg <= icmp_ln253_reg_13919_pp1_iter4_reg;
        icmp_ln253_reg_13919_pp1_iter6_reg <= icmp_ln253_reg_13919_pp1_iter5_reg;
        icmp_ln253_reg_13919_pp1_iter7_reg <= icmp_ln253_reg_13919_pp1_iter6_reg;
        icmp_ln253_reg_13919_pp1_iter8_reg <= icmp_ln253_reg_13919_pp1_iter7_reg;
        select_ln259_1_reg_13983_pp1_iter2_reg <= select_ln259_1_reg_13983;
        select_ln259_2_reg_13989_pp1_iter2_reg <= select_ln259_2_reg_13989;
        select_ln259_reg_13977_pp1_iter2_reg <= select_ln259_reg_13977;
        trunc_ln647_1_reg_14035_pp1_iter6_reg <= trunc_ln647_1_reg_14035;
        trunc_ln647_2_reg_14075_pp1_iter6_reg <= trunc_ln647_2_reg_14075;
        trunc_ln647_3_reg_15315_pp1_iter6_reg <= trunc_ln647_3_reg_15315;
        w_tensor_i_0_10_reg_14095_pp1_iter6_reg <= w_tensor_i_0_10_reg_14095;
        w_tensor_i_0_12_reg_14105_pp1_iter6_reg <= w_tensor_i_0_12_reg_14105;
        w_tensor_i_0_2_reg_14045_pp1_iter6_reg <= w_tensor_i_0_2_reg_14045;
        w_tensor_i_0_4_reg_14055_pp1_iter6_reg <= w_tensor_i_0_4_reg_14055;
        w_tensor_i_0_6_reg_14065_pp1_iter6_reg <= w_tensor_i_0_6_reg_14065;
        w_tensor_i_0_s_reg_14085_pp1_iter6_reg <= w_tensor_i_0_s_reg_14085;
        w_tensor_i_10_11_reg_14895_pp1_iter6_reg <= w_tensor_i_10_11_reg_14895;
        w_tensor_i_10_13_reg_14905_pp1_iter6_reg <= w_tensor_i_10_13_reg_14905;
        w_tensor_i_10_2_reg_14845_pp1_iter6_reg <= w_tensor_i_10_2_reg_14845;
        w_tensor_i_10_4_reg_14855_pp1_iter6_reg <= w_tensor_i_10_4_reg_14855;
        w_tensor_i_10_6_reg_14865_pp1_iter6_reg <= w_tensor_i_10_6_reg_14865;
        w_tensor_i_10_8_reg_14875_pp1_iter6_reg <= w_tensor_i_10_8_reg_14875;
        w_tensor_i_10_reg_14915_pp1_iter6_reg <= w_tensor_i_10_reg_14915;
        w_tensor_i_10_s_reg_14885_pp1_iter6_reg <= w_tensor_i_10_s_reg_14885;
        w_tensor_i_11_11_reg_14975_pp1_iter6_reg <= w_tensor_i_11_11_reg_14975;
        w_tensor_i_11_13_reg_14985_pp1_iter6_reg <= w_tensor_i_11_13_reg_14985;
        w_tensor_i_11_2_reg_14925_pp1_iter6_reg <= w_tensor_i_11_2_reg_14925;
        w_tensor_i_11_4_reg_14935_pp1_iter6_reg <= w_tensor_i_11_4_reg_14935;
        w_tensor_i_11_6_reg_14945_pp1_iter6_reg <= w_tensor_i_11_6_reg_14945;
        w_tensor_i_11_8_reg_14955_pp1_iter6_reg <= w_tensor_i_11_8_reg_14955;
        w_tensor_i_11_reg_14995_pp1_iter6_reg <= w_tensor_i_11_reg_14995;
        w_tensor_i_11_s_reg_14965_pp1_iter6_reg <= w_tensor_i_11_s_reg_14965;
        w_tensor_i_12_11_reg_15055_pp1_iter6_reg <= w_tensor_i_12_11_reg_15055;
        w_tensor_i_12_13_reg_15065_pp1_iter6_reg <= w_tensor_i_12_13_reg_15065;
        w_tensor_i_12_2_reg_15005_pp1_iter6_reg <= w_tensor_i_12_2_reg_15005;
        w_tensor_i_12_4_reg_15015_pp1_iter6_reg <= w_tensor_i_12_4_reg_15015;
        w_tensor_i_12_6_reg_15025_pp1_iter6_reg <= w_tensor_i_12_6_reg_15025;
        w_tensor_i_12_8_reg_15035_pp1_iter6_reg <= w_tensor_i_12_8_reg_15035;
        w_tensor_i_12_reg_15075_pp1_iter6_reg <= w_tensor_i_12_reg_15075;
        w_tensor_i_12_s_reg_15045_pp1_iter6_reg <= w_tensor_i_12_s_reg_15045;
        w_tensor_i_13_11_reg_15135_pp1_iter6_reg <= w_tensor_i_13_11_reg_15135;
        w_tensor_i_13_13_reg_15145_pp1_iter6_reg <= w_tensor_i_13_13_reg_15145;
        w_tensor_i_13_2_reg_15085_pp1_iter6_reg <= w_tensor_i_13_2_reg_15085;
        w_tensor_i_13_4_reg_15095_pp1_iter6_reg <= w_tensor_i_13_4_reg_15095;
        w_tensor_i_13_6_reg_15105_pp1_iter6_reg <= w_tensor_i_13_6_reg_15105;
        w_tensor_i_13_8_reg_15115_pp1_iter6_reg <= w_tensor_i_13_8_reg_15115;
        w_tensor_i_13_reg_15155_pp1_iter6_reg <= w_tensor_i_13_reg_15155;
        w_tensor_i_13_s_reg_15125_pp1_iter6_reg <= w_tensor_i_13_s_reg_15125;
        w_tensor_i_14_11_reg_15215_pp1_iter6_reg <= w_tensor_i_14_11_reg_15215;
        w_tensor_i_14_13_reg_15225_pp1_iter6_reg <= w_tensor_i_14_13_reg_15225;
        w_tensor_i_14_2_reg_15165_pp1_iter6_reg <= w_tensor_i_14_2_reg_15165;
        w_tensor_i_14_4_reg_15175_pp1_iter6_reg <= w_tensor_i_14_4_reg_15175;
        w_tensor_i_14_6_reg_15185_pp1_iter6_reg <= w_tensor_i_14_6_reg_15185;
        w_tensor_i_14_8_reg_15195_pp1_iter6_reg <= w_tensor_i_14_8_reg_15195;
        w_tensor_i_14_reg_15235_pp1_iter6_reg <= w_tensor_i_14_reg_15235;
        w_tensor_i_14_s_reg_15205_pp1_iter6_reg <= w_tensor_i_14_s_reg_15205;
        w_tensor_i_15_11_reg_15295_pp1_iter6_reg <= w_tensor_i_15_11_reg_15295;
        w_tensor_i_15_13_reg_15305_pp1_iter6_reg <= w_tensor_i_15_13_reg_15305;
        w_tensor_i_15_2_reg_15245_pp1_iter6_reg <= w_tensor_i_15_2_reg_15245;
        w_tensor_i_15_4_reg_15255_pp1_iter6_reg <= w_tensor_i_15_4_reg_15255;
        w_tensor_i_15_6_reg_15265_pp1_iter6_reg <= w_tensor_i_15_6_reg_15265;
        w_tensor_i_15_8_reg_15275_pp1_iter6_reg <= w_tensor_i_15_8_reg_15275;
        w_tensor_i_15_s_reg_15285_pp1_iter6_reg <= w_tensor_i_15_s_reg_15285;
        w_tensor_i_1_11_reg_14175_pp1_iter6_reg <= w_tensor_i_1_11_reg_14175;
        w_tensor_i_1_13_reg_14185_pp1_iter6_reg <= w_tensor_i_1_13_reg_14185;
        w_tensor_i_1_2_reg_14125_pp1_iter6_reg <= w_tensor_i_1_2_reg_14125;
        w_tensor_i_1_4_reg_14135_pp1_iter6_reg <= w_tensor_i_1_4_reg_14135;
        w_tensor_i_1_6_reg_14145_pp1_iter6_reg <= w_tensor_i_1_6_reg_14145;
        w_tensor_i_1_8_reg_14155_pp1_iter6_reg <= w_tensor_i_1_8_reg_14155;
        w_tensor_i_1_reg_14115_pp1_iter6_reg <= w_tensor_i_1_reg_14115;
        w_tensor_i_1_s_reg_14165_pp1_iter6_reg <= w_tensor_i_1_s_reg_14165;
        w_tensor_i_2_11_reg_14255_pp1_iter6_reg <= w_tensor_i_2_11_reg_14255;
        w_tensor_i_2_13_reg_14265_pp1_iter6_reg <= w_tensor_i_2_13_reg_14265;
        w_tensor_i_2_2_reg_14205_pp1_iter6_reg <= w_tensor_i_2_2_reg_14205;
        w_tensor_i_2_4_reg_14215_pp1_iter6_reg <= w_tensor_i_2_4_reg_14215;
        w_tensor_i_2_6_reg_14225_pp1_iter6_reg <= w_tensor_i_2_6_reg_14225;
        w_tensor_i_2_8_reg_14235_pp1_iter6_reg <= w_tensor_i_2_8_reg_14235;
        w_tensor_i_2_reg_14195_pp1_iter6_reg <= w_tensor_i_2_reg_14195;
        w_tensor_i_2_s_reg_14245_pp1_iter6_reg <= w_tensor_i_2_s_reg_14245;
        w_tensor_i_3_11_reg_14335_pp1_iter6_reg <= w_tensor_i_3_11_reg_14335;
        w_tensor_i_3_13_reg_14345_pp1_iter6_reg <= w_tensor_i_3_13_reg_14345;
        w_tensor_i_3_2_reg_14285_pp1_iter6_reg <= w_tensor_i_3_2_reg_14285;
        w_tensor_i_3_4_reg_14295_pp1_iter6_reg <= w_tensor_i_3_4_reg_14295;
        w_tensor_i_3_6_reg_14305_pp1_iter6_reg <= w_tensor_i_3_6_reg_14305;
        w_tensor_i_3_8_reg_14315_pp1_iter6_reg <= w_tensor_i_3_8_reg_14315;
        w_tensor_i_3_reg_14275_pp1_iter6_reg <= w_tensor_i_3_reg_14275;
        w_tensor_i_3_s_reg_14325_pp1_iter6_reg <= w_tensor_i_3_s_reg_14325;
        w_tensor_i_4_11_reg_14415_pp1_iter6_reg <= w_tensor_i_4_11_reg_14415;
        w_tensor_i_4_13_reg_14425_pp1_iter6_reg <= w_tensor_i_4_13_reg_14425;
        w_tensor_i_4_2_reg_14365_pp1_iter6_reg <= w_tensor_i_4_2_reg_14365;
        w_tensor_i_4_4_reg_14375_pp1_iter6_reg <= w_tensor_i_4_4_reg_14375;
        w_tensor_i_4_6_reg_14385_pp1_iter6_reg <= w_tensor_i_4_6_reg_14385;
        w_tensor_i_4_8_reg_14395_pp1_iter6_reg <= w_tensor_i_4_8_reg_14395;
        w_tensor_i_4_reg_14355_pp1_iter6_reg <= w_tensor_i_4_reg_14355;
        w_tensor_i_4_s_reg_14405_pp1_iter6_reg <= w_tensor_i_4_s_reg_14405;
        w_tensor_i_5_11_reg_14495_pp1_iter6_reg <= w_tensor_i_5_11_reg_14495;
        w_tensor_i_5_13_reg_14505_pp1_iter6_reg <= w_tensor_i_5_13_reg_14505;
        w_tensor_i_5_2_reg_14445_pp1_iter6_reg <= w_tensor_i_5_2_reg_14445;
        w_tensor_i_5_4_reg_14455_pp1_iter6_reg <= w_tensor_i_5_4_reg_14455;
        w_tensor_i_5_6_reg_14465_pp1_iter6_reg <= w_tensor_i_5_6_reg_14465;
        w_tensor_i_5_8_reg_14475_pp1_iter6_reg <= w_tensor_i_5_8_reg_14475;
        w_tensor_i_5_reg_14435_pp1_iter6_reg <= w_tensor_i_5_reg_14435;
        w_tensor_i_5_s_reg_14485_pp1_iter6_reg <= w_tensor_i_5_s_reg_14485;
        w_tensor_i_6_11_reg_14575_pp1_iter6_reg <= w_tensor_i_6_11_reg_14575;
        w_tensor_i_6_13_reg_14585_pp1_iter6_reg <= w_tensor_i_6_13_reg_14585;
        w_tensor_i_6_2_reg_14525_pp1_iter6_reg <= w_tensor_i_6_2_reg_14525;
        w_tensor_i_6_4_reg_14535_pp1_iter6_reg <= w_tensor_i_6_4_reg_14535;
        w_tensor_i_6_6_reg_14545_pp1_iter6_reg <= w_tensor_i_6_6_reg_14545;
        w_tensor_i_6_8_reg_14555_pp1_iter6_reg <= w_tensor_i_6_8_reg_14555;
        w_tensor_i_6_reg_14515_pp1_iter6_reg <= w_tensor_i_6_reg_14515;
        w_tensor_i_6_s_reg_14565_pp1_iter6_reg <= w_tensor_i_6_s_reg_14565;
        w_tensor_i_7_11_reg_14655_pp1_iter6_reg <= w_tensor_i_7_11_reg_14655;
        w_tensor_i_7_13_reg_14665_pp1_iter6_reg <= w_tensor_i_7_13_reg_14665;
        w_tensor_i_7_2_reg_14605_pp1_iter6_reg <= w_tensor_i_7_2_reg_14605;
        w_tensor_i_7_4_reg_14615_pp1_iter6_reg <= w_tensor_i_7_4_reg_14615;
        w_tensor_i_7_6_reg_14625_pp1_iter6_reg <= w_tensor_i_7_6_reg_14625;
        w_tensor_i_7_8_reg_14635_pp1_iter6_reg <= w_tensor_i_7_8_reg_14635;
        w_tensor_i_7_reg_14595_pp1_iter6_reg <= w_tensor_i_7_reg_14595;
        w_tensor_i_7_s_reg_14645_pp1_iter6_reg <= w_tensor_i_7_s_reg_14645;
        w_tensor_i_8_11_reg_14735_pp1_iter6_reg <= w_tensor_i_8_11_reg_14735;
        w_tensor_i_8_13_reg_14745_pp1_iter6_reg <= w_tensor_i_8_13_reg_14745;
        w_tensor_i_8_2_reg_14685_pp1_iter6_reg <= w_tensor_i_8_2_reg_14685;
        w_tensor_i_8_4_reg_14695_pp1_iter6_reg <= w_tensor_i_8_4_reg_14695;
        w_tensor_i_8_6_reg_14705_pp1_iter6_reg <= w_tensor_i_8_6_reg_14705;
        w_tensor_i_8_8_reg_14715_pp1_iter6_reg <= w_tensor_i_8_8_reg_14715;
        w_tensor_i_8_reg_14675_pp1_iter6_reg <= w_tensor_i_8_reg_14675;
        w_tensor_i_8_s_reg_14725_pp1_iter6_reg <= w_tensor_i_8_s_reg_14725;
        w_tensor_i_9_11_reg_14815_pp1_iter6_reg <= w_tensor_i_9_11_reg_14815;
        w_tensor_i_9_13_reg_14825_pp1_iter6_reg <= w_tensor_i_9_13_reg_14825;
        w_tensor_i_9_2_reg_14765_pp1_iter6_reg <= w_tensor_i_9_2_reg_14765;
        w_tensor_i_9_4_reg_14775_pp1_iter6_reg <= w_tensor_i_9_4_reg_14775;
        w_tensor_i_9_6_reg_14785_pp1_iter6_reg <= w_tensor_i_9_6_reg_14785;
        w_tensor_i_9_8_reg_14795_pp1_iter6_reg <= w_tensor_i_9_8_reg_14795;
        w_tensor_i_9_reg_14755_pp1_iter6_reg <= w_tensor_i_9_reg_14755;
        w_tensor_i_9_s_reg_14805_pp1_iter6_reg <= w_tensor_i_9_s_reg_14805;
        w_tensor_i_s_reg_14835_pp1_iter6_reg <= w_tensor_i_s_reg_14835;
        zext_ln544_2_reg_16035_pp1_iter8_reg[11 : 0] <= zext_ln544_2_reg_16035[11 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln343_reg_13229_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        acc_mem_V_addr_3_reg_13301 <= zext_ln544_4_fu_2152_p1;
        zext_ln544_4_reg_13296[11 : 0] <= zext_ln544_4_fu_2152_p1[11 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        acc_mem_V_addr_3_reg_13301_pp0_iter2_reg <= acc_mem_V_addr_3_reg_13301;
        acc_mem_V_addr_3_reg_13301_pp0_iter3_reg <= acc_mem_V_addr_3_reg_13301_pp0_iter2_reg;
        dst_tensor_0_0_V_6_reg_13515_pp0_iter3_reg <= dst_tensor_0_0_V_6_reg_13515;
        dst_tensor_0_1_V_6_reg_13525_pp0_iter3_reg <= dst_tensor_0_1_V_6_reg_13525;
        dst_tensor_0_2_V_6_reg_13535_pp0_iter3_reg <= dst_tensor_0_2_V_6_reg_13535;
        dst_tensor_0_3_V_6_reg_13545_pp0_iter3_reg <= dst_tensor_0_3_V_6_reg_13545;
        dst_tensor_0_4_V_6_reg_13555_pp0_iter3_reg <= dst_tensor_0_4_V_6_reg_13555;
        dst_tensor_0_5_V_6_reg_13565_pp0_iter3_reg <= dst_tensor_0_5_V_6_reg_13565;
        dst_tensor_0_6_V_6_reg_13575_pp0_iter3_reg <= dst_tensor_0_6_V_6_reg_13575;
        dst_tensor_0_7_V_6_reg_13585_pp0_iter3_reg <= dst_tensor_0_7_V_6_reg_13585;
        zext_ln544_4_reg_13296_pp0_iter2_reg[11 : 0] <= zext_ln544_4_reg_13296[11 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln343_reg_13233 <= add_ln343_fu_1998_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln480_fu_11590_p2 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        add_ln480_2_reg_16563 <= add_ln480_2_fu_11606_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        add_ln480_2_reg_16563_pp3_iter1_reg <= add_ln480_2_reg_16563;
        icmp_ln480_reg_16554 <= icmp_ln480_fu_11590_p2;
        icmp_ln480_reg_16554_pp3_iter1_reg <= icmp_ln480_reg_16554;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln253_fu_4691_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        add_ln700_256_reg_13928 <= add_ln700_256_fu_4702_p2;
        add_ln700_257_reg_13942 <= add_ln700_257_fu_4712_p2;
        add_ln700_258_reg_13947 <= add_ln700_258_fu_4717_p2;
        icmp_ln259_reg_13933 <= icmp_ln259_fu_4707_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln482_reg_12952 == 1'd1) & (icmp_ln86_fu_11348_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state38))) begin
        add_ln88_reg_16459 <= add_ln88_fu_11371_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        and_ln385_reg_13152 <= and_ln385_fu_1981_p2;
        icmp_ln378_reg_13040 <= icmp_ln378_fu_1933_p2;
        icmp_ln391_reg_13188 <= icmp_ln391_fu_1987_p2;
        mul_ln331_1_reg_13224 <= grp_fu_1903_p2;
        src_1_V_reg_13076 <= src_1_V_fu_1954_p1;
        tmp_12_reg_13020 <= tmp_V_reg_12779[32'd110];
        tmp_16_reg_13116 <= tmp_V_reg_12779[32'd109];
        zext_ln350_1_reg_13015[13 : 0] <= zext_ln350_1_fu_1913_p1[13 : 0];
        zext_ln350_reg_13008[12 : 0] <= zext_ln350_fu_1909_p1[12 : 0];
        zext_ln700_10_reg_13111[10 : 0] <= zext_ln700_10_fu_1970_p1[10 : 0];
        zext_ln700_7_reg_13096[10 : 0] <= zext_ln700_7_fu_1958_p1[10 : 0];
        zext_ln700_8_reg_13101[10 : 0] <= zext_ln700_8_fu_1962_p1[10 : 0];
        zext_ln700_9_reg_13106[10 : 0] <= zext_ln700_9_fu_1966_p1[10 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln89_reg_16475_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        and_ln89_reg_16524 <= and_ln89_fu_11517_p2;
        shl_ln89_1_reg_16518 <= shl_ln89_1_fu_11499_p2;
        shl_ln89_4_reg_16529 <= shl_ln89_4_fu_11534_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln89_reg_16475 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        data_port_addr_read_reg_16495 <= data_port_RDATA;
        empty_16_reg_16505[8 : 6] <= empty_16_fu_11433_p2[8 : 6];
        icmp_ln89_1_reg_16510 <= icmp_ln89_1_fu_11439_p2;
        shl_ln89_2_reg_16500[8 : 6] <= shl_ln89_2_fu_11426_p3[8 : 6];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln343_reg_13229 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dst_idx_V_1_reg_13281 <= dst_idx_V_1_fu_2134_p2;
        src_idx_V_1_reg_13286 <= src_idx_V_1_fu_2143_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln253_reg_13919_pp1_iter2_reg == 1'd0))) begin
        dst_idx_V_reg_14005 <= dst_idx_V_fu_4859_p2;
        src_idx_V_reg_14010 <= src_idx_V_fu_4868_p2;
        wgt_idx_V_reg_14015 <= wgt_idx_V_fu_4887_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln343_reg_13229_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        dst_tensor_0_0_V_6_reg_13515 <= dst_tensor_0_0_V_6_fu_2569_p3;
        dst_tensor_0_1_V_6_reg_13525 <= dst_tensor_0_1_V_6_fu_2686_p3;
        dst_tensor_0_2_V_6_reg_13535 <= dst_tensor_0_2_V_6_fu_2803_p3;
        dst_tensor_0_3_V_6_reg_13545 <= dst_tensor_0_3_V_6_fu_2920_p3;
        dst_tensor_0_4_V_6_reg_13555 <= dst_tensor_0_4_V_6_fu_3037_p3;
        dst_tensor_0_5_V_6_reg_13565 <= dst_tensor_0_5_V_6_fu_3154_p3;
        dst_tensor_0_6_V_6_reg_13575 <= dst_tensor_0_6_V_6_fu_3271_p3;
        dst_tensor_0_7_V_6_reg_13585 <= dst_tensor_0_7_V_6_fu_3388_p3;
        o_tensor_0_0_V_10_reg_13510 <= o_tensor_0_0_V_10_fu_2549_p3;
        o_tensor_0_1_V_10_reg_13520 <= o_tensor_0_1_V_10_fu_2665_p3;
        o_tensor_0_2_V_10_reg_13530 <= o_tensor_0_2_V_10_fu_2782_p3;
        o_tensor_0_3_V_10_reg_13540 <= o_tensor_0_3_V_10_fu_2899_p3;
        o_tensor_0_4_V_10_reg_13550 <= o_tensor_0_4_V_10_fu_3016_p3;
        o_tensor_0_5_V_9_reg_13560 <= o_tensor_0_5_V_9_fu_3133_p3;
        o_tensor_0_6_V_9_reg_13570 <= o_tensor_0_6_V_9_fu_3250_p3;
        o_tensor_0_7_V_9_reg_13580 <= o_tensor_0_7_V_9_fu_3367_p3;
        src_1_V_10_reg_13628 <= src_1_V_10_fu_3425_p3;
        src_1_V_11_reg_13647 <= src_1_V_11_fu_3440_p3;
        src_1_V_12_reg_13666 <= src_1_V_12_fu_3455_p3;
        src_1_V_13_reg_13685 <= src_1_V_13_fu_3470_p3;
        src_1_V_14_reg_13704 <= src_1_V_14_fu_3485_p3;
        src_1_V_15_reg_13723 <= src_1_V_15_fu_3500_p3;
        src_1_V_8_reg_13590 <= src_1_V_8_fu_3395_p3;
        src_1_V_9_reg_13609 <= src_1_V_9_fu_3410_p3;
        sub_ln461_10_reg_13642 <= sub_ln461_10_fu_3434_p2;
        sub_ln461_11_reg_13661 <= sub_ln461_11_fu_3449_p2;
        sub_ln461_12_reg_13680 <= sub_ln461_12_fu_3464_p2;
        sub_ln461_13_reg_13699 <= sub_ln461_13_fu_3479_p2;
        sub_ln461_14_reg_13718 <= sub_ln461_14_fu_3494_p2;
        sub_ln461_15_reg_13737 <= sub_ln461_15_fu_3509_p2;
        sub_ln461_8_reg_13604 <= sub_ln461_8_fu_3404_p2;
        sub_ln461_9_reg_13623 <= sub_ln461_9_fu_3419_p2;
        trunc_ln647_56_reg_13599 <= trunc_ln647_56_fu_3400_p1;
        trunc_ln647_60_reg_13618 <= trunc_ln647_60_fu_3415_p1;
        trunc_ln647_64_reg_13637 <= trunc_ln647_64_fu_3430_p1;
        trunc_ln647_68_reg_13656 <= trunc_ln647_68_fu_3445_p1;
        trunc_ln647_72_reg_13675 <= trunc_ln647_72_fu_3460_p1;
        trunc_ln647_76_reg_13694 <= trunc_ln647_76_fu_3475_p1;
        trunc_ln647_80_reg_13713 <= trunc_ln647_80_fu_3490_p1;
        trunc_ln647_84_reg_13732 <= trunc_ln647_84_fu_3505_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln343_reg_13229_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dst_tensor_0_0_V_reg_13347 <= dst_tensor_0_0_V_fu_2310_p1;
        select_ln375_reg_13358 <= select_ln375_fu_2314_p3;
        src_1_V_1_reg_13377 <= src_1_V_1_fu_2330_p3;
        src_1_V_2_reg_13396 <= src_1_V_2_fu_2346_p3;
        src_1_V_3_reg_13415 <= src_1_V_3_fu_2362_p3;
        src_1_V_4_reg_13434 <= src_1_V_4_fu_2378_p3;
        src_1_V_5_reg_13453 <= src_1_V_5_fu_2394_p3;
        src_1_V_6_reg_13472 <= src_1_V_6_fu_2410_p3;
        src_1_V_7_reg_13491 <= src_1_V_7_fu_2426_p3;
        sub_ln461_1_reg_13391 <= sub_ln461_1_fu_2340_p2;
        sub_ln461_2_reg_13410 <= sub_ln461_2_fu_2356_p2;
        sub_ln461_3_reg_13429 <= sub_ln461_3_fu_2372_p2;
        sub_ln461_4_reg_13448 <= sub_ln461_4_fu_2388_p2;
        sub_ln461_5_reg_13467 <= sub_ln461_5_fu_2404_p2;
        sub_ln461_6_reg_13486 <= sub_ln461_6_fu_2420_p2;
        sub_ln461_7_reg_13505 <= sub_ln461_7_fu_2436_p2;
        sub_ln461_reg_13372 <= sub_ln461_fu_2324_p2;
        trunc_ln647_24_reg_13367 <= trunc_ln647_24_fu_2320_p1;
        trunc_ln647_28_reg_13386 <= trunc_ln647_28_fu_2336_p1;
        trunc_ln647_32_reg_13405 <= trunc_ln647_32_fu_2352_p1;
        trunc_ln647_36_reg_13424 <= trunc_ln647_36_fu_2368_p1;
        trunc_ln647_40_reg_13443 <= trunc_ln647_40_fu_2384_p1;
        trunc_ln647_44_reg_13462 <= trunc_ln647_44_fu_2400_p1;
        trunc_ln647_48_reg_13481 <= trunc_ln647_48_fu_2416_p1;
        trunc_ln647_52_reg_13500 <= trunc_ln647_52_fu_2432_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln343_reg_13229_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dst_tensor_0_10_V_6_reg_13767 <= dst_tensor_0_10_V_6_fu_3923_p3;
        dst_tensor_0_11_V_6_reg_13777 <= dst_tensor_0_11_V_6_fu_4040_p3;
        dst_tensor_0_12_V_6_reg_13787 <= dst_tensor_0_12_V_6_fu_4157_p3;
        dst_tensor_0_13_V_6_reg_13797 <= dst_tensor_0_13_V_6_fu_4274_p3;
        dst_tensor_0_14_V_6_reg_13807 <= dst_tensor_0_14_V_6_fu_4391_p3;
        dst_tensor_0_15_V_6_reg_13817 <= dst_tensor_0_15_V_6_fu_4508_p3;
        dst_tensor_0_8_V_6_reg_13747 <= dst_tensor_0_8_V_6_fu_3689_p3;
        dst_tensor_0_9_V_6_reg_13757 <= dst_tensor_0_9_V_6_fu_3806_p3;
        o_tensor_0_10_V_9_reg_13762 <= o_tensor_0_10_V_9_fu_3902_p3;
        o_tensor_0_11_V_9_reg_13772 <= o_tensor_0_11_V_9_fu_4019_p3;
        o_tensor_0_12_V_9_reg_13782 <= o_tensor_0_12_V_9_fu_4136_p3;
        o_tensor_0_13_V_9_reg_13792 <= o_tensor_0_13_V_9_fu_4253_p3;
        o_tensor_0_14_V_9_reg_13802 <= o_tensor_0_14_V_9_fu_4370_p3;
        o_tensor_0_15_V_9_reg_13812 <= o_tensor_0_15_V_9_fu_4487_p3;
        o_tensor_0_8_V_9_reg_13742 <= o_tensor_0_8_V_9_fu_3668_p3;
        o_tensor_0_9_V_9_reg_13752 <= o_tensor_0_9_V_9_fu_3785_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln253_reg_13919_pp1_iter4_reg == 1'd0))) begin
        i_tensor_i_0_10_reg_15370 <= {{inp_mem_V_Dout_A[95:88]}};
        i_tensor_i_0_11_reg_15375 <= {{inp_mem_V_Dout_A[103:96]}};
        i_tensor_i_0_12_reg_15380 <= {{inp_mem_V_Dout_A[111:104]}};
        i_tensor_i_0_13_reg_15385 <= {{inp_mem_V_Dout_A[119:112]}};
        i_tensor_i_0_14_reg_15390 <= {{inp_mem_V_Dout_A[127:120]}};
        i_tensor_i_0_1_reg_15320 <= {{inp_mem_V_Dout_A[15:8]}};
        i_tensor_i_0_2_reg_15325 <= {{inp_mem_V_Dout_A[23:16]}};
        i_tensor_i_0_3_reg_15330 <= {{inp_mem_V_Dout_A[31:24]}};
        i_tensor_i_0_4_reg_15335 <= {{inp_mem_V_Dout_A[39:32]}};
        i_tensor_i_0_5_reg_15340 <= {{inp_mem_V_Dout_A[47:40]}};
        i_tensor_i_0_6_reg_15345 <= {{inp_mem_V_Dout_A[55:48]}};
        i_tensor_i_0_7_reg_15350 <= {{inp_mem_V_Dout_A[63:56]}};
        i_tensor_i_0_8_reg_15355 <= {{inp_mem_V_Dout_A[71:64]}};
        i_tensor_i_0_9_reg_15360 <= {{inp_mem_V_Dout_A[79:72]}};
        i_tensor_i_0_s_reg_15365 <= {{inp_mem_V_Dout_A[87:80]}};
        trunc_ln647_1_reg_14035 <= trunc_ln647_1_fu_4901_p1;
        trunc_ln647_2_reg_14075 <= trunc_ln647_2_fu_4975_p1;
        trunc_ln647_3_reg_15315 <= trunc_ln647_3_fu_7449_p1;
        w_tensor_i_0_10_reg_14095 <= {{wgt_mem_1_V_Dout_A[39:32]}};
        w_tensor_i_0_11_reg_14100 <= {{wgt_mem_1_V_Dout_A[47:40]}};
        w_tensor_i_0_12_reg_14105 <= {{wgt_mem_1_V_Dout_A[55:48]}};
        w_tensor_i_0_13_reg_14110 <= {{wgt_mem_1_V_Dout_A[63:56]}};
        w_tensor_i_0_1_reg_14040 <= {{wgt_mem_0_V_Dout_A[15:8]}};
        w_tensor_i_0_2_reg_14045 <= {{wgt_mem_0_V_Dout_A[23:16]}};
        w_tensor_i_0_3_reg_14050 <= {{wgt_mem_0_V_Dout_A[31:24]}};
        w_tensor_i_0_4_reg_14055 <= {{wgt_mem_0_V_Dout_A[39:32]}};
        w_tensor_i_0_5_reg_14060 <= {{wgt_mem_0_V_Dout_A[47:40]}};
        w_tensor_i_0_6_reg_14065 <= {{wgt_mem_0_V_Dout_A[55:48]}};
        w_tensor_i_0_7_reg_14070 <= {{wgt_mem_0_V_Dout_A[63:56]}};
        w_tensor_i_0_8_reg_14090 <= {{wgt_mem_1_V_Dout_A[31:24]}};
        w_tensor_i_0_9_reg_14080 <= {{wgt_mem_1_V_Dout_A[15:8]}};
        w_tensor_i_0_s_reg_14085 <= {{wgt_mem_1_V_Dout_A[23:16]}};
        w_tensor_i_10_10_reg_14890 <= {{wgt_mem_1_V_Dout_A[671:664]}};
        w_tensor_i_10_11_reg_14895 <= {{wgt_mem_1_V_Dout_A[679:672]}};
        w_tensor_i_10_12_reg_14900 <= {{wgt_mem_1_V_Dout_A[687:680]}};
        w_tensor_i_10_13_reg_14905 <= {{wgt_mem_1_V_Dout_A[695:688]}};
        w_tensor_i_10_14_reg_14910 <= {{wgt_mem_1_V_Dout_A[703:696]}};
        w_tensor_i_10_1_reg_14840 <= {{wgt_mem_0_V_Dout_A[655:648]}};
        w_tensor_i_10_2_reg_14845 <= {{wgt_mem_0_V_Dout_A[663:656]}};
        w_tensor_i_10_3_reg_14850 <= {{wgt_mem_0_V_Dout_A[671:664]}};
        w_tensor_i_10_4_reg_14855 <= {{wgt_mem_0_V_Dout_A[679:672]}};
        w_tensor_i_10_5_reg_14860 <= {{wgt_mem_0_V_Dout_A[687:680]}};
        w_tensor_i_10_6_reg_14865 <= {{wgt_mem_0_V_Dout_A[695:688]}};
        w_tensor_i_10_7_reg_14870 <= {{wgt_mem_0_V_Dout_A[703:696]}};
        w_tensor_i_10_8_reg_14875 <= {{wgt_mem_1_V_Dout_A[647:640]}};
        w_tensor_i_10_9_reg_14880 <= {{wgt_mem_1_V_Dout_A[655:648]}};
        w_tensor_i_10_reg_14915 <= {{wgt_mem_0_V_Dout_A[711:704]}};
        w_tensor_i_10_s_reg_14885 <= {{wgt_mem_1_V_Dout_A[663:656]}};
        w_tensor_i_11_10_reg_14970 <= {{wgt_mem_1_V_Dout_A[735:728]}};
        w_tensor_i_11_11_reg_14975 <= {{wgt_mem_1_V_Dout_A[743:736]}};
        w_tensor_i_11_12_reg_14980 <= {{wgt_mem_1_V_Dout_A[751:744]}};
        w_tensor_i_11_13_reg_14985 <= {{wgt_mem_1_V_Dout_A[759:752]}};
        w_tensor_i_11_14_reg_14990 <= {{wgt_mem_1_V_Dout_A[767:760]}};
        w_tensor_i_11_1_reg_14920 <= {{wgt_mem_0_V_Dout_A[719:712]}};
        w_tensor_i_11_2_reg_14925 <= {{wgt_mem_0_V_Dout_A[727:720]}};
        w_tensor_i_11_3_reg_14930 <= {{wgt_mem_0_V_Dout_A[735:728]}};
        w_tensor_i_11_4_reg_14935 <= {{wgt_mem_0_V_Dout_A[743:736]}};
        w_tensor_i_11_5_reg_14940 <= {{wgt_mem_0_V_Dout_A[751:744]}};
        w_tensor_i_11_6_reg_14945 <= {{wgt_mem_0_V_Dout_A[759:752]}};
        w_tensor_i_11_7_reg_14950 <= {{wgt_mem_0_V_Dout_A[767:760]}};
        w_tensor_i_11_8_reg_14955 <= {{wgt_mem_1_V_Dout_A[711:704]}};
        w_tensor_i_11_9_reg_14960 <= {{wgt_mem_1_V_Dout_A[719:712]}};
        w_tensor_i_11_reg_14995 <= {{wgt_mem_0_V_Dout_A[775:768]}};
        w_tensor_i_11_s_reg_14965 <= {{wgt_mem_1_V_Dout_A[727:720]}};
        w_tensor_i_12_10_reg_15050 <= {{wgt_mem_1_V_Dout_A[799:792]}};
        w_tensor_i_12_11_reg_15055 <= {{wgt_mem_1_V_Dout_A[807:800]}};
        w_tensor_i_12_12_reg_15060 <= {{wgt_mem_1_V_Dout_A[815:808]}};
        w_tensor_i_12_13_reg_15065 <= {{wgt_mem_1_V_Dout_A[823:816]}};
        w_tensor_i_12_14_reg_15070 <= {{wgt_mem_1_V_Dout_A[831:824]}};
        w_tensor_i_12_1_reg_15000 <= {{wgt_mem_0_V_Dout_A[783:776]}};
        w_tensor_i_12_2_reg_15005 <= {{wgt_mem_0_V_Dout_A[791:784]}};
        w_tensor_i_12_3_reg_15010 <= {{wgt_mem_0_V_Dout_A[799:792]}};
        w_tensor_i_12_4_reg_15015 <= {{wgt_mem_0_V_Dout_A[807:800]}};
        w_tensor_i_12_5_reg_15020 <= {{wgt_mem_0_V_Dout_A[815:808]}};
        w_tensor_i_12_6_reg_15025 <= {{wgt_mem_0_V_Dout_A[823:816]}};
        w_tensor_i_12_7_reg_15030 <= {{wgt_mem_0_V_Dout_A[831:824]}};
        w_tensor_i_12_8_reg_15035 <= {{wgt_mem_1_V_Dout_A[775:768]}};
        w_tensor_i_12_9_reg_15040 <= {{wgt_mem_1_V_Dout_A[783:776]}};
        w_tensor_i_12_reg_15075 <= {{wgt_mem_0_V_Dout_A[839:832]}};
        w_tensor_i_12_s_reg_15045 <= {{wgt_mem_1_V_Dout_A[791:784]}};
        w_tensor_i_13_10_reg_15130 <= {{wgt_mem_1_V_Dout_A[863:856]}};
        w_tensor_i_13_11_reg_15135 <= {{wgt_mem_1_V_Dout_A[871:864]}};
        w_tensor_i_13_12_reg_15140 <= {{wgt_mem_1_V_Dout_A[879:872]}};
        w_tensor_i_13_13_reg_15145 <= {{wgt_mem_1_V_Dout_A[887:880]}};
        w_tensor_i_13_14_reg_15150 <= {{wgt_mem_1_V_Dout_A[895:888]}};
        w_tensor_i_13_1_reg_15080 <= {{wgt_mem_0_V_Dout_A[847:840]}};
        w_tensor_i_13_2_reg_15085 <= {{wgt_mem_0_V_Dout_A[855:848]}};
        w_tensor_i_13_3_reg_15090 <= {{wgt_mem_0_V_Dout_A[863:856]}};
        w_tensor_i_13_4_reg_15095 <= {{wgt_mem_0_V_Dout_A[871:864]}};
        w_tensor_i_13_5_reg_15100 <= {{wgt_mem_0_V_Dout_A[879:872]}};
        w_tensor_i_13_6_reg_15105 <= {{wgt_mem_0_V_Dout_A[887:880]}};
        w_tensor_i_13_7_reg_15110 <= {{wgt_mem_0_V_Dout_A[895:888]}};
        w_tensor_i_13_8_reg_15115 <= {{wgt_mem_1_V_Dout_A[839:832]}};
        w_tensor_i_13_9_reg_15120 <= {{wgt_mem_1_V_Dout_A[847:840]}};
        w_tensor_i_13_reg_15155 <= {{wgt_mem_0_V_Dout_A[903:896]}};
        w_tensor_i_13_s_reg_15125 <= {{wgt_mem_1_V_Dout_A[855:848]}};
        w_tensor_i_14_10_reg_15210 <= {{wgt_mem_1_V_Dout_A[927:920]}};
        w_tensor_i_14_11_reg_15215 <= {{wgt_mem_1_V_Dout_A[935:928]}};
        w_tensor_i_14_12_reg_15220 <= {{wgt_mem_1_V_Dout_A[943:936]}};
        w_tensor_i_14_13_reg_15225 <= {{wgt_mem_1_V_Dout_A[951:944]}};
        w_tensor_i_14_14_reg_15230 <= {{wgt_mem_1_V_Dout_A[959:952]}};
        w_tensor_i_14_1_reg_15160 <= {{wgt_mem_0_V_Dout_A[911:904]}};
        w_tensor_i_14_2_reg_15165 <= {{wgt_mem_0_V_Dout_A[919:912]}};
        w_tensor_i_14_3_reg_15170 <= {{wgt_mem_0_V_Dout_A[927:920]}};
        w_tensor_i_14_4_reg_15175 <= {{wgt_mem_0_V_Dout_A[935:928]}};
        w_tensor_i_14_5_reg_15180 <= {{wgt_mem_0_V_Dout_A[943:936]}};
        w_tensor_i_14_6_reg_15185 <= {{wgt_mem_0_V_Dout_A[951:944]}};
        w_tensor_i_14_7_reg_15190 <= {{wgt_mem_0_V_Dout_A[959:952]}};
        w_tensor_i_14_8_reg_15195 <= {{wgt_mem_1_V_Dout_A[903:896]}};
        w_tensor_i_14_9_reg_15200 <= {{wgt_mem_1_V_Dout_A[911:904]}};
        w_tensor_i_14_reg_15235 <= {{wgt_mem_0_V_Dout_A[967:960]}};
        w_tensor_i_14_s_reg_15205 <= {{wgt_mem_1_V_Dout_A[919:912]}};
        w_tensor_i_15_10_reg_15290 <= {{wgt_mem_1_V_Dout_A[991:984]}};
        w_tensor_i_15_11_reg_15295 <= {{wgt_mem_1_V_Dout_A[999:992]}};
        w_tensor_i_15_12_reg_15300 <= {{wgt_mem_1_V_Dout_A[1007:1000]}};
        w_tensor_i_15_13_reg_15305 <= {{wgt_mem_1_V_Dout_A[1015:1008]}};
        w_tensor_i_15_14_reg_15310 <= {{wgt_mem_1_V_Dout_A[1023:1016]}};
        w_tensor_i_15_1_reg_15240 <= {{wgt_mem_0_V_Dout_A[975:968]}};
        w_tensor_i_15_2_reg_15245 <= {{wgt_mem_0_V_Dout_A[983:976]}};
        w_tensor_i_15_3_reg_15250 <= {{wgt_mem_0_V_Dout_A[991:984]}};
        w_tensor_i_15_4_reg_15255 <= {{wgt_mem_0_V_Dout_A[999:992]}};
        w_tensor_i_15_5_reg_15260 <= {{wgt_mem_0_V_Dout_A[1007:1000]}};
        w_tensor_i_15_6_reg_15265 <= {{wgt_mem_0_V_Dout_A[1015:1008]}};
        w_tensor_i_15_7_reg_15270 <= {{wgt_mem_0_V_Dout_A[1023:1016]}};
        w_tensor_i_15_8_reg_15275 <= {{wgt_mem_1_V_Dout_A[967:960]}};
        w_tensor_i_15_9_reg_15280 <= {{wgt_mem_1_V_Dout_A[975:968]}};
        w_tensor_i_15_s_reg_15285 <= {{wgt_mem_1_V_Dout_A[983:976]}};
        w_tensor_i_1_10_reg_14170 <= {{wgt_mem_1_V_Dout_A[95:88]}};
        w_tensor_i_1_11_reg_14175 <= {{wgt_mem_1_V_Dout_A[103:96]}};
        w_tensor_i_1_12_reg_14180 <= {{wgt_mem_1_V_Dout_A[111:104]}};
        w_tensor_i_1_13_reg_14185 <= {{wgt_mem_1_V_Dout_A[119:112]}};
        w_tensor_i_1_14_reg_14190 <= {{wgt_mem_1_V_Dout_A[127:120]}};
        w_tensor_i_1_1_reg_14120 <= {{wgt_mem_0_V_Dout_A[79:72]}};
        w_tensor_i_1_2_reg_14125 <= {{wgt_mem_0_V_Dout_A[87:80]}};
        w_tensor_i_1_3_reg_14130 <= {{wgt_mem_0_V_Dout_A[95:88]}};
        w_tensor_i_1_4_reg_14135 <= {{wgt_mem_0_V_Dout_A[103:96]}};
        w_tensor_i_1_5_reg_14140 <= {{wgt_mem_0_V_Dout_A[111:104]}};
        w_tensor_i_1_6_reg_14145 <= {{wgt_mem_0_V_Dout_A[119:112]}};
        w_tensor_i_1_7_reg_14150 <= {{wgt_mem_0_V_Dout_A[127:120]}};
        w_tensor_i_1_8_reg_14155 <= {{wgt_mem_1_V_Dout_A[71:64]}};
        w_tensor_i_1_9_reg_14160 <= {{wgt_mem_1_V_Dout_A[79:72]}};
        w_tensor_i_1_reg_14115 <= {{wgt_mem_0_V_Dout_A[71:64]}};
        w_tensor_i_1_s_reg_14165 <= {{wgt_mem_1_V_Dout_A[87:80]}};
        w_tensor_i_2_10_reg_14250 <= {{wgt_mem_1_V_Dout_A[159:152]}};
        w_tensor_i_2_11_reg_14255 <= {{wgt_mem_1_V_Dout_A[167:160]}};
        w_tensor_i_2_12_reg_14260 <= {{wgt_mem_1_V_Dout_A[175:168]}};
        w_tensor_i_2_13_reg_14265 <= {{wgt_mem_1_V_Dout_A[183:176]}};
        w_tensor_i_2_14_reg_14270 <= {{wgt_mem_1_V_Dout_A[191:184]}};
        w_tensor_i_2_1_reg_14200 <= {{wgt_mem_0_V_Dout_A[143:136]}};
        w_tensor_i_2_2_reg_14205 <= {{wgt_mem_0_V_Dout_A[151:144]}};
        w_tensor_i_2_3_reg_14210 <= {{wgt_mem_0_V_Dout_A[159:152]}};
        w_tensor_i_2_4_reg_14215 <= {{wgt_mem_0_V_Dout_A[167:160]}};
        w_tensor_i_2_5_reg_14220 <= {{wgt_mem_0_V_Dout_A[175:168]}};
        w_tensor_i_2_6_reg_14225 <= {{wgt_mem_0_V_Dout_A[183:176]}};
        w_tensor_i_2_7_reg_14230 <= {{wgt_mem_0_V_Dout_A[191:184]}};
        w_tensor_i_2_8_reg_14235 <= {{wgt_mem_1_V_Dout_A[135:128]}};
        w_tensor_i_2_9_reg_14240 <= {{wgt_mem_1_V_Dout_A[143:136]}};
        w_tensor_i_2_reg_14195 <= {{wgt_mem_0_V_Dout_A[135:128]}};
        w_tensor_i_2_s_reg_14245 <= {{wgt_mem_1_V_Dout_A[151:144]}};
        w_tensor_i_3_10_reg_14330 <= {{wgt_mem_1_V_Dout_A[223:216]}};
        w_tensor_i_3_11_reg_14335 <= {{wgt_mem_1_V_Dout_A[231:224]}};
        w_tensor_i_3_12_reg_14340 <= {{wgt_mem_1_V_Dout_A[239:232]}};
        w_tensor_i_3_13_reg_14345 <= {{wgt_mem_1_V_Dout_A[247:240]}};
        w_tensor_i_3_14_reg_14350 <= {{wgt_mem_1_V_Dout_A[255:248]}};
        w_tensor_i_3_1_reg_14280 <= {{wgt_mem_0_V_Dout_A[207:200]}};
        w_tensor_i_3_2_reg_14285 <= {{wgt_mem_0_V_Dout_A[215:208]}};
        w_tensor_i_3_3_reg_14290 <= {{wgt_mem_0_V_Dout_A[223:216]}};
        w_tensor_i_3_4_reg_14295 <= {{wgt_mem_0_V_Dout_A[231:224]}};
        w_tensor_i_3_5_reg_14300 <= {{wgt_mem_0_V_Dout_A[239:232]}};
        w_tensor_i_3_6_reg_14305 <= {{wgt_mem_0_V_Dout_A[247:240]}};
        w_tensor_i_3_7_reg_14310 <= {{wgt_mem_0_V_Dout_A[255:248]}};
        w_tensor_i_3_8_reg_14315 <= {{wgt_mem_1_V_Dout_A[199:192]}};
        w_tensor_i_3_9_reg_14320 <= {{wgt_mem_1_V_Dout_A[207:200]}};
        w_tensor_i_3_reg_14275 <= {{wgt_mem_0_V_Dout_A[199:192]}};
        w_tensor_i_3_s_reg_14325 <= {{wgt_mem_1_V_Dout_A[215:208]}};
        w_tensor_i_4_10_reg_14410 <= {{wgt_mem_1_V_Dout_A[287:280]}};
        w_tensor_i_4_11_reg_14415 <= {{wgt_mem_1_V_Dout_A[295:288]}};
        w_tensor_i_4_12_reg_14420 <= {{wgt_mem_1_V_Dout_A[303:296]}};
        w_tensor_i_4_13_reg_14425 <= {{wgt_mem_1_V_Dout_A[311:304]}};
        w_tensor_i_4_14_reg_14430 <= {{wgt_mem_1_V_Dout_A[319:312]}};
        w_tensor_i_4_1_reg_14360 <= {{wgt_mem_0_V_Dout_A[271:264]}};
        w_tensor_i_4_2_reg_14365 <= {{wgt_mem_0_V_Dout_A[279:272]}};
        w_tensor_i_4_3_reg_14370 <= {{wgt_mem_0_V_Dout_A[287:280]}};
        w_tensor_i_4_4_reg_14375 <= {{wgt_mem_0_V_Dout_A[295:288]}};
        w_tensor_i_4_5_reg_14380 <= {{wgt_mem_0_V_Dout_A[303:296]}};
        w_tensor_i_4_6_reg_14385 <= {{wgt_mem_0_V_Dout_A[311:304]}};
        w_tensor_i_4_7_reg_14390 <= {{wgt_mem_0_V_Dout_A[319:312]}};
        w_tensor_i_4_8_reg_14395 <= {{wgt_mem_1_V_Dout_A[263:256]}};
        w_tensor_i_4_9_reg_14400 <= {{wgt_mem_1_V_Dout_A[271:264]}};
        w_tensor_i_4_reg_14355 <= {{wgt_mem_0_V_Dout_A[263:256]}};
        w_tensor_i_4_s_reg_14405 <= {{wgt_mem_1_V_Dout_A[279:272]}};
        w_tensor_i_5_10_reg_14490 <= {{wgt_mem_1_V_Dout_A[351:344]}};
        w_tensor_i_5_11_reg_14495 <= {{wgt_mem_1_V_Dout_A[359:352]}};
        w_tensor_i_5_12_reg_14500 <= {{wgt_mem_1_V_Dout_A[367:360]}};
        w_tensor_i_5_13_reg_14505 <= {{wgt_mem_1_V_Dout_A[375:368]}};
        w_tensor_i_5_14_reg_14510 <= {{wgt_mem_1_V_Dout_A[383:376]}};
        w_tensor_i_5_1_reg_14440 <= {{wgt_mem_0_V_Dout_A[335:328]}};
        w_tensor_i_5_2_reg_14445 <= {{wgt_mem_0_V_Dout_A[343:336]}};
        w_tensor_i_5_3_reg_14450 <= {{wgt_mem_0_V_Dout_A[351:344]}};
        w_tensor_i_5_4_reg_14455 <= {{wgt_mem_0_V_Dout_A[359:352]}};
        w_tensor_i_5_5_reg_14460 <= {{wgt_mem_0_V_Dout_A[367:360]}};
        w_tensor_i_5_6_reg_14465 <= {{wgt_mem_0_V_Dout_A[375:368]}};
        w_tensor_i_5_7_reg_14470 <= {{wgt_mem_0_V_Dout_A[383:376]}};
        w_tensor_i_5_8_reg_14475 <= {{wgt_mem_1_V_Dout_A[327:320]}};
        w_tensor_i_5_9_reg_14480 <= {{wgt_mem_1_V_Dout_A[335:328]}};
        w_tensor_i_5_reg_14435 <= {{wgt_mem_0_V_Dout_A[327:320]}};
        w_tensor_i_5_s_reg_14485 <= {{wgt_mem_1_V_Dout_A[343:336]}};
        w_tensor_i_6_10_reg_14570 <= {{wgt_mem_1_V_Dout_A[415:408]}};
        w_tensor_i_6_11_reg_14575 <= {{wgt_mem_1_V_Dout_A[423:416]}};
        w_tensor_i_6_12_reg_14580 <= {{wgt_mem_1_V_Dout_A[431:424]}};
        w_tensor_i_6_13_reg_14585 <= {{wgt_mem_1_V_Dout_A[439:432]}};
        w_tensor_i_6_14_reg_14590 <= {{wgt_mem_1_V_Dout_A[447:440]}};
        w_tensor_i_6_1_reg_14520 <= {{wgt_mem_0_V_Dout_A[399:392]}};
        w_tensor_i_6_2_reg_14525 <= {{wgt_mem_0_V_Dout_A[407:400]}};
        w_tensor_i_6_3_reg_14530 <= {{wgt_mem_0_V_Dout_A[415:408]}};
        w_tensor_i_6_4_reg_14535 <= {{wgt_mem_0_V_Dout_A[423:416]}};
        w_tensor_i_6_5_reg_14540 <= {{wgt_mem_0_V_Dout_A[431:424]}};
        w_tensor_i_6_6_reg_14545 <= {{wgt_mem_0_V_Dout_A[439:432]}};
        w_tensor_i_6_7_reg_14550 <= {{wgt_mem_0_V_Dout_A[447:440]}};
        w_tensor_i_6_8_reg_14555 <= {{wgt_mem_1_V_Dout_A[391:384]}};
        w_tensor_i_6_9_reg_14560 <= {{wgt_mem_1_V_Dout_A[399:392]}};
        w_tensor_i_6_reg_14515 <= {{wgt_mem_0_V_Dout_A[391:384]}};
        w_tensor_i_6_s_reg_14565 <= {{wgt_mem_1_V_Dout_A[407:400]}};
        w_tensor_i_7_10_reg_14650 <= {{wgt_mem_1_V_Dout_A[479:472]}};
        w_tensor_i_7_11_reg_14655 <= {{wgt_mem_1_V_Dout_A[487:480]}};
        w_tensor_i_7_12_reg_14660 <= {{wgt_mem_1_V_Dout_A[495:488]}};
        w_tensor_i_7_13_reg_14665 <= {{wgt_mem_1_V_Dout_A[503:496]}};
        w_tensor_i_7_14_reg_14670 <= {{wgt_mem_1_V_Dout_A[511:504]}};
        w_tensor_i_7_1_reg_14600 <= {{wgt_mem_0_V_Dout_A[463:456]}};
        w_tensor_i_7_2_reg_14605 <= {{wgt_mem_0_V_Dout_A[471:464]}};
        w_tensor_i_7_3_reg_14610 <= {{wgt_mem_0_V_Dout_A[479:472]}};
        w_tensor_i_7_4_reg_14615 <= {{wgt_mem_0_V_Dout_A[487:480]}};
        w_tensor_i_7_5_reg_14620 <= {{wgt_mem_0_V_Dout_A[495:488]}};
        w_tensor_i_7_6_reg_14625 <= {{wgt_mem_0_V_Dout_A[503:496]}};
        w_tensor_i_7_7_reg_14630 <= {{wgt_mem_0_V_Dout_A[511:504]}};
        w_tensor_i_7_8_reg_14635 <= {{wgt_mem_1_V_Dout_A[455:448]}};
        w_tensor_i_7_9_reg_14640 <= {{wgt_mem_1_V_Dout_A[463:456]}};
        w_tensor_i_7_reg_14595 <= {{wgt_mem_0_V_Dout_A[455:448]}};
        w_tensor_i_7_s_reg_14645 <= {{wgt_mem_1_V_Dout_A[471:464]}};
        w_tensor_i_8_10_reg_14730 <= {{wgt_mem_1_V_Dout_A[543:536]}};
        w_tensor_i_8_11_reg_14735 <= {{wgt_mem_1_V_Dout_A[551:544]}};
        w_tensor_i_8_12_reg_14740 <= {{wgt_mem_1_V_Dout_A[559:552]}};
        w_tensor_i_8_13_reg_14745 <= {{wgt_mem_1_V_Dout_A[567:560]}};
        w_tensor_i_8_14_reg_14750 <= {{wgt_mem_1_V_Dout_A[575:568]}};
        w_tensor_i_8_1_reg_14680 <= {{wgt_mem_0_V_Dout_A[527:520]}};
        w_tensor_i_8_2_reg_14685 <= {{wgt_mem_0_V_Dout_A[535:528]}};
        w_tensor_i_8_3_reg_14690 <= {{wgt_mem_0_V_Dout_A[543:536]}};
        w_tensor_i_8_4_reg_14695 <= {{wgt_mem_0_V_Dout_A[551:544]}};
        w_tensor_i_8_5_reg_14700 <= {{wgt_mem_0_V_Dout_A[559:552]}};
        w_tensor_i_8_6_reg_14705 <= {{wgt_mem_0_V_Dout_A[567:560]}};
        w_tensor_i_8_7_reg_14710 <= {{wgt_mem_0_V_Dout_A[575:568]}};
        w_tensor_i_8_8_reg_14715 <= {{wgt_mem_1_V_Dout_A[519:512]}};
        w_tensor_i_8_9_reg_14720 <= {{wgt_mem_1_V_Dout_A[527:520]}};
        w_tensor_i_8_reg_14675 <= {{wgt_mem_0_V_Dout_A[519:512]}};
        w_tensor_i_8_s_reg_14725 <= {{wgt_mem_1_V_Dout_A[535:528]}};
        w_tensor_i_9_10_reg_14810 <= {{wgt_mem_1_V_Dout_A[607:600]}};
        w_tensor_i_9_11_reg_14815 <= {{wgt_mem_1_V_Dout_A[615:608]}};
        w_tensor_i_9_12_reg_14820 <= {{wgt_mem_1_V_Dout_A[623:616]}};
        w_tensor_i_9_13_reg_14825 <= {{wgt_mem_1_V_Dout_A[631:624]}};
        w_tensor_i_9_14_reg_14830 <= {{wgt_mem_1_V_Dout_A[639:632]}};
        w_tensor_i_9_1_reg_14760 <= {{wgt_mem_0_V_Dout_A[591:584]}};
        w_tensor_i_9_2_reg_14765 <= {{wgt_mem_0_V_Dout_A[599:592]}};
        w_tensor_i_9_3_reg_14770 <= {{wgt_mem_0_V_Dout_A[607:600]}};
        w_tensor_i_9_4_reg_14775 <= {{wgt_mem_0_V_Dout_A[615:608]}};
        w_tensor_i_9_5_reg_14780 <= {{wgt_mem_0_V_Dout_A[623:616]}};
        w_tensor_i_9_6_reg_14785 <= {{wgt_mem_0_V_Dout_A[631:624]}};
        w_tensor_i_9_7_reg_14790 <= {{wgt_mem_0_V_Dout_A[639:632]}};
        w_tensor_i_9_8_reg_14795 <= {{wgt_mem_1_V_Dout_A[583:576]}};
        w_tensor_i_9_9_reg_14800 <= {{wgt_mem_1_V_Dout_A[591:584]}};
        w_tensor_i_9_reg_14755 <= {{wgt_mem_0_V_Dout_A[583:576]}};
        w_tensor_i_9_s_reg_14805 <= {{wgt_mem_1_V_Dout_A[599:592]}};
        w_tensor_i_s_reg_14835 <= {{wgt_mem_0_V_Dout_A[647:640]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln253_reg_13919 <= icmp_ln253_fu_4691_p2;
        icmp_ln253_reg_13919_pp1_iter1_reg <= icmp_ln253_reg_13919;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (gemm_queue_V_V_TVALID_int == 1'b0) | ((s2g_dep_queue_V_TVALID_int == 1'b0) & (tmp_6_fu_1679_p3 == 1'd1)) | ((l2g_dep_queue_V_TVALID_int == 1'b0) & (tmp_4_fu_1671_p3 == 1'd1))) & (icmp_ln493_fu_1703_p2 == 1'd1) & (icmp_ln473_fu_1697_p2 == 1'd0) & (icmp_ln470_fu_1691_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        icmp_ln262_reg_12933 <= icmp_ln262_fu_1785_p2;
        sub_ln253_reg_12928 <= sub_ln253_fu_1779_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln343_reg_13229 <= icmp_ln343_fu_1993_p2;
        icmp_ln343_reg_13229_pp0_iter1_reg <= icmp_ln343_reg_13229;
        icmp_ln343_reg_13229_pp0_iter2_reg <= icmp_ln343_reg_13229_pp0_iter1_reg;
        icmp_ln343_reg_13229_pp0_iter3_reg <= icmp_ln343_reg_13229_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (gemm_queue_V_V_TVALID_int == 1'b0) | ((s2g_dep_queue_V_TVALID_int == 1'b0) & (tmp_6_fu_1679_p3 == 1'd1)) | ((l2g_dep_queue_V_TVALID_int == 1'b0) & (tmp_4_fu_1671_p3 == 1'd1))) & (icmp_ln495_fu_1709_p2 == 1'd1) & (icmp_ln493_fu_1703_p2 == 1'd0) & (icmp_ln473_fu_1697_p2 == 1'd0) & (icmp_ln470_fu_1691_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        icmp_ln350_reg_12923 <= icmp_ln350_fu_1747_p2;
        sub_ln343_reg_12918 <= sub_ln343_fu_1741_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (gemm_queue_V_V_TVALID_int == 1'b0) | ((s2g_dep_queue_V_TVALID_int == 1'b0) & (tmp_6_fu_1679_p3 == 1'd1)) | ((l2g_dep_queue_V_TVALID_int == 1'b0) & (tmp_4_fu_1671_p3 == 1'd1))) & (icmp_ln473_fu_1697_p2 == 1'd1) & (icmp_ln477_fu_1821_p2 == 1'd0) & (icmp_ln470_fu_1691_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        icmp_ln482_reg_12952 <= icmp_ln482_fu_1827_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        icmp_ln89_1_reg_16510_pp2_iter2_reg <= icmp_ln89_1_reg_16510;
        icmp_ln89_reg_16475_pp2_iter2_reg <= icmp_ln89_reg_16475_pp2_iter1_reg;
        lshr_ln2_reg_16484_pp2_iter2_reg <= lshr_ln2_reg_16484_pp2_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln89_reg_16475 <= icmp_ln89_fu_11392_p2;
        icmp_ln89_reg_16475_pp2_iter1_reg <= icmp_ln89_reg_16475;
        lshr_ln2_reg_16484_pp2_iter1_reg <= lshr_ln2_reg_16484;
        trunc_ln89_1_reg_16489_pp2_iter1_reg <= trunc_ln89_1_reg_16489;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln89_fu_11392_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        lshr_ln2_reg_16484 <= {{add_ln89_1_fu_11407_p2[15:3]}};
        trunc_ln89_1_reg_16489 <= trunc_ln89_1_fu_11422_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln253_reg_13919_pp1_iter5_reg == 1'd0))) begin
        mul_ln1352_101_reg_15645 <= mul_ln1352_101_fu_8080_p2;
        mul_ln1352_103_reg_15650 <= mul_ln1352_103_fu_8089_p2;
        mul_ln1352_105_reg_15655 <= mul_ln1352_105_fu_8098_p2;
        mul_ln1352_107_reg_15660 <= mul_ln1352_107_fu_8107_p2;
        mul_ln1352_109_reg_15665 <= mul_ln1352_109_fu_8116_p2;
        mul_ln1352_111_reg_15670 <= mul_ln1352_111_fu_8125_p2;
        mul_ln1352_113_reg_15675 <= mul_ln1352_113_fu_8134_p2;
        mul_ln1352_115_reg_15680 <= mul_ln1352_115_fu_8143_p2;
        mul_ln1352_117_reg_15685 <= mul_ln1352_117_fu_8152_p2;
        mul_ln1352_119_reg_15690 <= mul_ln1352_119_fu_8161_p2;
        mul_ln1352_11_reg_15420 <= mul_ln1352_11_fu_7669_p2;
        mul_ln1352_121_reg_15695 <= mul_ln1352_121_fu_8170_p2;
        mul_ln1352_123_reg_15700 <= mul_ln1352_123_fu_8179_p2;
        mul_ln1352_125_reg_15705 <= mul_ln1352_125_fu_8188_p2;
        mul_ln1352_127_reg_15710 <= mul_ln1352_127_fu_8197_p2;
        mul_ln1352_129_reg_15715 <= mul_ln1352_129_fu_8206_p2;
        mul_ln1352_131_reg_15720 <= mul_ln1352_131_fu_8215_p2;
        mul_ln1352_133_reg_15725 <= mul_ln1352_133_fu_8224_p2;
        mul_ln1352_135_reg_15730 <= mul_ln1352_135_fu_8233_p2;
        mul_ln1352_137_reg_15735 <= mul_ln1352_137_fu_8242_p2;
        mul_ln1352_139_reg_15740 <= mul_ln1352_139_fu_8251_p2;
        mul_ln1352_13_reg_15425 <= mul_ln1352_13_fu_7681_p2;
        mul_ln1352_141_reg_15745 <= mul_ln1352_141_fu_8260_p2;
        mul_ln1352_143_reg_15750 <= mul_ln1352_143_fu_8269_p2;
        mul_ln1352_145_reg_15755 <= mul_ln1352_145_fu_8278_p2;
        mul_ln1352_147_reg_15760 <= mul_ln1352_147_fu_8287_p2;
        mul_ln1352_149_reg_15765 <= mul_ln1352_149_fu_8296_p2;
        mul_ln1352_151_reg_15770 <= mul_ln1352_151_fu_8305_p2;
        mul_ln1352_153_reg_15775 <= mul_ln1352_153_fu_8314_p2;
        mul_ln1352_155_reg_15780 <= mul_ln1352_155_fu_8323_p2;
        mul_ln1352_157_reg_15785 <= mul_ln1352_157_fu_8332_p2;
        mul_ln1352_159_reg_15790 <= mul_ln1352_159_fu_8341_p2;
        mul_ln1352_15_reg_15430 <= mul_ln1352_15_fu_7693_p2;
        mul_ln1352_161_reg_15795 <= mul_ln1352_161_fu_8350_p2;
        mul_ln1352_163_reg_15800 <= mul_ln1352_163_fu_8359_p2;
        mul_ln1352_165_reg_15805 <= mul_ln1352_165_fu_8368_p2;
        mul_ln1352_167_reg_15810 <= mul_ln1352_167_fu_8377_p2;
        mul_ln1352_169_reg_15815 <= mul_ln1352_169_fu_8386_p2;
        mul_ln1352_171_reg_15820 <= mul_ln1352_171_fu_8395_p2;
        mul_ln1352_173_reg_15825 <= mul_ln1352_173_fu_8404_p2;
        mul_ln1352_175_reg_15830 <= mul_ln1352_175_fu_8413_p2;
        mul_ln1352_177_reg_15835 <= mul_ln1352_177_fu_8422_p2;
        mul_ln1352_179_reg_15840 <= mul_ln1352_179_fu_8431_p2;
        mul_ln1352_17_reg_15435 <= mul_ln1352_17_fu_7702_p2;
        mul_ln1352_181_reg_15845 <= mul_ln1352_181_fu_8440_p2;
        mul_ln1352_183_reg_15850 <= mul_ln1352_183_fu_8449_p2;
        mul_ln1352_185_reg_15855 <= mul_ln1352_185_fu_8458_p2;
        mul_ln1352_187_reg_15860 <= mul_ln1352_187_fu_8467_p2;
        mul_ln1352_189_reg_15865 <= mul_ln1352_189_fu_8476_p2;
        mul_ln1352_191_reg_15870 <= mul_ln1352_191_fu_8485_p2;
        mul_ln1352_193_reg_15875 <= mul_ln1352_193_fu_8494_p2;
        mul_ln1352_195_reg_15880 <= mul_ln1352_195_fu_8503_p2;
        mul_ln1352_197_reg_15885 <= mul_ln1352_197_fu_8512_p2;
        mul_ln1352_199_reg_15890 <= mul_ln1352_199_fu_8521_p2;
        mul_ln1352_19_reg_15440 <= mul_ln1352_19_fu_7711_p2;
        mul_ln1352_1_reg_15395 <= mul_ln1352_1_fu_7609_p2;
        mul_ln1352_201_reg_15895 <= mul_ln1352_201_fu_8530_p2;
        mul_ln1352_203_reg_15900 <= mul_ln1352_203_fu_8539_p2;
        mul_ln1352_205_reg_15905 <= mul_ln1352_205_fu_8548_p2;
        mul_ln1352_207_reg_15910 <= mul_ln1352_207_fu_8557_p2;
        mul_ln1352_209_reg_15915 <= mul_ln1352_209_fu_8566_p2;
        mul_ln1352_211_reg_15920 <= mul_ln1352_211_fu_8575_p2;
        mul_ln1352_213_reg_15925 <= mul_ln1352_213_fu_8584_p2;
        mul_ln1352_215_reg_15930 <= mul_ln1352_215_fu_8593_p2;
        mul_ln1352_217_reg_15935 <= mul_ln1352_217_fu_8602_p2;
        mul_ln1352_219_reg_15940 <= mul_ln1352_219_fu_8611_p2;
        mul_ln1352_21_reg_15445 <= mul_ln1352_21_fu_7720_p2;
        mul_ln1352_221_reg_15945 <= mul_ln1352_221_fu_8620_p2;
        mul_ln1352_223_reg_15950 <= mul_ln1352_223_fu_8629_p2;
        mul_ln1352_225_reg_15955 <= mul_ln1352_225_fu_8638_p2;
        mul_ln1352_227_reg_15960 <= mul_ln1352_227_fu_8647_p2;
        mul_ln1352_229_reg_15965 <= mul_ln1352_229_fu_8656_p2;
        mul_ln1352_231_reg_15970 <= mul_ln1352_231_fu_8665_p2;
        mul_ln1352_233_reg_15975 <= mul_ln1352_233_fu_8674_p2;
        mul_ln1352_235_reg_15980 <= mul_ln1352_235_fu_8683_p2;
        mul_ln1352_237_reg_15985 <= mul_ln1352_237_fu_8692_p2;
        mul_ln1352_239_reg_15990 <= mul_ln1352_239_fu_8701_p2;
        mul_ln1352_23_reg_15450 <= mul_ln1352_23_fu_7729_p2;
        mul_ln1352_241_reg_15995 <= mul_ln1352_241_fu_8710_p2;
        mul_ln1352_243_reg_16000 <= mul_ln1352_243_fu_8719_p2;
        mul_ln1352_245_reg_16005 <= mul_ln1352_245_fu_8728_p2;
        mul_ln1352_247_reg_16010 <= mul_ln1352_247_fu_8737_p2;
        mul_ln1352_249_reg_16015 <= mul_ln1352_249_fu_8746_p2;
        mul_ln1352_251_reg_16020 <= mul_ln1352_251_fu_8755_p2;
        mul_ln1352_253_reg_16025 <= mul_ln1352_253_fu_8764_p2;
        mul_ln1352_255_reg_16030 <= mul_ln1352_255_fu_8773_p2;
        mul_ln1352_25_reg_15455 <= mul_ln1352_25_fu_7738_p2;
        mul_ln1352_27_reg_15460 <= mul_ln1352_27_fu_7747_p2;
        mul_ln1352_29_reg_15465 <= mul_ln1352_29_fu_7756_p2;
        mul_ln1352_31_reg_15470 <= mul_ln1352_31_fu_7765_p2;
        mul_ln1352_33_reg_15475 <= mul_ln1352_33_fu_7774_p2;
        mul_ln1352_35_reg_15480 <= mul_ln1352_35_fu_7783_p2;
        mul_ln1352_37_reg_15485 <= mul_ln1352_37_fu_7792_p2;
        mul_ln1352_39_reg_15490 <= mul_ln1352_39_fu_7801_p2;
        mul_ln1352_3_reg_15400 <= mul_ln1352_3_fu_7621_p2;
        mul_ln1352_41_reg_15495 <= mul_ln1352_41_fu_7810_p2;
        mul_ln1352_43_reg_15500 <= mul_ln1352_43_fu_7819_p2;
        mul_ln1352_45_reg_15505 <= mul_ln1352_45_fu_7828_p2;
        mul_ln1352_47_reg_15510 <= mul_ln1352_47_fu_7837_p2;
        mul_ln1352_49_reg_15515 <= mul_ln1352_49_fu_7846_p2;
        mul_ln1352_51_reg_15520 <= mul_ln1352_51_fu_7855_p2;
        mul_ln1352_53_reg_15525 <= mul_ln1352_53_fu_7864_p2;
        mul_ln1352_55_reg_15530 <= mul_ln1352_55_fu_7873_p2;
        mul_ln1352_57_reg_15535 <= mul_ln1352_57_fu_7882_p2;
        mul_ln1352_59_reg_15540 <= mul_ln1352_59_fu_7891_p2;
        mul_ln1352_5_reg_15405 <= mul_ln1352_5_fu_7633_p2;
        mul_ln1352_61_reg_15545 <= mul_ln1352_61_fu_7900_p2;
        mul_ln1352_63_reg_15550 <= mul_ln1352_63_fu_7909_p2;
        mul_ln1352_65_reg_15555 <= mul_ln1352_65_fu_7918_p2;
        mul_ln1352_67_reg_15560 <= mul_ln1352_67_fu_7927_p2;
        mul_ln1352_69_reg_15565 <= mul_ln1352_69_fu_7936_p2;
        mul_ln1352_71_reg_15570 <= mul_ln1352_71_fu_7945_p2;
        mul_ln1352_73_reg_15575 <= mul_ln1352_73_fu_7954_p2;
        mul_ln1352_75_reg_15580 <= mul_ln1352_75_fu_7963_p2;
        mul_ln1352_77_reg_15585 <= mul_ln1352_77_fu_7972_p2;
        mul_ln1352_79_reg_15590 <= mul_ln1352_79_fu_7981_p2;
        mul_ln1352_7_reg_15410 <= mul_ln1352_7_fu_7645_p2;
        mul_ln1352_81_reg_15595 <= mul_ln1352_81_fu_7990_p2;
        mul_ln1352_83_reg_15600 <= mul_ln1352_83_fu_7999_p2;
        mul_ln1352_85_reg_15605 <= mul_ln1352_85_fu_8008_p2;
        mul_ln1352_87_reg_15610 <= mul_ln1352_87_fu_8017_p2;
        mul_ln1352_89_reg_15615 <= mul_ln1352_89_fu_8026_p2;
        mul_ln1352_91_reg_15620 <= mul_ln1352_91_fu_8035_p2;
        mul_ln1352_93_reg_15625 <= mul_ln1352_93_fu_8044_p2;
        mul_ln1352_95_reg_15630 <= mul_ln1352_95_fu_8053_p2;
        mul_ln1352_97_reg_15635 <= mul_ln1352_97_fu_8062_p2;
        mul_ln1352_99_reg_15640 <= mul_ln1352_99_fu_8071_p2;
        mul_ln1352_9_reg_15415 <= mul_ln1352_9_fu_7657_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        mul_ln240_1_reg_13914 <= grp_fu_4628_p2;
        tmp_11_reg_13864 <= tmp_V_reg_12779[32'd7];
        zext_ln262_1_reg_13859[13 : 0] <= zext_ln262_1_fu_4638_p1[13 : 0];
        zext_ln262_reg_13852[12 : 0] <= zext_ln262_fu_4634_p1[12 : 0];
        zext_ln700_2_reg_13884[10 : 0] <= zext_ln700_2_fu_4649_p1[10 : 0];
        zext_ln700_3_reg_13889[10 : 0] <= zext_ln700_3_fu_4653_p1[10 : 0];
        zext_ln700_4_reg_13899[10 : 0] <= zext_ln700_4_fu_4670_p1[10 : 0];
        zext_ln700_5_reg_13904[10 : 0] <= zext_ln700_5_fu_4674_p1[10 : 0];
        zext_ln700_6_reg_13909[9 : 0] <= zext_ln700_6_fu_4687_p1[9 : 0];
        zext_ln700_reg_13894[9 : 0] <= zext_ln700_fu_4666_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        mul_ln240_reg_13836 <= grp_fu_4615_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        mul_ln331_reg_12992 <= grp_fu_1890_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln343_reg_13229_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        o_tensor_0_0_V_fu_812 <= o_tensor_0_0_V_10_fu_2549_p3;
        o_tensor_0_1_V_fu_816 <= o_tensor_0_1_V_10_fu_2665_p3;
        o_tensor_0_2_V_fu_820 <= o_tensor_0_2_V_10_fu_2782_p3;
        o_tensor_0_3_V_fu_824 <= o_tensor_0_3_V_10_fu_2899_p3;
        o_tensor_0_4_V_fu_828 <= o_tensor_0_4_V_10_fu_3016_p3;
        o_tensor_0_5_V_fu_832 <= o_tensor_0_5_V_9_fu_3133_p3;
        o_tensor_0_6_V_fu_836 <= o_tensor_0_6_V_9_fu_3250_p3;
        o_tensor_0_7_V_fu_840 <= o_tensor_0_7_V_9_fu_3367_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln343_reg_13229_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        o_tensor_0_10_V_fu_852 <= o_tensor_0_10_V_9_fu_3902_p3;
        o_tensor_0_11_V_fu_856 <= o_tensor_0_11_V_9_fu_4019_p3;
        o_tensor_0_12_V_fu_860 <= o_tensor_0_12_V_9_fu_4136_p3;
        o_tensor_0_13_V_fu_864 <= o_tensor_0_13_V_9_fu_4253_p3;
        o_tensor_0_14_V_fu_868 <= o_tensor_0_14_V_9_fu_4370_p3;
        o_tensor_0_15_V_fu_872 <= o_tensor_0_15_V_9_fu_4487_p3;
        o_tensor_0_8_V_fu_844 <= o_tensor_0_8_V_9_fu_3668_p3;
        o_tensor_0_9_V_fu_848 <= o_tensor_0_9_V_9_fu_3785_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_12_reg_13020 == 1'd0) & (icmp_ln343_reg_13229_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_Result_11_4_1_reg_13312 <= {{acc_mem_V_q0[319:288]}};
        p_Result_11_4_reg_13307 <= {{acc_mem_V_q0[287:256]}};
        p_Result_11_5_1_reg_13322 <= {{acc_mem_V_q0[383:352]}};
        p_Result_11_5_reg_13317 <= {{acc_mem_V_q0[351:320]}};
        p_Result_11_6_1_reg_13332 <= {{acc_mem_V_q0[447:416]}};
        p_Result_11_6_reg_13327 <= {{acc_mem_V_q0[415:384]}};
        p_Result_11_7_1_reg_13342 <= {{acc_mem_V_q0[511:480]}};
        p_Result_11_7_reg_13337 <= {{acc_mem_V_q0[479:448]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (gemm_queue_V_V_TVALID_int == 1'b0) | ((s2g_dep_queue_V_TVALID_int == 1'b0) & (tmp_6_fu_1679_p3 == 1'd1)) | ((l2g_dep_queue_V_TVALID_int == 1'b0) & (tmp_4_fu_1671_p3 == 1'd1))) & (1'b1 == ap_CS_fsm_state1))) begin
        p_cast37_reg_12774[28 : 0] <= p_cast37_fu_1643_p1[28 : 0];
        tmp_V_reg_12779 <= gemm_queue_V_V_TDATA_int;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) | (gemm_queue_V_V_TVALID_int == 1'b0) | ((s2g_dep_queue_V_TVALID_int == 1'b0) & (tmp_6_fu_1679_p3 == 1'd1)) | ((l2g_dep_queue_V_TVALID_int == 1'b0) & (tmp_4_fu_1671_p3 == 1'd1))) & (icmp_ln493_fu_1703_p2 == 1'd1) & (icmp_ln473_fu_1697_p2 == 1'd0) & (icmp_ln470_fu_1691_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)) | (~((ap_start == 1'b0) | (gemm_queue_V_V_TVALID_int == 1'b0) | ((s2g_dep_queue_V_TVALID_int == 1'b0) & (tmp_6_fu_1679_p3 == 1'd1)) | ((l2g_dep_queue_V_TVALID_int == 1'b0) & (tmp_4_fu_1671_p3 == 1'd1))) & (icmp_ln495_fu_1709_p2 == 1'd1) & (icmp_ln493_fu_1703_p2 == 1'd0) & (icmp_ln473_fu_1697_p2 == 1'd0) & (icmp_ln470_fu_1691_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        reg_1561 <= {{gemm_queue_V_V_TDATA_int[20:8]}};
        reg_1565 <= {{gemm_queue_V_V_TDATA_int[34:21]}};
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) | (gemm_queue_V_V_TVALID_int == 1'b0) | ((s2g_dep_queue_V_TVALID_int == 1'b0) & (tmp_6_fu_1679_p3 == 1'd1)) | ((l2g_dep_queue_V_TVALID_int == 1'b0) & (tmp_4_fu_1671_p3 == 1'd1))) & (icmp_ln482_fu_1827_p2 == 1'd1) & (icmp_ln473_fu_1697_p2 == 1'd1) & (icmp_ln477_fu_1821_p2 == 1'd0) & (icmp_ln470_fu_1691_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)) | ((uop_port_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state51)))) begin
        reg_1569 <= {{grp_fu_1337_p1[95:80]}};
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln253_reg_13919_pp1_iter7_reg == 1'd0) & (ap_enable_reg_pp1_iter8 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln343_reg_13229_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reg_1573 <= {{acc_mem_V_q1[63:32]}};
        reg_1577 <= {{acc_mem_V_q1[95:64]}};
        reg_1581 <= {{acc_mem_V_q1[127:96]}};
        reg_1585 <= {{acc_mem_V_q1[159:128]}};
        reg_1589 <= {{acc_mem_V_q1[191:160]}};
        reg_1593 <= {{acc_mem_V_q1[223:192]}};
        reg_1597 <= {{acc_mem_V_q1[255:224]}};
        reg_1601 <= {{acc_mem_V_q1[287:256]}};
        reg_1605 <= {{acc_mem_V_q1[319:288]}};
        reg_1609 <= {{acc_mem_V_q1[351:320]}};
        reg_1613 <= {{acc_mem_V_q1[383:352]}};
        reg_1617 <= {{acc_mem_V_q1[415:384]}};
        reg_1621 <= {{acc_mem_V_q1[447:416]}};
        reg_1625 <= {{acc_mem_V_q1[479:448]}};
        reg_1629 <= {{acc_mem_V_q1[511:480]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln253_reg_13919 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        select_ln259_1_reg_13983 <= select_ln259_1_fu_4825_p3;
        select_ln259_2_reg_13989 <= select_ln259_2_fu_4833_p3;
        select_ln259_reg_13977 <= select_ln259_fu_4817_p3;
        upc_1_reg_13995 <= upc_1_fu_4841_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln253_reg_13919 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        select_ln262_reg_13972 <= select_ln262_fu_4810_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln343_fu_1993_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln343_1_reg_13243 <= select_ln343_1_fu_2062_p3;
        select_ln343_reg_13238 <= select_ln343_fu_2054_p3;
        select_ln348_1_reg_13260 <= select_ln348_1_fu_2095_p3;
        select_ln348_2_reg_13266 <= select_ln348_2_fu_2109_p3;
        select_ln348_reg_13254 <= select_ln348_fu_2087_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln343_fu_1993_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln350_reg_13248 <= select_ln350_fu_2080_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        shl_ln89_reg_16470[15 : 3] <= shl_ln89_fu_11386_p2[15 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (gemm_queue_V_V_TVALID_int == 1'b0) | ((s2g_dep_queue_V_TVALID_int == 1'b0) & (tmp_6_fu_1679_p3 == 1'd1)) | ((l2g_dep_queue_V_TVALID_int == 1'b0) & (tmp_4_fu_1671_p3 == 1'd1))) & (icmp_ln482_fu_1827_p2 == 1'd1) & (icmp_ln473_fu_1697_p2 == 1'd1) & (icmp_ln477_fu_1821_p2 == 1'd0) & (icmp_ln470_fu_1691_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        shl_ln_reg_12966[18 : 3] <= shl_ln_fu_1847_p3[18 : 3];
        trunc_ln304_1_reg_12956 <= {{gemm_queue_V_V_TDATA_int[79:64]}};
        zext_ln700_1_reg_12961[15 : 0] <= zext_ln700_1_fu_1843_p1[15 : 0];
        zext_ln89_reg_12971[18 : 3] <= zext_ln89_fu_1855_p1[18 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (1'b0 == ap_block_state19_io))) begin
        tmp_35_reg_13822 <= tmp_V_reg_12779[32'd5];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state63_io) & (1'b1 == ap_CS_fsm_state63))) begin
        tmp_36_reg_16573 <= tmp_V_reg_12779[32'd6];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        trunc_ln4_reg_16549 <= {{tmp_V_reg_12779[23:9]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln480_reg_16554 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        uop_port_addr_read_reg_16568 <= uop_port_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (gemm_queue_V_V_TVALID_int == 1'b0) | ((s2g_dep_queue_V_TVALID_int == 1'b0) & (tmp_6_fu_1679_p3 == 1'd1)) | ((l2g_dep_queue_V_TVALID_int == 1'b0) & (tmp_4_fu_1671_p3 == 1'd1))) & (icmp_ln477_fu_1821_p2 == 1'd1) & (icmp_ln473_fu_1697_p2 == 1'd1) & (icmp_ln470_fu_1691_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        uop_port_addr_reg_12976 <= zext_ln480_2_fu_1869_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln343_reg_13229 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        upc_3_reg_13276 <= upc_3_fu_2121_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln482_reg_12952 == 1'd1) & (1'b1 == ap_CS_fsm_state38))) begin
        y_reg_16454 <= y_fu_11353_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter9 == 1'b1))) begin
        acc_mem_V_address0 = acc_mem_V_addr_1_reg_16040_pp1_iter8_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        acc_mem_V_address0 = acc_mem_V_addr_3_reg_13301_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        acc_mem_V_address0 = zext_ln544_3_fu_2148_p1;
    end else begin
        acc_mem_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        acc_mem_V_address1 = zext_ln89_1_fu_11540_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter7 == 1'b1))) begin
        acc_mem_V_address1 = zext_ln544_2_fu_8779_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        acc_mem_V_address1 = zext_ln544_4_fu_2152_p1;
    end else begin
        acc_mem_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter9 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        acc_mem_V_ce0 = 1'b1;
    end else begin
        acc_mem_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter7 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1)))) begin
        acc_mem_V_ce1 = 1'b1;
    end else begin
        acc_mem_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter9 == 1'b1))) begin
        acc_mem_V_d0 = tmp_8_fu_11274_p17;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        acc_mem_V_d0 = tmp_14_fu_4576_p17;
    end else begin
        acc_mem_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln253_reg_13919_pp1_iter8_reg == 1'd0) & (ap_enable_reg_pp1_iter9 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln343_reg_13229_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        acc_mem_V_we0 = 64'd18446744073709551615;
    end else begin
        acc_mem_V_we0 = 64'd0;
    end
end

always @ (*) begin
    if (((icmp_ln89_reg_16475_pp2_iter2_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        acc_mem_V_we1 = shl_ln89_4_reg_16529;
    end else begin
        acc_mem_V_we1 = 64'd0;
    end
end

always @ (*) begin
    if ((icmp_ln343_fu_1993_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state10 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state10 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln253_fu_4691_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state28 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state28 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln89_fu_11392_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state46 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state46 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln480_fu_11590_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state58 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state58 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state64_io) | (regslice_both_g2s_dep_queue_V_U_apdone_blk == 1'b1) | (regslice_both_g2l_dep_queue_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state64))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter8 == 1'b0) & (ap_enable_reg_pp1_iter9 == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln343_reg_13229 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_dst_offset_in_0_i175_phi_fu_1136_p4 = select_ln348_reg_13254;
    end else begin
        ap_phi_mux_dst_offset_in_0_i175_phi_fu_1136_p4 = dst_offset_in_0_i175_reg_1132;
    end
end

always @ (*) begin
    if (((icmp_ln253_reg_13919_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        ap_phi_mux_dst_offset_in_0_i_phi_fu_1222_p4 = select_ln259_reg_13977;
    end else begin
        ap_phi_mux_dst_offset_in_0_i_phi_fu_1222_p4 = dst_offset_in_0_i_reg_1218;
    end
end

always @ (*) begin
    if (((icmp_ln343_reg_13229 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_dst_offset_in_V_1_phi_fu_1103_p4 = select_ln343_reg_13238;
    end else begin
        ap_phi_mux_dst_offset_in_V_1_phi_fu_1103_p4 = dst_offset_in_V_1_reg_1099;
    end
end

always @ (*) begin
    if (((icmp_ln343_reg_13229 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_indvar_flatten25_phi_fu_1125_p4 = select_ln348_2_reg_13266;
    end else begin
        ap_phi_mux_indvar_flatten25_phi_fu_1125_p4 = indvar_flatten25_reg_1121;
    end
end

always @ (*) begin
    if (((icmp_ln343_reg_13229 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_indvar_flatten71_phi_fu_1092_p4 = add_ln343_reg_13233;
    end else begin
        ap_phi_mux_indvar_flatten71_phi_fu_1092_p4 = indvar_flatten71_reg_1088;
    end
end

always @ (*) begin
    if (((icmp_ln343_reg_13229 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_src_offset_in_0_i176_phi_fu_1147_p4 = select_ln348_1_reg_13260;
    end else begin
        ap_phi_mux_src_offset_in_0_i176_phi_fu_1147_p4 = src_offset_in_0_i176_reg_1143;
    end
end

always @ (*) begin
    if (((icmp_ln253_reg_13919_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        ap_phi_mux_src_offset_in_0_i_phi_fu_1234_p4 = select_ln259_1_reg_13983;
    end else begin
        ap_phi_mux_src_offset_in_0_i_phi_fu_1234_p4 = src_offset_in_0_i_reg_1230;
    end
end

always @ (*) begin
    if (((icmp_ln343_reg_13229 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_src_offset_in_V_1_phi_fu_1114_p4 = select_ln343_1_reg_13243;
    end else begin
        ap_phi_mux_src_offset_in_V_1_phi_fu_1114_p4 = src_offset_in_V_1_reg_1110;
    end
end

always @ (*) begin
    if (((icmp_ln343_reg_13229 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_upc_0_i180_phi_fu_1157_p4 = upc_3_reg_13276;
    end else begin
        ap_phi_mux_upc_0_i180_phi_fu_1157_p4 = upc_0_i180_reg_1154;
    end
end

always @ (*) begin
    if (((icmp_ln253_reg_13919_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        ap_phi_mux_upc_0_i_phi_fu_1257_p4 = upc_1_reg_13995;
    end else begin
        ap_phi_mux_upc_0_i_phi_fu_1257_p4 = upc_0_i_reg_1254;
    end
end

always @ (*) begin
    if (((icmp_ln253_reg_13919_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        ap_phi_mux_wgt_offset_in_0_i_phi_fu_1246_p4 = select_ln259_2_reg_13989;
    end else begin
        ap_phi_mux_wgt_offset_in_0_i_phi_fu_1246_p4 = wgt_offset_in_0_i_reg_1242;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state64_io) | (regslice_both_g2s_dep_queue_V_U_apdone_blk == 1'b1) | (regslice_both_g2l_dep_queue_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state64))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((data_port_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state39))) begin
        data_port_ARVALID = 1'b1;
    end else begin
        data_port_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln89_reg_16475 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        data_port_RREADY = 1'b1;
    end else begin
        data_port_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        data_port_blk_n_AR = m_axi_data_port_ARREADY;
    end else begin
        data_port_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (icmp_ln89_reg_16475 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        data_port_blk_n_R = m_axi_data_port_RVALID;
    end else begin
        data_port_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        done_o = 32'd1;
    end else if ((~((ap_start == 1'b0) | (gemm_queue_V_V_TVALID_int == 1'b0) | ((s2g_dep_queue_V_TVALID_int == 1'b0) & (tmp_6_fu_1679_p3 == 1'd1)) | ((l2g_dep_queue_V_TVALID_int == 1'b0) & (tmp_4_fu_1671_p3 == 1'd1))) & (1'b1 == ap_CS_fsm_state1))) begin
        done_o = 32'd0;
    end else begin
        done_o = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state62) | (~((ap_start == 1'b0) | (gemm_queue_V_V_TVALID_int == 1'b0) | ((s2g_dep_queue_V_TVALID_int == 1'b0) & (tmp_6_fu_1679_p3 == 1'd1)) | ((l2g_dep_queue_V_TVALID_int == 1'b0) & (tmp_4_fu_1671_p3 == 1'd1))) & (1'b1 == ap_CS_fsm_state1)))) begin
        done_o_ap_vld = 1'b1;
    end else begin
        done_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_35_reg_13822 == 1'd1) & (1'b1 == ap_CS_fsm_state63)) | ((tmp_35_fu_4597_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state19)))) begin
        g2l_dep_queue_V_TDATA_blk_n = g2l_dep_queue_V_TREADY_int;
    end else begin
        g2l_dep_queue_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_35_fu_4597_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state19) & (1'b0 == ap_block_state19_io))) begin
        g2l_dep_queue_V_TVALID_int = 1'b1;
    end else begin
        g2l_dep_queue_V_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_36_reg_16573 == 1'd1) & (1'b1 == ap_CS_fsm_state64)) | ((tmp_36_fu_11615_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state63)))) begin
        g2s_dep_queue_V_TDATA_blk_n = g2s_dep_queue_V_TREADY_int;
    end else begin
        g2s_dep_queue_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_36_fu_11615_p3 == 1'd1) & (1'b0 == ap_block_state63_io) & (1'b1 == ap_CS_fsm_state63))) begin
        g2s_dep_queue_V_TVALID_int = 1'b1;
    end else begin
        g2s_dep_queue_V_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        gemm_queue_V_V_TDATA_blk_n = gemm_queue_V_V_TVALID_int;
    end else begin
        gemm_queue_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((gemm_queue_V_V_TVALID == 1'b1) & (regslice_both_gemm_queue_V_V_U_ack_in == 1'b1))) begin
        gemm_queue_V_V_TREADY = 1'b1;
    end else begin
        gemm_queue_V_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (gemm_queue_V_V_TVALID_int == 1'b0) | ((s2g_dep_queue_V_TVALID_int == 1'b0) & (tmp_6_fu_1679_p3 == 1'd1)) | ((l2g_dep_queue_V_TVALID_int == 1'b0) & (tmp_4_fu_1671_p3 == 1'd1))) & (1'b1 == ap_CS_fsm_state1))) begin
        gemm_queue_V_V_TREADY_int = 1'b1;
    end else begin
        gemm_queue_V_V_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        grp_fu_1337_p1 = tmp_V_reg_12779;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_1337_p1 = gemm_queue_V_V_TDATA_int;
    end else begin
        grp_fu_1337_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        inp_mem_V_EN_A = 1'b1;
    end else begin
        inp_mem_V_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (tmp_4_fu_1671_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        l2g_dep_queue_V_TDATA_blk_n = l2g_dep_queue_V_TVALID_int;
    end else begin
        l2g_dep_queue_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((l2g_dep_queue_V_TVALID == 1'b1) & (regslice_both_l2g_dep_queue_V_U_ack_in == 1'b1))) begin
        l2g_dep_queue_V_TREADY = 1'b1;
    end else begin
        l2g_dep_queue_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (gemm_queue_V_V_TVALID_int == 1'b0) | ((s2g_dep_queue_V_TVALID_int == 1'b0) & (tmp_6_fu_1679_p3 == 1'd1)) | ((l2g_dep_queue_V_TVALID_int == 1'b0) & (tmp_4_fu_1671_p3 == 1'd1))) & (tmp_4_fu_1671_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        l2g_dep_queue_V_TREADY_int = 1'b1;
    end else begin
        l2g_dep_queue_V_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter9 == 1'b1))) begin
        out_mem_V_Addr_A_orig = zext_ln544_2_reg_16035_pp1_iter8_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        out_mem_V_Addr_A_orig = zext_ln544_4_reg_13296_pp0_iter2_reg;
    end else begin
        out_mem_V_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter9 == 1'b1))) begin
        out_mem_V_Din_A = tmp_9_fu_11311_p17;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        out_mem_V_Din_A = tmp_15_fu_4555_p17;
    end else begin
        out_mem_V_Din_A = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter9 == 1'b1)))) begin
        out_mem_V_EN_A = 1'b1;
    end else begin
        out_mem_V_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln343_reg_13229_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln253_reg_13919_pp1_iter8_reg == 1'd0) & (ap_enable_reg_pp1_iter9 == 1'b1)))) begin
        out_mem_V_WEN_A = 16'd65535;
    end else begin
        out_mem_V_WEN_A = 16'd0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (tmp_6_fu_1679_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        s2g_dep_queue_V_TDATA_blk_n = s2g_dep_queue_V_TVALID_int;
    end else begin
        s2g_dep_queue_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((s2g_dep_queue_V_TVALID == 1'b1) & (regslice_both_s2g_dep_queue_V_U_ack_in == 1'b1))) begin
        s2g_dep_queue_V_TREADY = 1'b1;
    end else begin
        s2g_dep_queue_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (gemm_queue_V_V_TVALID_int == 1'b0) | ((s2g_dep_queue_V_TVALID_int == 1'b0) & (tmp_6_fu_1679_p3 == 1'd1)) | ((l2g_dep_queue_V_TVALID_int == 1'b0) & (tmp_4_fu_1671_p3 == 1'd1))) & (tmp_6_fu_1679_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        s2g_dep_queue_V_TREADY_int = 1'b1;
    end else begin
        s2g_dep_queue_V_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        uop_mem_V_address0 = zext_ln480_3_fu_11611_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        uop_mem_V_address0 = sext_ln265_fu_4847_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        uop_mem_V_address0 = sext_ln353_fu_2117_p1;
    end else begin
        uop_mem_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1)))) begin
        uop_mem_V_ce0 = 1'b1;
    end else begin
        uop_mem_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln480_reg_16554_pp3_iter1_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        uop_mem_V_we0 = 1'b1;
    end else begin
        uop_mem_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((uop_port_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state51))) begin
        uop_port_ARVALID = 1'b1;
    end else begin
        uop_port_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln480_reg_16554 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        uop_port_RREADY = 1'b1;
    end else begin
        uop_port_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        uop_port_blk_n_AR = m_axi_uop_port_ARREADY;
    end else begin
        uop_port_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln480_reg_16554 == 1'd0) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        uop_port_blk_n_R = m_axi_uop_port_RVALID;
    end else begin
        uop_port_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        wgt_mem_0_V_EN_A = 1'b1;
    end else begin
        wgt_mem_0_V_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        wgt_mem_1_V_EN_A = 1'b1;
    end else begin
        wgt_mem_1_V_EN_A = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (gemm_queue_V_V_TVALID_int == 1'b0) | ((s2g_dep_queue_V_TVALID_int == 1'b0) & (tmp_6_fu_1679_p3 == 1'd1)) | ((l2g_dep_queue_V_TVALID_int == 1'b0) & (tmp_4_fu_1671_p3 == 1'd1))) & (icmp_ln473_fu_1697_p2 == 1'd1) & (icmp_ln477_fu_1821_p2 == 1'd0) & (icmp_ln470_fu_1691_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else if ((~((ap_start == 1'b0) | (gemm_queue_V_V_TVALID_int == 1'b0) | ((s2g_dep_queue_V_TVALID_int == 1'b0) & (tmp_6_fu_1679_p3 == 1'd1)) | ((l2g_dep_queue_V_TVALID_int == 1'b0) & (tmp_4_fu_1671_p3 == 1'd1))) & (icmp_ln477_fu_1821_p2 == 1'd1) & (icmp_ln473_fu_1697_p2 == 1'd1) & (icmp_ln470_fu_1691_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end else if ((~((ap_start == 1'b0) | (gemm_queue_V_V_TVALID_int == 1'b0) | ((s2g_dep_queue_V_TVALID_int == 1'b0) & (tmp_6_fu_1679_p3 == 1'd1)) | ((l2g_dep_queue_V_TVALID_int == 1'b0) & (tmp_4_fu_1671_p3 == 1'd1))) & (icmp_ln495_fu_1709_p2 == 1'd0) & (icmp_ln493_fu_1703_p2 == 1'd0) & (icmp_ln473_fu_1697_p2 == 1'd0) & (icmp_ln470_fu_1691_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else if ((~((ap_start == 1'b0) | (gemm_queue_V_V_TVALID_int == 1'b0) | ((s2g_dep_queue_V_TVALID_int == 1'b0) & (tmp_6_fu_1679_p3 == 1'd1)) | ((l2g_dep_queue_V_TVALID_int == 1'b0) & (tmp_4_fu_1671_p3 == 1'd1))) & (icmp_ln495_fu_1709_p2 == 1'd1) & (icmp_ln493_fu_1703_p2 == 1'd0) & (icmp_ln473_fu_1697_p2 == 1'd0) & (icmp_ln470_fu_1691_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if ((~((ap_start == 1'b0) | (gemm_queue_V_V_TVALID_int == 1'b0) | ((s2g_dep_queue_V_TVALID_int == 1'b0) & (tmp_6_fu_1679_p3 == 1'd1)) | ((l2g_dep_queue_V_TVALID_int == 1'b0) & (tmp_4_fu_1671_p3 == 1'd1))) & (icmp_ln493_fu_1703_p2 == 1'd1) & (icmp_ln473_fu_1697_p2 == 1'd0) & (icmp_ln470_fu_1691_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else if ((~((ap_start == 1'b0) | (gemm_queue_V_V_TVALID_int == 1'b0) | ((s2g_dep_queue_V_TVALID_int == 1'b0) & (tmp_6_fu_1679_p3 == 1'd1)) | ((l2g_dep_queue_V_TVALID_int == 1'b0) & (tmp_4_fu_1671_p3 == 1'd1))) & (icmp_ln470_fu_1691_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln343_fu_1993_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if ((((icmp_ln343_fu_1993_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((1'b1 == ap_CS_fsm_state19) & (1'b0 == ap_block_state19_io))) begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((icmp_ln253_fu_4691_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0)) & ~((ap_enable_reg_pp1_iter8 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter9 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter8 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter9 == 1'b1)) | ((icmp_ln253_fu_4691_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state38 : begin
            if (((1'b1 == ap_CS_fsm_state38) & ((icmp_ln86_fu_11348_p2 == 1'd1) | (icmp_ln482_reg_12952 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        ap_ST_fsm_state39 : begin
            if (((data_port_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state39))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((icmp_ln89_fu_11392_p2 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter0 == 1'b1)) & ~((ap_enable_reg_pp2_iter2 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter3 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((ap_enable_reg_pp2_iter2 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter3 == 1'b1)) | ((icmp_ln89_fu_11392_p2 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state51 : begin
            if (((uop_port_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state51))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((icmp_ln480_fu_11590_p2 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter0 == 1'b1)) & ~((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter2 == 1'b1)) | ((icmp_ln480_fu_11590_p2 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state63 : begin
            if (((1'b0 == ap_block_state63_io) & (1'b1 == ap_CS_fsm_state63))) begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end
        end
        ap_ST_fsm_state64 : begin
            if ((~((1'b1 == ap_block_state64_io) | (regslice_both_g2s_dep_queue_V_U_apdone_blk == 1'b1) | (regslice_both_g2l_dep_queue_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state64))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_tensor_0_0_V_1_fu_10963_p3 = ((tmp_11_reg_13864[0:0] === 1'b1) ? 32'd0 : add_ln700_15_fu_10958_p2);

assign a_tensor_0_0_V_fu_10343_p1 = acc_mem_V_q1[31:0];

assign a_tensor_0_11_V_1_fu_11183_p3 = ((tmp_11_reg_13864[0:0] === 1'b1) ? 32'd0 : add_ln700_191_fu_11177_p2);

assign a_tensor_0_12_V_1_fu_11203_p3 = ((tmp_11_reg_13864[0:0] === 1'b1) ? 32'd0 : add_ln700_207_fu_11197_p2);

assign a_tensor_0_13_V_1_fu_11223_p3 = ((tmp_11_reg_13864[0:0] === 1'b1) ? 32'd0 : add_ln700_223_fu_11217_p2);

assign a_tensor_0_14_V_1_fu_11243_p3 = ((tmp_11_reg_13864[0:0] === 1'b1) ? 32'd0 : add_ln700_239_fu_11237_p2);

assign a_tensor_0_15_V_1_fu_11263_p3 = ((tmp_11_reg_13864[0:0] === 1'b1) ? 32'd0 : add_ln700_255_fu_11257_p2);

assign a_tensor_0_1_V_1_fu_10983_p3 = ((tmp_11_reg_13864[0:0] === 1'b1) ? 32'd0 : add_ln700_31_fu_10977_p2);

assign a_tensor_0_2_V_1_fu_11003_p3 = ((tmp_11_reg_13864[0:0] === 1'b1) ? 32'd0 : add_ln700_47_fu_10997_p2);

assign a_tensor_0_3_V_1_fu_11023_p3 = ((tmp_11_reg_13864[0:0] === 1'b1) ? 32'd0 : add_ln700_63_fu_11017_p2);

assign a_tensor_0_4_V_1_fu_11043_p3 = ((tmp_11_reg_13864[0:0] === 1'b1) ? 32'd0 : add_ln700_79_fu_11037_p2);

assign acc_mem_V_d1 = (select_ln89_3_fu_11553_p3 & and_ln89_reg_16524);

assign add_ln253_fu_4696_p2 = (indvar_flatten15_reg_1163 + 60'd1);

assign add_ln259_fu_4746_p2 = (46'd1 + indvar_flatten_reg_1207);

assign add_ln343_fu_1998_p2 = (ap_phi_mux_indvar_flatten71_phi_fu_1092_p4 + 60'd1);

assign add_ln348_fu_2103_p2 = (46'd1 + ap_phi_mux_indvar_flatten25_phi_fu_1125_p4);

assign add_ln480_1_fu_1863_p2 = (zext_ln480_fu_1859_p1 + p_cast_fu_1657_p1);

assign add_ln480_2_fu_11606_p2 = (trunc_ln480_fu_11602_p1 + trunc_ln4_reg_16549);

assign add_ln480_fu_11596_p2 = (phi_ln480_reg_1306 + 16'd1);

assign add_ln700_101_fu_9449_p2 = ($signed(sext_ln700_94_fu_9443_p1) + $signed(sext_ln700_95_fu_9446_p1));

assign add_ln700_102_fu_10581_p2 = ($signed(sext_ln700_93_fu_10575_p1) + $signed(sext_ln700_96_fu_10578_p1));

assign add_ln700_105_fu_9461_p2 = ($signed(sext_ln700_98_fu_9455_p1) + $signed(sext_ln700_99_fu_9458_p1));

assign add_ln700_108_fu_9473_p2 = ($signed(sext_ln700_101_fu_9467_p1) + $signed(sext_ln700_102_fu_9470_p1));

assign add_ln700_109_fu_10597_p2 = ($signed(sext_ln700_100_fu_10591_p1) + $signed(sext_ln700_103_fu_10594_p1));

assign add_ln700_110_fu_10607_p2 = ($signed(sext_ln700_97_fu_10587_p1) + $signed(sext_ln700_104_fu_10603_p1));

assign add_ln700_111_fu_11077_p2 = ($signed(sext_ln68_6_fu_11074_p1) + $signed(reg_1593));

assign add_ln700_114_fu_9533_p2 = ($signed(sext_ln700_106_fu_9527_p1) + $signed(sext_ln700_107_fu_9530_p1));

assign add_ln700_117_fu_9545_p2 = ($signed(sext_ln700_109_fu_9539_p1) + $signed(sext_ln700_110_fu_9542_p1));

assign add_ln700_118_fu_10619_p2 = ($signed(sext_ln700_108_fu_10613_p1) + $signed(sext_ln700_111_fu_10616_p1));

assign add_ln700_121_fu_9557_p2 = ($signed(sext_ln700_113_fu_9551_p1) + $signed(sext_ln700_114_fu_9554_p1));

assign add_ln700_124_fu_9569_p2 = ($signed(sext_ln700_116_fu_9563_p1) + $signed(sext_ln700_117_fu_9566_p1));

assign add_ln700_125_fu_10635_p2 = ($signed(sext_ln700_115_fu_10629_p1) + $signed(sext_ln700_118_fu_10632_p1));

assign add_ln700_126_fu_10645_p2 = ($signed(sext_ln700_112_fu_10625_p1) + $signed(sext_ln700_119_fu_10641_p1));

assign add_ln700_127_fu_11097_p2 = ($signed(sext_ln68_7_fu_11094_p1) + $signed(reg_1597));

assign add_ln700_12_fu_8897_p2 = ($signed(sext_ln700_11_fu_8891_p1) + $signed(sext_ln700_12_fu_8894_p1));

assign add_ln700_130_fu_9629_p2 = ($signed(sext_ln700_121_fu_9623_p1) + $signed(sext_ln700_122_fu_9626_p1));

assign add_ln700_133_fu_9641_p2 = ($signed(sext_ln700_124_fu_9635_p1) + $signed(sext_ln700_125_fu_9638_p1));

assign add_ln700_134_fu_10657_p2 = ($signed(sext_ln700_123_fu_10651_p1) + $signed(sext_ln700_126_fu_10654_p1));

assign add_ln700_137_fu_9653_p2 = ($signed(sext_ln700_128_fu_9647_p1) + $signed(sext_ln700_129_fu_9650_p1));

assign add_ln700_13_fu_10369_p2 = ($signed(sext_ln700_10_fu_10363_p1) + $signed(sext_ln700_13_fu_10366_p1));

assign add_ln700_140_fu_9665_p2 = ($signed(sext_ln700_131_fu_9659_p1) + $signed(sext_ln700_132_fu_9662_p1));

assign add_ln700_141_fu_10673_p2 = ($signed(sext_ln700_130_fu_10667_p1) + $signed(sext_ln700_133_fu_10670_p1));

assign add_ln700_142_fu_10683_p2 = ($signed(sext_ln700_127_fu_10663_p1) + $signed(sext_ln700_134_fu_10679_p1));

assign add_ln700_143_fu_11117_p2 = ($signed(sext_ln68_8_fu_11114_p1) + $signed(reg_1601));

assign add_ln700_146_fu_9725_p2 = ($signed(sext_ln700_136_fu_9719_p1) + $signed(sext_ln700_137_fu_9722_p1));

assign add_ln700_149_fu_9737_p2 = ($signed(sext_ln700_139_fu_9731_p1) + $signed(sext_ln700_140_fu_9734_p1));

assign add_ln700_14_fu_10379_p2 = ($signed(sext_ln700_7_fu_10359_p1) + $signed(sext_ln700_14_fu_10375_p1));

assign add_ln700_150_fu_10695_p2 = ($signed(sext_ln700_138_fu_10689_p1) + $signed(sext_ln700_141_fu_10692_p1));

assign add_ln700_153_fu_9749_p2 = ($signed(sext_ln700_143_fu_9743_p1) + $signed(sext_ln700_144_fu_9746_p1));

assign add_ln700_156_fu_9761_p2 = ($signed(sext_ln700_146_fu_9755_p1) + $signed(sext_ln700_147_fu_9758_p1));

assign add_ln700_157_fu_10711_p2 = ($signed(sext_ln700_145_fu_10705_p1) + $signed(sext_ln700_148_fu_10708_p1));

assign add_ln700_158_fu_10721_p2 = ($signed(sext_ln700_142_fu_10701_p1) + $signed(sext_ln700_149_fu_10717_p1));

assign add_ln700_159_fu_11137_p2 = ($signed(sext_ln68_9_fu_11134_p1) + $signed(reg_1605));

assign add_ln700_15_fu_10958_p2 = ($signed(sext_ln68_fu_10955_p1) + $signed(a_tensor_0_0_V_reg_16366));

assign add_ln700_162_fu_9821_p2 = ($signed(sext_ln700_151_fu_9815_p1) + $signed(sext_ln700_152_fu_9818_p1));

assign add_ln700_165_fu_9833_p2 = ($signed(sext_ln700_154_fu_9827_p1) + $signed(sext_ln700_155_fu_9830_p1));

assign add_ln700_166_fu_10733_p2 = ($signed(sext_ln700_153_fu_10727_p1) + $signed(sext_ln700_156_fu_10730_p1));

assign add_ln700_169_fu_9845_p2 = ($signed(sext_ln700_158_fu_9839_p1) + $signed(sext_ln700_159_fu_9842_p1));

assign add_ln700_172_fu_9857_p2 = ($signed(sext_ln700_161_fu_9851_p1) + $signed(sext_ln700_162_fu_9854_p1));

assign add_ln700_173_fu_10749_p2 = ($signed(sext_ln700_160_fu_10743_p1) + $signed(sext_ln700_163_fu_10746_p1));

assign add_ln700_174_fu_10759_p2 = ($signed(sext_ln700_157_fu_10739_p1) + $signed(sext_ln700_164_fu_10755_p1));

assign add_ln700_175_fu_11157_p2 = ($signed(sext_ln68_10_fu_11154_p1) + $signed(reg_1609));

assign add_ln700_178_fu_9917_p2 = ($signed(sext_ln700_166_fu_9911_p1) + $signed(sext_ln700_167_fu_9914_p1));

assign add_ln700_181_fu_9929_p2 = ($signed(sext_ln700_169_fu_9923_p1) + $signed(sext_ln700_170_fu_9926_p1));

assign add_ln700_182_fu_10771_p2 = ($signed(sext_ln700_168_fu_10765_p1) + $signed(sext_ln700_171_fu_10768_p1));

assign add_ln700_185_fu_9941_p2 = ($signed(sext_ln700_173_fu_9935_p1) + $signed(sext_ln700_174_fu_9938_p1));

assign add_ln700_188_fu_9953_p2 = ($signed(sext_ln700_176_fu_9947_p1) + $signed(sext_ln700_177_fu_9950_p1));

assign add_ln700_189_fu_10787_p2 = ($signed(sext_ln700_175_fu_10781_p1) + $signed(sext_ln700_178_fu_10784_p1));

assign add_ln700_18_fu_8957_p2 = ($signed(sext_ln700_16_fu_8951_p1) + $signed(sext_ln700_17_fu_8954_p1));

assign add_ln700_190_fu_10797_p2 = ($signed(sext_ln700_172_fu_10777_p1) + $signed(sext_ln700_179_fu_10793_p1));

assign add_ln700_191_fu_11177_p2 = ($signed(sext_ln68_11_fu_11174_p1) + $signed(reg_1613));

assign add_ln700_194_fu_10013_p2 = ($signed(sext_ln700_181_fu_10007_p1) + $signed(sext_ln700_182_fu_10010_p1));

assign add_ln700_197_fu_10025_p2 = ($signed(sext_ln700_184_fu_10019_p1) + $signed(sext_ln700_185_fu_10022_p1));

assign add_ln700_198_fu_10809_p2 = ($signed(sext_ln700_183_fu_10803_p1) + $signed(sext_ln700_186_fu_10806_p1));

assign add_ln700_201_fu_10037_p2 = ($signed(sext_ln700_188_fu_10031_p1) + $signed(sext_ln700_189_fu_10034_p1));

assign add_ln700_204_fu_10049_p2 = ($signed(sext_ln700_191_fu_10043_p1) + $signed(sext_ln700_192_fu_10046_p1));

assign add_ln700_205_fu_10825_p2 = ($signed(sext_ln700_190_fu_10819_p1) + $signed(sext_ln700_193_fu_10822_p1));

assign add_ln700_206_fu_10835_p2 = ($signed(sext_ln700_187_fu_10815_p1) + $signed(sext_ln700_194_fu_10831_p1));

assign add_ln700_207_fu_11197_p2 = ($signed(sext_ln68_12_fu_11194_p1) + $signed(reg_1617));

assign add_ln700_210_fu_10109_p2 = ($signed(sext_ln700_196_fu_10103_p1) + $signed(sext_ln700_197_fu_10106_p1));

assign add_ln700_213_fu_10121_p2 = ($signed(sext_ln700_199_fu_10115_p1) + $signed(sext_ln700_200_fu_10118_p1));

assign add_ln700_214_fu_10847_p2 = ($signed(sext_ln700_198_fu_10841_p1) + $signed(sext_ln700_201_fu_10844_p1));

assign add_ln700_217_fu_10133_p2 = ($signed(sext_ln700_203_fu_10127_p1) + $signed(sext_ln700_204_fu_10130_p1));

assign add_ln700_21_fu_8969_p2 = ($signed(sext_ln700_19_fu_8963_p1) + $signed(sext_ln700_20_fu_8966_p1));

assign add_ln700_220_fu_10145_p2 = ($signed(sext_ln700_206_fu_10139_p1) + $signed(sext_ln700_207_fu_10142_p1));

assign add_ln700_221_fu_10863_p2 = ($signed(sext_ln700_205_fu_10857_p1) + $signed(sext_ln700_208_fu_10860_p1));

assign add_ln700_222_fu_10873_p2 = ($signed(sext_ln700_202_fu_10853_p1) + $signed(sext_ln700_209_fu_10869_p1));

assign add_ln700_223_fu_11217_p2 = ($signed(sext_ln68_13_fu_11214_p1) + $signed(reg_1621));

assign add_ln700_226_fu_10205_p2 = ($signed(sext_ln700_211_fu_10199_p1) + $signed(sext_ln700_212_fu_10202_p1));

assign add_ln700_229_fu_10217_p2 = ($signed(sext_ln700_214_fu_10211_p1) + $signed(sext_ln700_215_fu_10214_p1));

assign add_ln700_22_fu_10391_p2 = ($signed(sext_ln700_18_fu_10385_p1) + $signed(sext_ln700_21_fu_10388_p1));

assign add_ln700_230_fu_10885_p2 = ($signed(sext_ln700_213_fu_10879_p1) + $signed(sext_ln700_216_fu_10882_p1));

assign add_ln700_233_fu_10229_p2 = ($signed(sext_ln700_218_fu_10223_p1) + $signed(sext_ln700_219_fu_10226_p1));

assign add_ln700_236_fu_10241_p2 = ($signed(sext_ln700_221_fu_10235_p1) + $signed(sext_ln700_222_fu_10238_p1));

assign add_ln700_237_fu_10901_p2 = ($signed(sext_ln700_220_fu_10895_p1) + $signed(sext_ln700_223_fu_10898_p1));

assign add_ln700_238_fu_10911_p2 = ($signed(sext_ln700_217_fu_10891_p1) + $signed(sext_ln700_224_fu_10907_p1));

assign add_ln700_239_fu_11237_p2 = ($signed(sext_ln68_14_fu_11234_p1) + $signed(reg_1625));

assign add_ln700_242_fu_10301_p2 = ($signed(sext_ln700_226_fu_10295_p1) + $signed(sext_ln700_227_fu_10298_p1));

assign add_ln700_245_fu_10313_p2 = ($signed(sext_ln700_229_fu_10307_p1) + $signed(sext_ln700_230_fu_10310_p1));

assign add_ln700_246_fu_10923_p2 = ($signed(sext_ln700_228_fu_10917_p1) + $signed(sext_ln700_231_fu_10920_p1));

assign add_ln700_249_fu_10325_p2 = ($signed(sext_ln700_233_fu_10319_p1) + $signed(sext_ln700_234_fu_10322_p1));

assign add_ln700_252_fu_10337_p2 = ($signed(sext_ln700_236_fu_10331_p1) + $signed(sext_ln700_237_fu_10334_p1));

assign add_ln700_253_fu_10939_p2 = ($signed(sext_ln700_235_fu_10933_p1) + $signed(sext_ln700_238_fu_10936_p1));

assign add_ln700_254_fu_10949_p2 = ($signed(sext_ln700_232_fu_10929_p1) + $signed(sext_ln700_239_fu_10945_p1));

assign add_ln700_255_fu_11257_p2 = ($signed(sext_ln68_15_fu_11254_p1) + $signed(reg_1629));

assign add_ln700_256_fu_4702_p2 = (dst_offset_in_V_reg_1174 + zext_ln700_4_reg_13899);

assign add_ln700_257_fu_4712_p2 = (src_offset_in_V_reg_1185 + zext_ln700_5_reg_13904);

assign add_ln700_258_fu_4717_p2 = (wgt_offset_in_V_reg_1196 + zext_ln700_6_reg_13909);

assign add_ln700_25_fu_8981_p2 = ($signed(sext_ln700_23_fu_8975_p1) + $signed(sext_ln700_24_fu_8978_p1));

assign add_ln700_262_fu_2004_p2 = (ap_phi_mux_dst_offset_in_V_1_phi_fu_1103_p4 + zext_ln700_9_reg_13106);

assign add_ln700_263_fu_2022_p2 = (ap_phi_mux_src_offset_in_V_1_phi_fu_1114_p4 + zext_ln700_10_reg_13111);

assign add_ln700_266_fu_11565_p2 = (reg_1569 + sram_idx_V_assign_0_reg_1264);

assign add_ln700_267_fu_11571_p2 = (zext_ln700_1_reg_12961 + dram_idx_assign_0_reg_1274);

assign add_ln700_28_fu_8993_p2 = ($signed(sext_ln700_26_fu_8987_p1) + $signed(sext_ln700_27_fu_8990_p1));

assign add_ln700_29_fu_10407_p2 = ($signed(sext_ln700_25_fu_10401_p1) + $signed(sext_ln700_28_fu_10404_p1));

assign add_ln700_2_fu_8861_p2 = ($signed(sext_ln700_1_fu_8855_p1) + $signed(sext_ln700_2_fu_8858_p1));

assign add_ln700_30_fu_10417_p2 = ($signed(sext_ln700_22_fu_10397_p1) + $signed(sext_ln700_29_fu_10413_p1));

assign add_ln700_31_fu_10977_p2 = ($signed(sext_ln68_1_fu_10974_p1) + $signed(reg_1573));

assign add_ln700_34_fu_9053_p2 = ($signed(sext_ln700_31_fu_9047_p1) + $signed(sext_ln700_32_fu_9050_p1));

assign add_ln700_37_fu_9065_p2 = ($signed(sext_ln700_34_fu_9059_p1) + $signed(sext_ln700_35_fu_9062_p1));

assign add_ln700_38_fu_10429_p2 = ($signed(sext_ln700_33_fu_10423_p1) + $signed(sext_ln700_36_fu_10426_p1));

assign add_ln700_41_fu_9077_p2 = ($signed(sext_ln700_38_fu_9071_p1) + $signed(sext_ln700_39_fu_9074_p1));

assign add_ln700_44_fu_9089_p2 = ($signed(sext_ln700_41_fu_9083_p1) + $signed(sext_ln700_42_fu_9086_p1));

assign add_ln700_45_fu_10445_p2 = ($signed(sext_ln700_40_fu_10439_p1) + $signed(sext_ln700_43_fu_10442_p1));

assign add_ln700_46_fu_10455_p2 = ($signed(sext_ln700_37_fu_10435_p1) + $signed(sext_ln700_44_fu_10451_p1));

assign add_ln700_47_fu_10997_p2 = ($signed(sext_ln68_2_fu_10994_p1) + $signed(reg_1577));

assign add_ln700_50_fu_9149_p2 = ($signed(sext_ln700_46_fu_9143_p1) + $signed(sext_ln700_47_fu_9146_p1));

assign add_ln700_53_fu_9161_p2 = ($signed(sext_ln700_49_fu_9155_p1) + $signed(sext_ln700_50_fu_9158_p1));

assign add_ln700_54_fu_10467_p2 = ($signed(sext_ln700_48_fu_10461_p1) + $signed(sext_ln700_51_fu_10464_p1));

assign add_ln700_57_fu_9173_p2 = ($signed(sext_ln700_53_fu_9167_p1) + $signed(sext_ln700_54_fu_9170_p1));

assign add_ln700_5_fu_8873_p2 = ($signed(sext_ln700_4_fu_8867_p1) + $signed(sext_ln700_5_fu_8870_p1));

assign add_ln700_60_fu_9185_p2 = ($signed(sext_ln700_56_fu_9179_p1) + $signed(sext_ln700_57_fu_9182_p1));

assign add_ln700_61_fu_10483_p2 = ($signed(sext_ln700_55_fu_10477_p1) + $signed(sext_ln700_58_fu_10480_p1));

assign add_ln700_62_fu_10493_p2 = ($signed(sext_ln700_52_fu_10473_p1) + $signed(sext_ln700_59_fu_10489_p1));

assign add_ln700_63_fu_11017_p2 = ($signed(sext_ln68_3_fu_11014_p1) + $signed(reg_1581));

assign add_ln700_66_fu_9245_p2 = ($signed(sext_ln700_61_fu_9239_p1) + $signed(sext_ln700_62_fu_9242_p1));

assign add_ln700_69_fu_9257_p2 = ($signed(sext_ln700_64_fu_9251_p1) + $signed(sext_ln700_65_fu_9254_p1));

assign add_ln700_6_fu_10353_p2 = ($signed(sext_ln700_3_fu_10347_p1) + $signed(sext_ln700_6_fu_10350_p1));

assign add_ln700_70_fu_10505_p2 = ($signed(sext_ln700_63_fu_10499_p1) + $signed(sext_ln700_66_fu_10502_p1));

assign add_ln700_73_fu_9269_p2 = ($signed(sext_ln700_68_fu_9263_p1) + $signed(sext_ln700_69_fu_9266_p1));

assign add_ln700_76_fu_9281_p2 = ($signed(sext_ln700_71_fu_9275_p1) + $signed(sext_ln700_72_fu_9278_p1));

assign add_ln700_77_fu_10521_p2 = ($signed(sext_ln700_70_fu_10515_p1) + $signed(sext_ln700_73_fu_10518_p1));

assign add_ln700_78_fu_10531_p2 = ($signed(sext_ln700_67_fu_10511_p1) + $signed(sext_ln700_74_fu_10527_p1));

assign add_ln700_79_fu_11037_p2 = ($signed(sext_ln68_4_fu_11034_p1) + $signed(reg_1585));

assign add_ln700_82_fu_9341_p2 = ($signed(sext_ln700_76_fu_9335_p1) + $signed(sext_ln700_77_fu_9338_p1));

assign add_ln700_85_fu_9353_p2 = ($signed(sext_ln700_79_fu_9347_p1) + $signed(sext_ln700_80_fu_9350_p1));

assign add_ln700_86_fu_10543_p2 = ($signed(sext_ln700_78_fu_10537_p1) + $signed(sext_ln700_81_fu_10540_p1));

assign add_ln700_89_fu_9365_p2 = ($signed(sext_ln700_83_fu_9359_p1) + $signed(sext_ln700_84_fu_9362_p1));

assign add_ln700_92_fu_9377_p2 = ($signed(sext_ln700_86_fu_9371_p1) + $signed(sext_ln700_87_fu_9374_p1));

assign add_ln700_93_fu_10559_p2 = ($signed(sext_ln700_85_fu_10553_p1) + $signed(sext_ln700_88_fu_10556_p1));

assign add_ln700_94_fu_10569_p2 = ($signed(sext_ln700_82_fu_10549_p1) + $signed(sext_ln700_89_fu_10565_p1));

assign add_ln700_95_fu_11057_p2 = ($signed(sext_ln68_5_fu_11054_p1) + $signed(reg_1589));

assign add_ln700_98_fu_9437_p2 = ($signed(sext_ln700_91_fu_9431_p1) + $signed(sext_ln700_92_fu_9434_p1));

assign add_ln700_9_fu_8885_p2 = ($signed(sext_ln700_8_fu_8879_p1) + $signed(sext_ln700_9_fu_8882_p1));

assign add_ln88_fu_11371_p2 = (p_cast37_reg_12774 + zext_ln1352_fu_11367_p1);

assign add_ln89_1_fu_11407_p2 = (shl_ln89_reg_16470 + trunc_ln89_fu_11403_p1);

assign add_ln89_fu_11397_p2 = (phi_ln89_reg_1295 + 19'd1);

assign and_ln385_fu_1981_p2 = (tmp_16_fu_1974_p3 & icmp_ln385_fu_1939_p2);

assign and_ln89_fu_11517_p2 = (shl_ln89_3_fu_11505_p2 & lshr_ln89_fu_11511_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_pp0 = (((1'b1 == ap_block_pp0_stage1_subdone) & (ap_ST_fsm_pp0_stage1 == ap_CS_fsm)) | ((1'b1 == ap_block_pp0_stage0_subdone) & (ap_ST_fsm_pp0_stage0 == ap_CS_fsm)));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1 = ((1'b1 == ap_block_pp1_stage0_subdone) & (ap_ST_fsm_pp1_stage0 == ap_CS_fsm));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2 = ((1'b1 == ap_block_pp2_stage0_subdone) & (ap_ST_fsm_pp2_stage0 == ap_CS_fsm));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((data_port_RVALID == 1'b0) & (icmp_ln89_reg_16475 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((data_port_RVALID == 1'b0) & (icmp_ln89_reg_16475 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp3 = ((1'b1 == ap_block_pp3_stage0_subdone) & (ap_ST_fsm_pp3_stage0 == ap_CS_fsm));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_11001 = ((uop_port_RVALID == 1'b0) & (icmp_ln480_reg_16554 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = ((uop_port_RVALID == 1'b0) & (icmp_ln480_reg_16554 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (gemm_queue_V_V_TVALID_int == 1'b0) | ((s2g_dep_queue_V_TVALID_int == 1'b0) & (tmp_6_fu_1679_p3 == 1'd1)) | ((l2g_dep_queue_V_TVALID_int == 1'b0) & (tmp_4_fu_1671_p3 == 1'd1)));
end

assign ap_block_state10_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state19_io = ((g2l_dep_queue_V_TREADY_int == 1'b0) & (tmp_35_fu_4597_p3 == 1'd1));
end

assign ap_block_state28_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp1_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp1_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp1_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state47_pp2_stage0_iter1 = ((data_port_RVALID == 1'b0) & (icmp_ln89_reg_16475 == 1'd0));
end

assign ap_block_state48_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state59_pp3_stage0_iter1 = ((uop_port_RVALID == 1'b0) & (icmp_ln480_reg_16554 == 1'd0));
end

assign ap_block_state60_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state63_io = (((g2s_dep_queue_V_TREADY_int == 1'b0) & (tmp_36_fu_11615_p3 == 1'd1)) | ((g2l_dep_queue_V_TREADY_int == 1'b0) & (tmp_35_reg_13822 == 1'd1)));
end

always @ (*) begin
    ap_block_state64 = ((regslice_both_g2s_dep_queue_V_U_apdone_blk == 1'b1) | (regslice_both_g2l_dep_queue_V_U_apdone_blk == 1'b1));
end

always @ (*) begin
    ap_block_state64_io = ((g2s_dep_queue_V_TREADY_int == 1'b0) & (tmp_36_reg_16573 == 1'd1));
end

always @ (*) begin
    ap_enable_operation_1334 = (icmp_ln253_reg_13919_pp1_iter6_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_2175 = (icmp_ln253_reg_13919_pp1_iter7_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_2406 = (icmp_ln253_reg_13919_pp1_iter8_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_248 = (icmp_ln343_reg_13229_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_251 = (icmp_ln343_reg_13229_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_252 = (icmp_ln343_reg_13229_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_269 = (icmp_ln343_reg_13229_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_695 = (icmp_ln343_reg_13229_pp0_iter3_reg == 1'd0);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

always @ (*) begin
    ap_enable_state13_pp0_iter1_stage1 = ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_enable_state14_pp0_iter2_stage0 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state18_pp0_iter4_stage0 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1));
end

always @ (*) begin
    ap_enable_state35_pp1_iter7_stage0 = ((ap_enable_reg_pp1_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_enable_state36_pp1_iter8_stage0 = ((ap_enable_reg_pp1_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_enable_state37_pp1_iter9_stage0 = ((ap_enable_reg_pp1_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ashr_ln808_10_fu_3870_p2 = $signed(reg_1609) >>> zext_ln556_21_fu_3867_p1;

assign ashr_ln808_11_fu_3987_p2 = $signed(reg_1613) >>> zext_ln556_23_fu_3984_p1;

assign ashr_ln808_12_fu_4104_p2 = $signed(reg_1617) >>> zext_ln556_25_fu_4101_p1;

assign ashr_ln808_13_fu_4221_p2 = $signed(reg_1621) >>> zext_ln556_27_fu_4218_p1;

assign ashr_ln808_14_fu_4338_p2 = $signed(reg_1625) >>> zext_ln556_29_fu_4335_p1;

assign ashr_ln808_15_fu_4455_p2 = $signed(reg_1629) >>> zext_ln556_31_fu_4452_p1;

assign ashr_ln808_1_fu_2633_p2 = $signed(reg_1573) >>> zext_ln556_3_fu_2630_p1;

assign ashr_ln808_2_fu_2750_p2 = $signed(reg_1577) >>> zext_ln556_5_fu_2747_p1;

assign ashr_ln808_3_fu_2867_p2 = $signed(reg_1581) >>> zext_ln556_7_fu_2864_p1;

assign ashr_ln808_4_fu_2984_p2 = $signed(reg_1585) >>> zext_ln556_9_fu_2981_p1;

assign ashr_ln808_5_fu_3101_p2 = $signed(reg_1589) >>> zext_ln556_11_fu_3098_p1;

assign ashr_ln808_6_fu_3218_p2 = $signed(reg_1593) >>> zext_ln556_13_fu_3215_p1;

assign ashr_ln808_7_fu_3335_p2 = $signed(reg_1597) >>> zext_ln556_15_fu_3332_p1;

assign ashr_ln808_8_fu_3636_p2 = $signed(reg_1601) >>> zext_ln556_17_fu_3633_p1;

assign ashr_ln808_9_fu_3753_p2 = $signed(reg_1605) >>> zext_ln556_19_fu_3750_p1;

assign ashr_ln808_fu_2518_p2 = $signed(dst_tensor_0_0_V_reg_13347) >>> zext_ln556_1_fu_2515_p1;

assign data_port_ARADDR = zext_ln88_fu_11376_p1;

assign dram_idx_V_fu_1801_p4 = {{gemm_queue_V_V_TDATA_int[56:25]}};

assign dst_idx_V_1_fu_2134_p2 = (zext_ln209_3_fu_2130_p1 + select_ln348_reg_13254);

assign dst_idx_V_fu_4859_p2 = (zext_ln209_fu_4855_p1 + select_ln259_reg_13977_pp1_iter2_reg);

assign dst_offset_in_V_4_fu_4795_p2 = (select_ln254_fu_4760_p3 + zext_ln700_2_reg_13884);

assign dst_offset_in_V_5_fu_2070_p2 = (select_ln344_fu_2014_p3 + zext_ln700_7_reg_13096);

assign dst_tensor_0_0_V_1_fu_2480_p3 = ((icmp_ln887_fu_2466_p2[0:0] === 1'b1) ? select_ln380_fu_2470_p3 : select_ln380_1_fu_2475_p3);

assign dst_tensor_0_0_V_2_fu_2492_p2 = (dst_tensor_0_0_V_reg_13347 + select_ln375_reg_13358);

assign dst_tensor_0_0_V_3_fu_2523_p3 = ((tmp_17_fu_2500_p3[0:0] === 1'b1) ? shl_ln790_fu_2510_p2 : ashr_ln808_fu_2518_p2);

assign dst_tensor_0_0_V_4_fu_2556_p3 = ((tmp_16_reg_13116[0:0] === 1'b1) ? dst_tensor_0_0_V_reg_13347 : dst_tensor_0_0_V_1_fu_2480_p3);

assign dst_tensor_0_0_V_5_fu_2562_p3 = ((and_ln385_reg_13152[0:0] === 1'b1) ? dst_tensor_0_0_V_2_fu_2492_p2 : dst_tensor_0_0_V_4_fu_2556_p3);

assign dst_tensor_0_0_V_6_fu_2569_p3 = ((icmp_ln391_reg_13188[0:0] === 1'b1) ? dst_tensor_0_0_V_3_fu_2523_p3 : dst_tensor_0_0_V_5_fu_2562_p3);

assign dst_tensor_0_0_V_fu_2310_p1 = acc_mem_V_q1[31:0];

assign dst_tensor_0_10_V_1_fu_3830_p3 = ((icmp_ln887_10_fu_3813_p2[0:0] === 1'b1) ? select_ln380_30_fu_3818_p3 : select_ln380_31_fu_3824_p3);

assign dst_tensor_0_10_V_2_fu_3842_p2 = (reg_1609 + src_1_V_10_reg_13628);

assign dst_tensor_0_10_V_3_fu_3876_p3 = ((tmp_27_fu_3851_p3[0:0] === 1'b1) ? shl_ln790_10_fu_3861_p2 : ashr_ln808_10_fu_3870_p2);

assign dst_tensor_0_10_V_4_fu_3909_p3 = ((tmp_16_reg_13116[0:0] === 1'b1) ? reg_1609 : dst_tensor_0_10_V_1_fu_3830_p3);

assign dst_tensor_0_10_V_5_fu_3916_p3 = ((and_ln385_reg_13152[0:0] === 1'b1) ? dst_tensor_0_10_V_2_fu_3842_p2 : dst_tensor_0_10_V_4_fu_3909_p3);

assign dst_tensor_0_10_V_6_fu_3923_p3 = ((icmp_ln391_reg_13188[0:0] === 1'b1) ? dst_tensor_0_10_V_3_fu_3876_p3 : dst_tensor_0_10_V_5_fu_3916_p3);

assign dst_tensor_0_11_V_1_fu_3947_p3 = ((icmp_ln887_11_fu_3930_p2[0:0] === 1'b1) ? select_ln380_33_fu_3935_p3 : select_ln380_34_fu_3941_p3);

assign dst_tensor_0_11_V_2_fu_3959_p2 = (reg_1613 + src_1_V_11_reg_13647);

assign dst_tensor_0_11_V_3_fu_3993_p3 = ((tmp_28_fu_3968_p3[0:0] === 1'b1) ? shl_ln790_11_fu_3978_p2 : ashr_ln808_11_fu_3987_p2);

assign dst_tensor_0_11_V_4_fu_4026_p3 = ((tmp_16_reg_13116[0:0] === 1'b1) ? reg_1613 : dst_tensor_0_11_V_1_fu_3947_p3);

assign dst_tensor_0_11_V_5_fu_4033_p3 = ((and_ln385_reg_13152[0:0] === 1'b1) ? dst_tensor_0_11_V_2_fu_3959_p2 : dst_tensor_0_11_V_4_fu_4026_p3);

assign dst_tensor_0_11_V_6_fu_4040_p3 = ((icmp_ln391_reg_13188[0:0] === 1'b1) ? dst_tensor_0_11_V_3_fu_3993_p3 : dst_tensor_0_11_V_5_fu_4033_p3);

assign dst_tensor_0_12_V_1_fu_4064_p3 = ((icmp_ln887_12_fu_4047_p2[0:0] === 1'b1) ? select_ln380_36_fu_4052_p3 : select_ln380_37_fu_4058_p3);

assign dst_tensor_0_12_V_2_fu_4076_p2 = (reg_1617 + src_1_V_12_reg_13666);

assign dst_tensor_0_12_V_3_fu_4110_p3 = ((tmp_29_fu_4085_p3[0:0] === 1'b1) ? shl_ln790_12_fu_4095_p2 : ashr_ln808_12_fu_4104_p2);

assign dst_tensor_0_12_V_4_fu_4143_p3 = ((tmp_16_reg_13116[0:0] === 1'b1) ? reg_1617 : dst_tensor_0_12_V_1_fu_4064_p3);

assign dst_tensor_0_12_V_5_fu_4150_p3 = ((and_ln385_reg_13152[0:0] === 1'b1) ? dst_tensor_0_12_V_2_fu_4076_p2 : dst_tensor_0_12_V_4_fu_4143_p3);

assign dst_tensor_0_12_V_6_fu_4157_p3 = ((icmp_ln391_reg_13188[0:0] === 1'b1) ? dst_tensor_0_12_V_3_fu_4110_p3 : dst_tensor_0_12_V_5_fu_4150_p3);

assign dst_tensor_0_13_V_1_fu_4181_p3 = ((icmp_ln887_13_fu_4164_p2[0:0] === 1'b1) ? select_ln380_39_fu_4169_p3 : select_ln380_40_fu_4175_p3);

assign dst_tensor_0_13_V_2_fu_4193_p2 = (reg_1621 + src_1_V_13_reg_13685);

assign dst_tensor_0_13_V_3_fu_4227_p3 = ((tmp_30_fu_4202_p3[0:0] === 1'b1) ? shl_ln790_13_fu_4212_p2 : ashr_ln808_13_fu_4221_p2);

assign dst_tensor_0_13_V_4_fu_4260_p3 = ((tmp_16_reg_13116[0:0] === 1'b1) ? reg_1621 : dst_tensor_0_13_V_1_fu_4181_p3);

assign dst_tensor_0_13_V_5_fu_4267_p3 = ((and_ln385_reg_13152[0:0] === 1'b1) ? dst_tensor_0_13_V_2_fu_4193_p2 : dst_tensor_0_13_V_4_fu_4260_p3);

assign dst_tensor_0_13_V_6_fu_4274_p3 = ((icmp_ln391_reg_13188[0:0] === 1'b1) ? dst_tensor_0_13_V_3_fu_4227_p3 : dst_tensor_0_13_V_5_fu_4267_p3);

assign dst_tensor_0_14_V_1_fu_4298_p3 = ((icmp_ln887_14_fu_4281_p2[0:0] === 1'b1) ? select_ln380_42_fu_4286_p3 : select_ln380_43_fu_4292_p3);

assign dst_tensor_0_14_V_2_fu_4310_p2 = (reg_1625 + src_1_V_14_reg_13704);

assign dst_tensor_0_14_V_3_fu_4344_p3 = ((tmp_31_fu_4319_p3[0:0] === 1'b1) ? shl_ln790_14_fu_4329_p2 : ashr_ln808_14_fu_4338_p2);

assign dst_tensor_0_14_V_4_fu_4377_p3 = ((tmp_16_reg_13116[0:0] === 1'b1) ? reg_1625 : dst_tensor_0_14_V_1_fu_4298_p3);

assign dst_tensor_0_14_V_5_fu_4384_p3 = ((and_ln385_reg_13152[0:0] === 1'b1) ? dst_tensor_0_14_V_2_fu_4310_p2 : dst_tensor_0_14_V_4_fu_4377_p3);

assign dst_tensor_0_14_V_6_fu_4391_p3 = ((icmp_ln391_reg_13188[0:0] === 1'b1) ? dst_tensor_0_14_V_3_fu_4344_p3 : dst_tensor_0_14_V_5_fu_4384_p3);

assign dst_tensor_0_15_V_1_fu_4415_p3 = ((icmp_ln887_15_fu_4398_p2[0:0] === 1'b1) ? select_ln380_45_fu_4403_p3 : select_ln380_46_fu_4409_p3);

assign dst_tensor_0_15_V_2_fu_4427_p2 = (reg_1629 + src_1_V_15_reg_13723);

assign dst_tensor_0_15_V_3_fu_4461_p3 = ((tmp_32_fu_4436_p3[0:0] === 1'b1) ? shl_ln790_15_fu_4446_p2 : ashr_ln808_15_fu_4455_p2);

assign dst_tensor_0_15_V_4_fu_4494_p3 = ((tmp_16_reg_13116[0:0] === 1'b1) ? reg_1629 : dst_tensor_0_15_V_1_fu_4415_p3);

assign dst_tensor_0_15_V_5_fu_4501_p3 = ((and_ln385_reg_13152[0:0] === 1'b1) ? dst_tensor_0_15_V_2_fu_4427_p2 : dst_tensor_0_15_V_4_fu_4494_p3);

assign dst_tensor_0_15_V_6_fu_4508_p3 = ((icmp_ln391_reg_13188[0:0] === 1'b1) ? dst_tensor_0_15_V_3_fu_4461_p3 : dst_tensor_0_15_V_5_fu_4501_p3);

assign dst_tensor_0_1_V_1_fu_2593_p3 = ((icmp_ln887_1_fu_2576_p2[0:0] === 1'b1) ? select_ln380_3_fu_2581_p3 : select_ln380_4_fu_2587_p3);

assign dst_tensor_0_1_V_2_fu_2605_p2 = (reg_1573 + src_1_V_1_reg_13377);

assign dst_tensor_0_1_V_3_fu_2639_p3 = ((tmp_18_fu_2614_p3[0:0] === 1'b1) ? shl_ln790_1_fu_2624_p2 : ashr_ln808_1_fu_2633_p2);

assign dst_tensor_0_1_V_4_fu_2672_p3 = ((tmp_16_reg_13116[0:0] === 1'b1) ? reg_1573 : dst_tensor_0_1_V_1_fu_2593_p3);

assign dst_tensor_0_1_V_5_fu_2679_p3 = ((and_ln385_reg_13152[0:0] === 1'b1) ? dst_tensor_0_1_V_2_fu_2605_p2 : dst_tensor_0_1_V_4_fu_2672_p3);

assign dst_tensor_0_1_V_6_fu_2686_p3 = ((icmp_ln391_reg_13188[0:0] === 1'b1) ? dst_tensor_0_1_V_3_fu_2639_p3 : dst_tensor_0_1_V_5_fu_2679_p3);

assign dst_tensor_0_2_V_1_fu_2710_p3 = ((icmp_ln887_2_fu_2693_p2[0:0] === 1'b1) ? select_ln380_6_fu_2698_p3 : select_ln380_7_fu_2704_p3);

assign dst_tensor_0_2_V_2_fu_2722_p2 = (reg_1577 + src_1_V_2_reg_13396);

assign dst_tensor_0_2_V_3_fu_2756_p3 = ((tmp_19_fu_2731_p3[0:0] === 1'b1) ? shl_ln790_2_fu_2741_p2 : ashr_ln808_2_fu_2750_p2);

assign dst_tensor_0_2_V_4_fu_2789_p3 = ((tmp_16_reg_13116[0:0] === 1'b1) ? reg_1577 : dst_tensor_0_2_V_1_fu_2710_p3);

assign dst_tensor_0_2_V_5_fu_2796_p3 = ((and_ln385_reg_13152[0:0] === 1'b1) ? dst_tensor_0_2_V_2_fu_2722_p2 : dst_tensor_0_2_V_4_fu_2789_p3);

assign dst_tensor_0_2_V_6_fu_2803_p3 = ((icmp_ln391_reg_13188[0:0] === 1'b1) ? dst_tensor_0_2_V_3_fu_2756_p3 : dst_tensor_0_2_V_5_fu_2796_p3);

assign dst_tensor_0_3_V_1_fu_2827_p3 = ((icmp_ln887_3_fu_2810_p2[0:0] === 1'b1) ? select_ln380_9_fu_2815_p3 : select_ln380_10_fu_2821_p3);

assign dst_tensor_0_3_V_2_fu_2839_p2 = (reg_1581 + src_1_V_3_reg_13415);

assign dst_tensor_0_3_V_3_fu_2873_p3 = ((tmp_20_fu_2848_p3[0:0] === 1'b1) ? shl_ln790_3_fu_2858_p2 : ashr_ln808_3_fu_2867_p2);

assign dst_tensor_0_3_V_4_fu_2906_p3 = ((tmp_16_reg_13116[0:0] === 1'b1) ? reg_1581 : dst_tensor_0_3_V_1_fu_2827_p3);

assign dst_tensor_0_3_V_5_fu_2913_p3 = ((and_ln385_reg_13152[0:0] === 1'b1) ? dst_tensor_0_3_V_2_fu_2839_p2 : dst_tensor_0_3_V_4_fu_2906_p3);

assign dst_tensor_0_3_V_6_fu_2920_p3 = ((icmp_ln391_reg_13188[0:0] === 1'b1) ? dst_tensor_0_3_V_3_fu_2873_p3 : dst_tensor_0_3_V_5_fu_2913_p3);

assign dst_tensor_0_4_V_1_fu_2944_p3 = ((icmp_ln887_4_fu_2927_p2[0:0] === 1'b1) ? select_ln380_12_fu_2932_p3 : select_ln380_13_fu_2938_p3);

assign dst_tensor_0_4_V_2_fu_2956_p2 = (reg_1585 + src_1_V_4_reg_13434);

assign dst_tensor_0_4_V_3_fu_2990_p3 = ((tmp_21_fu_2965_p3[0:0] === 1'b1) ? shl_ln790_4_fu_2975_p2 : ashr_ln808_4_fu_2984_p2);

assign dst_tensor_0_4_V_4_fu_3023_p3 = ((tmp_16_reg_13116[0:0] === 1'b1) ? reg_1585 : dst_tensor_0_4_V_1_fu_2944_p3);

assign dst_tensor_0_4_V_5_fu_3030_p3 = ((and_ln385_reg_13152[0:0] === 1'b1) ? dst_tensor_0_4_V_2_fu_2956_p2 : dst_tensor_0_4_V_4_fu_3023_p3);

assign dst_tensor_0_4_V_6_fu_3037_p3 = ((icmp_ln391_reg_13188[0:0] === 1'b1) ? dst_tensor_0_4_V_3_fu_2990_p3 : dst_tensor_0_4_V_5_fu_3030_p3);

assign dst_tensor_0_5_V_1_fu_3061_p3 = ((icmp_ln887_5_fu_3044_p2[0:0] === 1'b1) ? select_ln380_15_fu_3049_p3 : select_ln380_16_fu_3055_p3);

assign dst_tensor_0_5_V_2_fu_3073_p2 = (reg_1589 + src_1_V_5_reg_13453);

assign dst_tensor_0_5_V_3_fu_3107_p3 = ((tmp_22_fu_3082_p3[0:0] === 1'b1) ? shl_ln790_5_fu_3092_p2 : ashr_ln808_5_fu_3101_p2);

assign dst_tensor_0_5_V_4_fu_3140_p3 = ((tmp_16_reg_13116[0:0] === 1'b1) ? reg_1589 : dst_tensor_0_5_V_1_fu_3061_p3);

assign dst_tensor_0_5_V_5_fu_3147_p3 = ((and_ln385_reg_13152[0:0] === 1'b1) ? dst_tensor_0_5_V_2_fu_3073_p2 : dst_tensor_0_5_V_4_fu_3140_p3);

assign dst_tensor_0_5_V_6_fu_3154_p3 = ((icmp_ln391_reg_13188[0:0] === 1'b1) ? dst_tensor_0_5_V_3_fu_3107_p3 : dst_tensor_0_5_V_5_fu_3147_p3);

assign dst_tensor_0_6_V_1_fu_3178_p3 = ((icmp_ln887_6_fu_3161_p2[0:0] === 1'b1) ? select_ln380_18_fu_3166_p3 : select_ln380_19_fu_3172_p3);

assign dst_tensor_0_6_V_2_fu_3190_p2 = (reg_1593 + src_1_V_6_reg_13472);

assign dst_tensor_0_6_V_3_fu_3224_p3 = ((tmp_23_fu_3199_p3[0:0] === 1'b1) ? shl_ln790_6_fu_3209_p2 : ashr_ln808_6_fu_3218_p2);

assign dst_tensor_0_6_V_4_fu_3257_p3 = ((tmp_16_reg_13116[0:0] === 1'b1) ? reg_1593 : dst_tensor_0_6_V_1_fu_3178_p3);

assign dst_tensor_0_6_V_5_fu_3264_p3 = ((and_ln385_reg_13152[0:0] === 1'b1) ? dst_tensor_0_6_V_2_fu_3190_p2 : dst_tensor_0_6_V_4_fu_3257_p3);

assign dst_tensor_0_6_V_6_fu_3271_p3 = ((icmp_ln391_reg_13188[0:0] === 1'b1) ? dst_tensor_0_6_V_3_fu_3224_p3 : dst_tensor_0_6_V_5_fu_3264_p3);

assign dst_tensor_0_7_V_1_fu_3295_p3 = ((icmp_ln887_7_fu_3278_p2[0:0] === 1'b1) ? select_ln380_21_fu_3283_p3 : select_ln380_22_fu_3289_p3);

assign dst_tensor_0_7_V_2_fu_3307_p2 = (reg_1597 + src_1_V_7_reg_13491);

assign dst_tensor_0_7_V_3_fu_3341_p3 = ((tmp_24_fu_3316_p3[0:0] === 1'b1) ? shl_ln790_7_fu_3326_p2 : ashr_ln808_7_fu_3335_p2);

assign dst_tensor_0_7_V_4_fu_3374_p3 = ((tmp_16_reg_13116[0:0] === 1'b1) ? reg_1597 : dst_tensor_0_7_V_1_fu_3295_p3);

assign dst_tensor_0_7_V_5_fu_3381_p3 = ((and_ln385_reg_13152[0:0] === 1'b1) ? dst_tensor_0_7_V_2_fu_3307_p2 : dst_tensor_0_7_V_4_fu_3374_p3);

assign dst_tensor_0_7_V_6_fu_3388_p3 = ((icmp_ln391_reg_13188[0:0] === 1'b1) ? dst_tensor_0_7_V_3_fu_3341_p3 : dst_tensor_0_7_V_5_fu_3381_p3);

assign dst_tensor_0_8_V_1_fu_3596_p3 = ((icmp_ln887_8_fu_3579_p2[0:0] === 1'b1) ? select_ln380_24_fu_3584_p3 : select_ln380_25_fu_3590_p3);

assign dst_tensor_0_8_V_2_fu_3608_p2 = (reg_1601 + src_1_V_8_reg_13590);

assign dst_tensor_0_8_V_3_fu_3642_p3 = ((tmp_25_fu_3617_p3[0:0] === 1'b1) ? shl_ln790_8_fu_3627_p2 : ashr_ln808_8_fu_3636_p2);

assign dst_tensor_0_8_V_4_fu_3675_p3 = ((tmp_16_reg_13116[0:0] === 1'b1) ? reg_1601 : dst_tensor_0_8_V_1_fu_3596_p3);

assign dst_tensor_0_8_V_5_fu_3682_p3 = ((and_ln385_reg_13152[0:0] === 1'b1) ? dst_tensor_0_8_V_2_fu_3608_p2 : dst_tensor_0_8_V_4_fu_3675_p3);

assign dst_tensor_0_8_V_6_fu_3689_p3 = ((icmp_ln391_reg_13188[0:0] === 1'b1) ? dst_tensor_0_8_V_3_fu_3642_p3 : dst_tensor_0_8_V_5_fu_3682_p3);

assign dst_tensor_0_9_V_1_fu_3713_p3 = ((icmp_ln887_9_fu_3696_p2[0:0] === 1'b1) ? select_ln380_27_fu_3701_p3 : select_ln380_28_fu_3707_p3);

assign dst_tensor_0_9_V_2_fu_3725_p2 = (reg_1605 + src_1_V_9_reg_13609);

assign dst_tensor_0_9_V_3_fu_3759_p3 = ((tmp_26_fu_3734_p3[0:0] === 1'b1) ? shl_ln790_9_fu_3744_p2 : ashr_ln808_9_fu_3753_p2);

assign dst_tensor_0_9_V_4_fu_3792_p3 = ((tmp_16_reg_13116[0:0] === 1'b1) ? reg_1605 : dst_tensor_0_9_V_1_fu_3713_p3);

assign dst_tensor_0_9_V_5_fu_3799_p3 = ((and_ln385_reg_13152[0:0] === 1'b1) ? dst_tensor_0_9_V_2_fu_3725_p2 : dst_tensor_0_9_V_4_fu_3792_p3);

assign dst_tensor_0_9_V_6_fu_3806_p3 = ((icmp_ln391_reg_13188[0:0] === 1'b1) ? dst_tensor_0_9_V_3_fu_3759_p3 : dst_tensor_0_9_V_5_fu_3799_p3);

assign empty_16_fu_11433_p2 = (shl_ln89_2_fu_11426_p3 | 9'd63);

assign empty_18_fu_1761_p2 = ((zext_ln262_3_fu_1757_p1 > grp_fu_1327_p4) ? 1'b1 : 1'b0);

assign empty_20_fu_1723_p2 = ((zext_ln350_3_fu_1719_p1 > grp_fu_1327_p4) ? 1'b1 : 1'b0);

assign g2l_dep_queue_V_TVALID = regslice_both_g2l_dep_queue_V_U_vld_out;

assign g2s_dep_queue_V_TVALID = regslice_both_g2s_dep_queue_V_U_vld_out;

assign grp_fu_11622_p0 = sext_ln215_fu_8783_p1;

assign grp_fu_11631_p0 = sext_ln215_4_fu_8792_p1;

assign grp_fu_11640_p0 = sext_ln215_8_fu_8801_p1;

assign grp_fu_11649_p0 = sext_ln215_12_fu_8810_p1;

assign grp_fu_11658_p0 = sext_ln215_16_fu_8819_p1;

assign grp_fu_11667_p0 = sext_ln215_20_fu_8828_p1;

assign grp_fu_11676_p0 = sext_ln215_24_fu_8837_p1;

assign grp_fu_11685_p0 = sext_ln215_28_fu_8846_p1;

assign grp_fu_11694_p0 = sext_ln215_fu_8783_p1;

assign grp_fu_11703_p0 = sext_ln215_4_fu_8792_p1;

assign grp_fu_11712_p0 = sext_ln215_8_fu_8801_p1;

assign grp_fu_11721_p0 = sext_ln215_12_fu_8810_p1;

assign grp_fu_11730_p0 = sext_ln215_16_fu_8819_p1;

assign grp_fu_11739_p0 = sext_ln215_20_fu_8828_p1;

assign grp_fu_11748_p0 = sext_ln215_24_fu_8837_p1;

assign grp_fu_11757_p0 = sext_ln215_28_fu_8846_p1;

assign grp_fu_11766_p0 = sext_ln215_fu_8783_p1;

assign grp_fu_11775_p0 = sext_ln215_4_fu_8792_p1;

assign grp_fu_11784_p0 = sext_ln215_8_fu_8801_p1;

assign grp_fu_11793_p0 = sext_ln215_12_fu_8810_p1;

assign grp_fu_11802_p0 = sext_ln215_16_fu_8819_p1;

assign grp_fu_11811_p0 = sext_ln215_20_fu_8828_p1;

assign grp_fu_11820_p0 = sext_ln215_24_fu_8837_p1;

assign grp_fu_11829_p0 = sext_ln215_28_fu_8846_p1;

assign grp_fu_11838_p0 = sext_ln215_fu_8783_p1;

assign grp_fu_11847_p0 = sext_ln215_4_fu_8792_p1;

assign grp_fu_11856_p0 = sext_ln215_8_fu_8801_p1;

assign grp_fu_11865_p0 = sext_ln215_12_fu_8810_p1;

assign grp_fu_11874_p0 = sext_ln215_16_fu_8819_p1;

assign grp_fu_11883_p0 = sext_ln215_20_fu_8828_p1;

assign grp_fu_11892_p0 = sext_ln215_24_fu_8837_p1;

assign grp_fu_11901_p0 = sext_ln215_28_fu_8846_p1;

assign grp_fu_11910_p0 = sext_ln215_fu_8783_p1;

assign grp_fu_11919_p0 = sext_ln215_4_fu_8792_p1;

assign grp_fu_11928_p0 = sext_ln215_8_fu_8801_p1;

assign grp_fu_11937_p0 = sext_ln215_12_fu_8810_p1;

assign grp_fu_11946_p0 = sext_ln215_16_fu_8819_p1;

assign grp_fu_11955_p0 = sext_ln215_20_fu_8828_p1;

assign grp_fu_11964_p0 = sext_ln215_24_fu_8837_p1;

assign grp_fu_11973_p0 = sext_ln215_28_fu_8846_p1;

assign grp_fu_11982_p0 = sext_ln215_fu_8783_p1;

assign grp_fu_11991_p0 = sext_ln215_4_fu_8792_p1;

assign grp_fu_12000_p0 = sext_ln215_8_fu_8801_p1;

assign grp_fu_12009_p0 = sext_ln215_12_fu_8810_p1;

assign grp_fu_12018_p0 = sext_ln215_16_fu_8819_p1;

assign grp_fu_12027_p0 = sext_ln215_20_fu_8828_p1;

assign grp_fu_12036_p0 = sext_ln215_24_fu_8837_p1;

assign grp_fu_12045_p0 = sext_ln215_28_fu_8846_p1;

assign grp_fu_12054_p0 = sext_ln215_fu_8783_p1;

assign grp_fu_12063_p0 = sext_ln215_4_fu_8792_p1;

assign grp_fu_12072_p0 = sext_ln215_8_fu_8801_p1;

assign grp_fu_12081_p0 = sext_ln215_12_fu_8810_p1;

assign grp_fu_12090_p0 = sext_ln215_16_fu_8819_p1;

assign grp_fu_12099_p0 = sext_ln215_20_fu_8828_p1;

assign grp_fu_12108_p0 = sext_ln215_24_fu_8837_p1;

assign grp_fu_12117_p0 = sext_ln215_28_fu_8846_p1;

assign grp_fu_12126_p0 = sext_ln215_fu_8783_p1;

assign grp_fu_12135_p0 = sext_ln215_4_fu_8792_p1;

assign grp_fu_12144_p0 = sext_ln215_8_fu_8801_p1;

assign grp_fu_12153_p0 = sext_ln215_12_fu_8810_p1;

assign grp_fu_12162_p0 = sext_ln215_16_fu_8819_p1;

assign grp_fu_12171_p0 = sext_ln215_20_fu_8828_p1;

assign grp_fu_12180_p0 = sext_ln215_24_fu_8837_p1;

assign grp_fu_12189_p0 = sext_ln215_28_fu_8846_p1;

assign grp_fu_12198_p0 = sext_ln215_fu_8783_p1;

assign grp_fu_12207_p0 = sext_ln215_4_fu_8792_p1;

assign grp_fu_12216_p0 = sext_ln215_8_fu_8801_p1;

assign grp_fu_12225_p0 = sext_ln215_12_fu_8810_p1;

assign grp_fu_12234_p0 = sext_ln215_16_fu_8819_p1;

assign grp_fu_12243_p0 = sext_ln215_20_fu_8828_p1;

assign grp_fu_12252_p0 = sext_ln215_24_fu_8837_p1;

assign grp_fu_12261_p0 = sext_ln215_28_fu_8846_p1;

assign grp_fu_12270_p0 = sext_ln215_fu_8783_p1;

assign grp_fu_12279_p0 = sext_ln215_4_fu_8792_p1;

assign grp_fu_12288_p0 = sext_ln215_8_fu_8801_p1;

assign grp_fu_12297_p0 = sext_ln215_12_fu_8810_p1;

assign grp_fu_12306_p0 = sext_ln215_16_fu_8819_p1;

assign grp_fu_12315_p0 = sext_ln215_20_fu_8828_p1;

assign grp_fu_12324_p0 = sext_ln215_24_fu_8837_p1;

assign grp_fu_12333_p0 = sext_ln215_28_fu_8846_p1;

assign grp_fu_12342_p0 = sext_ln215_fu_8783_p1;

assign grp_fu_12351_p0 = sext_ln215_4_fu_8792_p1;

assign grp_fu_12360_p0 = sext_ln215_8_fu_8801_p1;

assign grp_fu_12369_p0 = sext_ln215_12_fu_8810_p1;

assign grp_fu_12378_p0 = sext_ln215_16_fu_8819_p1;

assign grp_fu_12387_p0 = sext_ln215_20_fu_8828_p1;

assign grp_fu_12396_p0 = sext_ln215_24_fu_8837_p1;

assign grp_fu_12405_p0 = sext_ln215_28_fu_8846_p1;

assign grp_fu_12414_p0 = sext_ln215_fu_8783_p1;

assign grp_fu_12423_p0 = sext_ln215_4_fu_8792_p1;

assign grp_fu_12432_p0 = sext_ln215_8_fu_8801_p1;

assign grp_fu_12441_p0 = sext_ln215_12_fu_8810_p1;

assign grp_fu_12450_p0 = sext_ln215_16_fu_8819_p1;

assign grp_fu_12459_p0 = sext_ln215_20_fu_8828_p1;

assign grp_fu_12468_p0 = sext_ln215_24_fu_8837_p1;

assign grp_fu_12477_p0 = sext_ln215_28_fu_8846_p1;

assign grp_fu_12486_p0 = sext_ln215_fu_8783_p1;

assign grp_fu_12495_p0 = sext_ln215_4_fu_8792_p1;

assign grp_fu_12504_p0 = sext_ln215_8_fu_8801_p1;

assign grp_fu_12513_p0 = sext_ln215_12_fu_8810_p1;

assign grp_fu_12522_p0 = sext_ln215_16_fu_8819_p1;

assign grp_fu_12531_p0 = sext_ln215_20_fu_8828_p1;

assign grp_fu_12540_p0 = sext_ln215_24_fu_8837_p1;

assign grp_fu_12549_p0 = sext_ln215_28_fu_8846_p1;

assign grp_fu_12558_p0 = sext_ln215_fu_8783_p1;

assign grp_fu_12567_p0 = sext_ln215_4_fu_8792_p1;

assign grp_fu_12576_p0 = sext_ln215_8_fu_8801_p1;

assign grp_fu_12585_p0 = sext_ln215_12_fu_8810_p1;

assign grp_fu_12594_p0 = sext_ln215_16_fu_8819_p1;

assign grp_fu_12603_p0 = sext_ln215_20_fu_8828_p1;

assign grp_fu_12612_p0 = sext_ln215_24_fu_8837_p1;

assign grp_fu_12621_p0 = sext_ln215_28_fu_8846_p1;

assign grp_fu_12630_p0 = sext_ln215_fu_8783_p1;

assign grp_fu_12639_p0 = sext_ln215_4_fu_8792_p1;

assign grp_fu_12648_p0 = sext_ln215_8_fu_8801_p1;

assign grp_fu_12657_p0 = sext_ln215_12_fu_8810_p1;

assign grp_fu_12666_p0 = sext_ln215_16_fu_8819_p1;

assign grp_fu_12675_p0 = sext_ln215_20_fu_8828_p1;

assign grp_fu_12684_p0 = sext_ln215_24_fu_8837_p1;

assign grp_fu_12693_p0 = sext_ln215_28_fu_8846_p1;

assign grp_fu_12702_p0 = sext_ln215_fu_8783_p1;

assign grp_fu_12711_p0 = sext_ln215_4_fu_8792_p1;

assign grp_fu_12720_p0 = sext_ln215_8_fu_8801_p1;

assign grp_fu_12729_p0 = sext_ln215_12_fu_8810_p1;

assign grp_fu_12738_p0 = sext_ln215_16_fu_8819_p1;

assign grp_fu_12747_p0 = sext_ln215_20_fu_8828_p1;

assign grp_fu_12756_p0 = sext_ln215_24_fu_8837_p1;

assign grp_fu_12765_p0 = sext_ln215_28_fu_8846_p1;

assign grp_fu_1317_p4 = {{gemm_queue_V_V_TDATA_int[20:8]}};

assign grp_fu_1327_p4 = {{gemm_queue_V_V_TDATA_int[34:21]}};

assign grp_fu_1337_p4 = {{grp_fu_1337_p1[95:80]}};

assign grp_fu_1347_p4 = {{tmp_V_reg_12779[62:49]}};

assign grp_fu_1356_p4 = {{tmp_V_reg_12779[48:35]}};

assign grp_fu_1365_p4 = {{tmp_V_reg_12779[85:75]}};

assign grp_fu_1374_p4 = {{tmp_V_reg_12779[107:97]}};

assign grp_fu_1383_p4 = {{tmp_V_reg_12779[74:64]}};

assign grp_fu_1392_p4 = {{tmp_V_reg_12779[96:86]}};

assign grp_fu_1401_p4 = {{uop_mem_V_q0[21:11]}};

assign grp_fu_1890_p0 = grp_fu_1890_p00;

assign grp_fu_1890_p00 = $unsigned(sext_ln343_fu_1879_p1);

assign grp_fu_1890_p1 = grp_fu_1890_p10;

assign grp_fu_1890_p10 = grp_fu_1347_p4;

assign grp_fu_1903_p0 = grp_fu_1903_p00;

assign grp_fu_1903_p00 = mul_ln331_reg_12992;

assign grp_fu_1903_p1 = grp_fu_1903_p10;

assign grp_fu_1903_p10 = grp_fu_1356_p4;

assign grp_fu_4615_p0 = grp_fu_4615_p00;

assign grp_fu_4615_p00 = grp_fu_1347_p4;

assign grp_fu_4615_p1 = grp_fu_4615_p10;

assign grp_fu_4615_p10 = $unsigned(sext_ln253_fu_4604_p1);

assign grp_fu_4628_p0 = grp_fu_4628_p00;

assign grp_fu_4628_p00 = grp_fu_1356_p4;

assign grp_fu_4628_p1 = grp_fu_4628_p10;

assign grp_fu_4628_p10 = mul_ln240_reg_13836;

assign icmp_ln253_fu_4691_p2 = ((indvar_flatten15_reg_1163 == mul_ln240_1_reg_13914) ? 1'b1 : 1'b0);

assign icmp_ln259_fu_4707_p2 = ((indvar_flatten_reg_1207 == mul_ln240_reg_13836) ? 1'b1 : 1'b0);

assign icmp_ln262_1_fu_4784_p2 = (($signed(ap_phi_mux_upc_0_i_phi_fu_1257_p4) < $signed(zext_ln262_1_reg_13859)) ? 1'b1 : 1'b0);

assign icmp_ln262_fu_1785_p2 = ((zext_ln262_3_fu_1757_p1 < grp_fu_1327_p4) ? 1'b1 : 1'b0);

assign icmp_ln343_fu_1993_p2 = ((ap_phi_mux_indvar_flatten71_phi_fu_1092_p4 == mul_ln331_1_reg_13224) ? 1'b1 : 1'b0);

assign icmp_ln348_fu_2009_p2 = ((ap_phi_mux_indvar_flatten25_phi_fu_1125_p4 == mul_ln331_reg_12992) ? 1'b1 : 1'b0);

assign icmp_ln350_1_fu_2042_p2 = (($signed(ap_phi_mux_upc_0_i180_phi_fu_1157_p4) < $signed(zext_ln350_1_reg_13015)) ? 1'b1 : 1'b0);

assign icmp_ln350_fu_1747_p2 = ((zext_ln350_3_fu_1719_p1 < grp_fu_1327_p4) ? 1'b1 : 1'b0);

assign icmp_ln378_fu_1933_p2 = ((trunc_ln_fu_1924_p4 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln385_fu_1939_p2 = ((trunc_ln_fu_1924_p4 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln391_fu_1987_p2 = ((trunc_ln_fu_1924_p4 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln470_fu_1691_p2 = ((trunc_ln470_fu_1687_p1 == 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln473_fu_1697_p2 = ((trunc_ln470_fu_1687_p1 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln477_fu_1821_p2 = ((trunc_ln3_fu_1811_p4 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln480_fu_11590_p2 = ((phi_ln480_reg_1306 == reg_1569) ? 1'b1 : 1'b0);

assign icmp_ln482_fu_1827_p2 = ((trunc_ln3_fu_1811_p4 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln493_fu_1703_p2 = ((trunc_ln470_fu_1687_p1 == 3'd2) ? 1'b1 : 1'b0);

assign icmp_ln495_fu_1709_p2 = ((trunc_ln470_fu_1687_p1 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln86_fu_11348_p2 = ((i_op_assign_reg_1284 == trunc_ln304_1_reg_12956) ? 1'b1 : 1'b0);

assign icmp_ln887_10_fu_3813_p2 = (($signed(reg_1609) < $signed(src_1_V_10_reg_13628)) ? 1'b1 : 1'b0);

assign icmp_ln887_11_fu_3930_p2 = (($signed(reg_1613) < $signed(src_1_V_11_reg_13647)) ? 1'b1 : 1'b0);

assign icmp_ln887_12_fu_4047_p2 = (($signed(reg_1617) < $signed(src_1_V_12_reg_13666)) ? 1'b1 : 1'b0);

assign icmp_ln887_13_fu_4164_p2 = (($signed(reg_1621) < $signed(src_1_V_13_reg_13685)) ? 1'b1 : 1'b0);

assign icmp_ln887_14_fu_4281_p2 = (($signed(reg_1625) < $signed(src_1_V_14_reg_13704)) ? 1'b1 : 1'b0);

assign icmp_ln887_15_fu_4398_p2 = (($signed(reg_1629) < $signed(src_1_V_15_reg_13723)) ? 1'b1 : 1'b0);

assign icmp_ln887_1_fu_2576_p2 = (($signed(reg_1573) < $signed(src_1_V_1_reg_13377)) ? 1'b1 : 1'b0);

assign icmp_ln887_2_fu_2693_p2 = (($signed(reg_1577) < $signed(src_1_V_2_reg_13396)) ? 1'b1 : 1'b0);

assign icmp_ln887_3_fu_2810_p2 = (($signed(reg_1581) < $signed(src_1_V_3_reg_13415)) ? 1'b1 : 1'b0);

assign icmp_ln887_4_fu_2927_p2 = (($signed(reg_1585) < $signed(src_1_V_4_reg_13434)) ? 1'b1 : 1'b0);

assign icmp_ln887_5_fu_3044_p2 = (($signed(reg_1589) < $signed(src_1_V_5_reg_13453)) ? 1'b1 : 1'b0);

assign icmp_ln887_6_fu_3161_p2 = (($signed(reg_1593) < $signed(src_1_V_6_reg_13472)) ? 1'b1 : 1'b0);

assign icmp_ln887_7_fu_3278_p2 = (($signed(reg_1597) < $signed(src_1_V_7_reg_13491)) ? 1'b1 : 1'b0);

assign icmp_ln887_8_fu_3579_p2 = (($signed(reg_1601) < $signed(src_1_V_8_reg_13590)) ? 1'b1 : 1'b0);

assign icmp_ln887_9_fu_3696_p2 = (($signed(reg_1605) < $signed(src_1_V_9_reg_13609)) ? 1'b1 : 1'b0);

assign icmp_ln887_fu_2466_p2 = (($signed(dst_tensor_0_0_V_reg_13347) < $signed(select_ln375_reg_13358)) ? 1'b1 : 1'b0);

assign icmp_ln89_1_fu_11439_p2 = ((shl_ln89_2_fu_11426_p3 > empty_16_fu_11433_p2) ? 1'b1 : 1'b0);

assign icmp_ln89_fu_11392_p2 = ((phi_ln89_reg_1295 == shl_ln_reg_12966) ? 1'b1 : 1'b0);

assign inp_mem_V_Addr_A = inp_mem_V_Addr_A_orig << 32'd4;

assign inp_mem_V_Addr_A_orig = zext_ln544_1_fu_4897_p1;

assign inp_mem_V_Clk_A = ap_clk;

assign inp_mem_V_Din_A = 128'd0;

assign inp_mem_V_Rst_A = ap_rst_n_inv;

assign inp_mem_V_WEN_A = 16'd0;

assign lshr_ln89_fu_11511_p2 = 512'd13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084095 >> zext_ln89_7_fu_11495_p1;

assign mask_fu_1661_p4 = {{gemm_queue_V_V_TDATA_int[111:96]}};

assign mul_ln1352_101_fu_8080_p0 = sext_ln215_10_fu_7627_p1;

assign mul_ln1352_101_fu_8080_p1 = w_tensor_i_6_5_reg_14540;

assign mul_ln1352_101_fu_8080_p2 = ($signed(mul_ln1352_101_fu_8080_p0) * $signed(mul_ln1352_101_fu_8080_p1));

assign mul_ln1352_103_fu_8089_p0 = sext_ln215_14_fu_7639_p1;

assign mul_ln1352_103_fu_8089_p1 = w_tensor_i_6_7_reg_14550;

assign mul_ln1352_103_fu_8089_p2 = ($signed(mul_ln1352_103_fu_8089_p0) * $signed(mul_ln1352_103_fu_8089_p1));

assign mul_ln1352_105_fu_8098_p0 = sext_ln215_18_fu_7651_p1;

assign mul_ln1352_105_fu_8098_p1 = w_tensor_i_6_9_reg_14560;

assign mul_ln1352_105_fu_8098_p2 = ($signed(mul_ln1352_105_fu_8098_p0) * $signed(mul_ln1352_105_fu_8098_p1));

assign mul_ln1352_107_fu_8107_p0 = sext_ln215_22_fu_7663_p1;

assign mul_ln1352_107_fu_8107_p1 = w_tensor_i_6_10_reg_14570;

assign mul_ln1352_107_fu_8107_p2 = ($signed(mul_ln1352_107_fu_8107_p0) * $signed(mul_ln1352_107_fu_8107_p1));

assign mul_ln1352_109_fu_8116_p0 = sext_ln215_26_fu_7675_p1;

assign mul_ln1352_109_fu_8116_p1 = w_tensor_i_6_12_reg_14580;

assign mul_ln1352_109_fu_8116_p2 = ($signed(mul_ln1352_109_fu_8116_p0) * $signed(mul_ln1352_109_fu_8116_p1));

assign mul_ln1352_111_fu_8125_p0 = sext_ln215_30_fu_7687_p1;

assign mul_ln1352_111_fu_8125_p1 = w_tensor_i_6_14_reg_14590;

assign mul_ln1352_111_fu_8125_p2 = ($signed(mul_ln1352_111_fu_8125_p0) * $signed(mul_ln1352_111_fu_8125_p1));

assign mul_ln1352_113_fu_8134_p0 = sext_ln215_2_fu_7603_p1;

assign mul_ln1352_113_fu_8134_p1 = w_tensor_i_7_1_reg_14600;

assign mul_ln1352_113_fu_8134_p2 = ($signed(mul_ln1352_113_fu_8134_p0) * $signed(mul_ln1352_113_fu_8134_p1));

assign mul_ln1352_115_fu_8143_p0 = sext_ln215_6_fu_7615_p1;

assign mul_ln1352_115_fu_8143_p1 = w_tensor_i_7_3_reg_14610;

assign mul_ln1352_115_fu_8143_p2 = ($signed(mul_ln1352_115_fu_8143_p0) * $signed(mul_ln1352_115_fu_8143_p1));

assign mul_ln1352_117_fu_8152_p0 = sext_ln215_10_fu_7627_p1;

assign mul_ln1352_117_fu_8152_p1 = w_tensor_i_7_5_reg_14620;

assign mul_ln1352_117_fu_8152_p2 = ($signed(mul_ln1352_117_fu_8152_p0) * $signed(mul_ln1352_117_fu_8152_p1));

assign mul_ln1352_119_fu_8161_p0 = sext_ln215_14_fu_7639_p1;

assign mul_ln1352_119_fu_8161_p1 = w_tensor_i_7_7_reg_14630;

assign mul_ln1352_119_fu_8161_p2 = ($signed(mul_ln1352_119_fu_8161_p0) * $signed(mul_ln1352_119_fu_8161_p1));

assign mul_ln1352_11_fu_7669_p0 = sext_ln215_22_fu_7663_p1;

assign mul_ln1352_11_fu_7669_p1 = w_tensor_i_0_8_reg_14090;

assign mul_ln1352_11_fu_7669_p2 = ($signed(mul_ln1352_11_fu_7669_p0) * $signed(mul_ln1352_11_fu_7669_p1));

assign mul_ln1352_121_fu_8170_p0 = sext_ln215_18_fu_7651_p1;

assign mul_ln1352_121_fu_8170_p1 = w_tensor_i_7_9_reg_14640;

assign mul_ln1352_121_fu_8170_p2 = ($signed(mul_ln1352_121_fu_8170_p0) * $signed(mul_ln1352_121_fu_8170_p1));

assign mul_ln1352_123_fu_8179_p0 = sext_ln215_22_fu_7663_p1;

assign mul_ln1352_123_fu_8179_p1 = w_tensor_i_7_10_reg_14650;

assign mul_ln1352_123_fu_8179_p2 = ($signed(mul_ln1352_123_fu_8179_p0) * $signed(mul_ln1352_123_fu_8179_p1));

assign mul_ln1352_125_fu_8188_p0 = sext_ln215_26_fu_7675_p1;

assign mul_ln1352_125_fu_8188_p1 = w_tensor_i_7_12_reg_14660;

assign mul_ln1352_125_fu_8188_p2 = ($signed(mul_ln1352_125_fu_8188_p0) * $signed(mul_ln1352_125_fu_8188_p1));

assign mul_ln1352_127_fu_8197_p0 = sext_ln215_30_fu_7687_p1;

assign mul_ln1352_127_fu_8197_p1 = w_tensor_i_7_14_reg_14670;

assign mul_ln1352_127_fu_8197_p2 = ($signed(mul_ln1352_127_fu_8197_p0) * $signed(mul_ln1352_127_fu_8197_p1));

assign mul_ln1352_129_fu_8206_p0 = sext_ln215_2_fu_7603_p1;

assign mul_ln1352_129_fu_8206_p1 = w_tensor_i_8_1_reg_14680;

assign mul_ln1352_129_fu_8206_p2 = ($signed(mul_ln1352_129_fu_8206_p0) * $signed(mul_ln1352_129_fu_8206_p1));

assign mul_ln1352_131_fu_8215_p0 = sext_ln215_6_fu_7615_p1;

assign mul_ln1352_131_fu_8215_p1 = w_tensor_i_8_3_reg_14690;

assign mul_ln1352_131_fu_8215_p2 = ($signed(mul_ln1352_131_fu_8215_p0) * $signed(mul_ln1352_131_fu_8215_p1));

assign mul_ln1352_133_fu_8224_p0 = sext_ln215_10_fu_7627_p1;

assign mul_ln1352_133_fu_8224_p1 = w_tensor_i_8_5_reg_14700;

assign mul_ln1352_133_fu_8224_p2 = ($signed(mul_ln1352_133_fu_8224_p0) * $signed(mul_ln1352_133_fu_8224_p1));

assign mul_ln1352_135_fu_8233_p0 = sext_ln215_14_fu_7639_p1;

assign mul_ln1352_135_fu_8233_p1 = w_tensor_i_8_7_reg_14710;

assign mul_ln1352_135_fu_8233_p2 = ($signed(mul_ln1352_135_fu_8233_p0) * $signed(mul_ln1352_135_fu_8233_p1));

assign mul_ln1352_137_fu_8242_p0 = sext_ln215_18_fu_7651_p1;

assign mul_ln1352_137_fu_8242_p1 = w_tensor_i_8_9_reg_14720;

assign mul_ln1352_137_fu_8242_p2 = ($signed(mul_ln1352_137_fu_8242_p0) * $signed(mul_ln1352_137_fu_8242_p1));

assign mul_ln1352_139_fu_8251_p0 = sext_ln215_22_fu_7663_p1;

assign mul_ln1352_139_fu_8251_p1 = w_tensor_i_8_10_reg_14730;

assign mul_ln1352_139_fu_8251_p2 = ($signed(mul_ln1352_139_fu_8251_p0) * $signed(mul_ln1352_139_fu_8251_p1));

assign mul_ln1352_13_fu_7681_p0 = sext_ln215_26_fu_7675_p1;

assign mul_ln1352_13_fu_7681_p1 = w_tensor_i_0_11_reg_14100;

assign mul_ln1352_13_fu_7681_p2 = ($signed(mul_ln1352_13_fu_7681_p0) * $signed(mul_ln1352_13_fu_7681_p1));

assign mul_ln1352_141_fu_8260_p0 = sext_ln215_26_fu_7675_p1;

assign mul_ln1352_141_fu_8260_p1 = w_tensor_i_8_12_reg_14740;

assign mul_ln1352_141_fu_8260_p2 = ($signed(mul_ln1352_141_fu_8260_p0) * $signed(mul_ln1352_141_fu_8260_p1));

assign mul_ln1352_143_fu_8269_p0 = sext_ln215_30_fu_7687_p1;

assign mul_ln1352_143_fu_8269_p1 = w_tensor_i_8_14_reg_14750;

assign mul_ln1352_143_fu_8269_p2 = ($signed(mul_ln1352_143_fu_8269_p0) * $signed(mul_ln1352_143_fu_8269_p1));

assign mul_ln1352_145_fu_8278_p0 = sext_ln215_2_fu_7603_p1;

assign mul_ln1352_145_fu_8278_p1 = w_tensor_i_9_1_reg_14760;

assign mul_ln1352_145_fu_8278_p2 = ($signed(mul_ln1352_145_fu_8278_p0) * $signed(mul_ln1352_145_fu_8278_p1));

assign mul_ln1352_147_fu_8287_p0 = sext_ln215_6_fu_7615_p1;

assign mul_ln1352_147_fu_8287_p1 = w_tensor_i_9_3_reg_14770;

assign mul_ln1352_147_fu_8287_p2 = ($signed(mul_ln1352_147_fu_8287_p0) * $signed(mul_ln1352_147_fu_8287_p1));

assign mul_ln1352_149_fu_8296_p0 = sext_ln215_10_fu_7627_p1;

assign mul_ln1352_149_fu_8296_p1 = w_tensor_i_9_5_reg_14780;

assign mul_ln1352_149_fu_8296_p2 = ($signed(mul_ln1352_149_fu_8296_p0) * $signed(mul_ln1352_149_fu_8296_p1));

assign mul_ln1352_151_fu_8305_p0 = sext_ln215_14_fu_7639_p1;

assign mul_ln1352_151_fu_8305_p1 = w_tensor_i_9_7_reg_14790;

assign mul_ln1352_151_fu_8305_p2 = ($signed(mul_ln1352_151_fu_8305_p0) * $signed(mul_ln1352_151_fu_8305_p1));

assign mul_ln1352_153_fu_8314_p0 = sext_ln215_18_fu_7651_p1;

assign mul_ln1352_153_fu_8314_p1 = w_tensor_i_9_9_reg_14800;

assign mul_ln1352_153_fu_8314_p2 = ($signed(mul_ln1352_153_fu_8314_p0) * $signed(mul_ln1352_153_fu_8314_p1));

assign mul_ln1352_155_fu_8323_p0 = sext_ln215_22_fu_7663_p1;

assign mul_ln1352_155_fu_8323_p1 = w_tensor_i_9_10_reg_14810;

assign mul_ln1352_155_fu_8323_p2 = ($signed(mul_ln1352_155_fu_8323_p0) * $signed(mul_ln1352_155_fu_8323_p1));

assign mul_ln1352_157_fu_8332_p0 = sext_ln215_26_fu_7675_p1;

assign mul_ln1352_157_fu_8332_p1 = w_tensor_i_9_12_reg_14820;

assign mul_ln1352_157_fu_8332_p2 = ($signed(mul_ln1352_157_fu_8332_p0) * $signed(mul_ln1352_157_fu_8332_p1));

assign mul_ln1352_159_fu_8341_p0 = sext_ln215_30_fu_7687_p1;

assign mul_ln1352_159_fu_8341_p1 = w_tensor_i_9_14_reg_14830;

assign mul_ln1352_159_fu_8341_p2 = ($signed(mul_ln1352_159_fu_8341_p0) * $signed(mul_ln1352_159_fu_8341_p1));

assign mul_ln1352_15_fu_7693_p0 = sext_ln215_30_fu_7687_p1;

assign mul_ln1352_15_fu_7693_p1 = w_tensor_i_0_13_reg_14110;

assign mul_ln1352_15_fu_7693_p2 = ($signed(mul_ln1352_15_fu_7693_p0) * $signed(mul_ln1352_15_fu_7693_p1));

assign mul_ln1352_161_fu_8350_p0 = sext_ln215_2_fu_7603_p1;

assign mul_ln1352_161_fu_8350_p1 = w_tensor_i_10_1_reg_14840;

assign mul_ln1352_161_fu_8350_p2 = ($signed(mul_ln1352_161_fu_8350_p0) * $signed(mul_ln1352_161_fu_8350_p1));

assign mul_ln1352_163_fu_8359_p0 = sext_ln215_6_fu_7615_p1;

assign mul_ln1352_163_fu_8359_p1 = w_tensor_i_10_3_reg_14850;

assign mul_ln1352_163_fu_8359_p2 = ($signed(mul_ln1352_163_fu_8359_p0) * $signed(mul_ln1352_163_fu_8359_p1));

assign mul_ln1352_165_fu_8368_p0 = sext_ln215_10_fu_7627_p1;

assign mul_ln1352_165_fu_8368_p1 = w_tensor_i_10_5_reg_14860;

assign mul_ln1352_165_fu_8368_p2 = ($signed(mul_ln1352_165_fu_8368_p0) * $signed(mul_ln1352_165_fu_8368_p1));

assign mul_ln1352_167_fu_8377_p0 = sext_ln215_14_fu_7639_p1;

assign mul_ln1352_167_fu_8377_p1 = w_tensor_i_10_7_reg_14870;

assign mul_ln1352_167_fu_8377_p2 = ($signed(mul_ln1352_167_fu_8377_p0) * $signed(mul_ln1352_167_fu_8377_p1));

assign mul_ln1352_169_fu_8386_p0 = sext_ln215_18_fu_7651_p1;

assign mul_ln1352_169_fu_8386_p1 = w_tensor_i_10_9_reg_14880;

assign mul_ln1352_169_fu_8386_p2 = ($signed(mul_ln1352_169_fu_8386_p0) * $signed(mul_ln1352_169_fu_8386_p1));

assign mul_ln1352_171_fu_8395_p0 = sext_ln215_22_fu_7663_p1;

assign mul_ln1352_171_fu_8395_p1 = w_tensor_i_10_10_reg_14890;

assign mul_ln1352_171_fu_8395_p2 = ($signed(mul_ln1352_171_fu_8395_p0) * $signed(mul_ln1352_171_fu_8395_p1));

assign mul_ln1352_173_fu_8404_p0 = sext_ln215_26_fu_7675_p1;

assign mul_ln1352_173_fu_8404_p1 = w_tensor_i_10_12_reg_14900;

assign mul_ln1352_173_fu_8404_p2 = ($signed(mul_ln1352_173_fu_8404_p0) * $signed(mul_ln1352_173_fu_8404_p1));

assign mul_ln1352_175_fu_8413_p0 = sext_ln215_30_fu_7687_p1;

assign mul_ln1352_175_fu_8413_p1 = w_tensor_i_10_14_reg_14910;

assign mul_ln1352_175_fu_8413_p2 = ($signed(mul_ln1352_175_fu_8413_p0) * $signed(mul_ln1352_175_fu_8413_p1));

assign mul_ln1352_177_fu_8422_p0 = sext_ln215_2_fu_7603_p1;

assign mul_ln1352_177_fu_8422_p1 = w_tensor_i_11_1_reg_14920;

assign mul_ln1352_177_fu_8422_p2 = ($signed(mul_ln1352_177_fu_8422_p0) * $signed(mul_ln1352_177_fu_8422_p1));

assign mul_ln1352_179_fu_8431_p0 = sext_ln215_6_fu_7615_p1;

assign mul_ln1352_179_fu_8431_p1 = w_tensor_i_11_3_reg_14930;

assign mul_ln1352_179_fu_8431_p2 = ($signed(mul_ln1352_179_fu_8431_p0) * $signed(mul_ln1352_179_fu_8431_p1));

assign mul_ln1352_17_fu_7702_p0 = sext_ln215_2_fu_7603_p1;

assign mul_ln1352_17_fu_7702_p1 = w_tensor_i_1_1_reg_14120;

assign mul_ln1352_17_fu_7702_p2 = ($signed(mul_ln1352_17_fu_7702_p0) * $signed(mul_ln1352_17_fu_7702_p1));

assign mul_ln1352_181_fu_8440_p0 = sext_ln215_10_fu_7627_p1;

assign mul_ln1352_181_fu_8440_p1 = w_tensor_i_11_5_reg_14940;

assign mul_ln1352_181_fu_8440_p2 = ($signed(mul_ln1352_181_fu_8440_p0) * $signed(mul_ln1352_181_fu_8440_p1));

assign mul_ln1352_183_fu_8449_p0 = sext_ln215_14_fu_7639_p1;

assign mul_ln1352_183_fu_8449_p1 = w_tensor_i_11_7_reg_14950;

assign mul_ln1352_183_fu_8449_p2 = ($signed(mul_ln1352_183_fu_8449_p0) * $signed(mul_ln1352_183_fu_8449_p1));

assign mul_ln1352_185_fu_8458_p0 = sext_ln215_18_fu_7651_p1;

assign mul_ln1352_185_fu_8458_p1 = w_tensor_i_11_9_reg_14960;

assign mul_ln1352_185_fu_8458_p2 = ($signed(mul_ln1352_185_fu_8458_p0) * $signed(mul_ln1352_185_fu_8458_p1));

assign mul_ln1352_187_fu_8467_p0 = sext_ln215_22_fu_7663_p1;

assign mul_ln1352_187_fu_8467_p1 = w_tensor_i_11_10_reg_14970;

assign mul_ln1352_187_fu_8467_p2 = ($signed(mul_ln1352_187_fu_8467_p0) * $signed(mul_ln1352_187_fu_8467_p1));

assign mul_ln1352_189_fu_8476_p0 = sext_ln215_26_fu_7675_p1;

assign mul_ln1352_189_fu_8476_p1 = w_tensor_i_11_12_reg_14980;

assign mul_ln1352_189_fu_8476_p2 = ($signed(mul_ln1352_189_fu_8476_p0) * $signed(mul_ln1352_189_fu_8476_p1));

assign mul_ln1352_191_fu_8485_p0 = sext_ln215_30_fu_7687_p1;

assign mul_ln1352_191_fu_8485_p1 = w_tensor_i_11_14_reg_14990;

assign mul_ln1352_191_fu_8485_p2 = ($signed(mul_ln1352_191_fu_8485_p0) * $signed(mul_ln1352_191_fu_8485_p1));

assign mul_ln1352_193_fu_8494_p0 = sext_ln215_2_fu_7603_p1;

assign mul_ln1352_193_fu_8494_p1 = w_tensor_i_12_1_reg_15000;

assign mul_ln1352_193_fu_8494_p2 = ($signed(mul_ln1352_193_fu_8494_p0) * $signed(mul_ln1352_193_fu_8494_p1));

assign mul_ln1352_195_fu_8503_p0 = sext_ln215_6_fu_7615_p1;

assign mul_ln1352_195_fu_8503_p1 = w_tensor_i_12_3_reg_15010;

assign mul_ln1352_195_fu_8503_p2 = ($signed(mul_ln1352_195_fu_8503_p0) * $signed(mul_ln1352_195_fu_8503_p1));

assign mul_ln1352_197_fu_8512_p0 = sext_ln215_10_fu_7627_p1;

assign mul_ln1352_197_fu_8512_p1 = w_tensor_i_12_5_reg_15020;

assign mul_ln1352_197_fu_8512_p2 = ($signed(mul_ln1352_197_fu_8512_p0) * $signed(mul_ln1352_197_fu_8512_p1));

assign mul_ln1352_199_fu_8521_p0 = sext_ln215_14_fu_7639_p1;

assign mul_ln1352_199_fu_8521_p1 = w_tensor_i_12_7_reg_15030;

assign mul_ln1352_199_fu_8521_p2 = ($signed(mul_ln1352_199_fu_8521_p0) * $signed(mul_ln1352_199_fu_8521_p1));

assign mul_ln1352_19_fu_7711_p0 = sext_ln215_6_fu_7615_p1;

assign mul_ln1352_19_fu_7711_p1 = w_tensor_i_1_3_reg_14130;

assign mul_ln1352_19_fu_7711_p2 = ($signed(mul_ln1352_19_fu_7711_p0) * $signed(mul_ln1352_19_fu_7711_p1));

assign mul_ln1352_1_fu_7609_p0 = sext_ln215_2_fu_7603_p1;

assign mul_ln1352_1_fu_7609_p1 = w_tensor_i_0_1_reg_14040;

assign mul_ln1352_1_fu_7609_p2 = ($signed(mul_ln1352_1_fu_7609_p0) * $signed(mul_ln1352_1_fu_7609_p1));

assign mul_ln1352_201_fu_8530_p0 = sext_ln215_18_fu_7651_p1;

assign mul_ln1352_201_fu_8530_p1 = w_tensor_i_12_9_reg_15040;

assign mul_ln1352_201_fu_8530_p2 = ($signed(mul_ln1352_201_fu_8530_p0) * $signed(mul_ln1352_201_fu_8530_p1));

assign mul_ln1352_203_fu_8539_p0 = sext_ln215_22_fu_7663_p1;

assign mul_ln1352_203_fu_8539_p1 = w_tensor_i_12_10_reg_15050;

assign mul_ln1352_203_fu_8539_p2 = ($signed(mul_ln1352_203_fu_8539_p0) * $signed(mul_ln1352_203_fu_8539_p1));

assign mul_ln1352_205_fu_8548_p0 = sext_ln215_26_fu_7675_p1;

assign mul_ln1352_205_fu_8548_p1 = w_tensor_i_12_12_reg_15060;

assign mul_ln1352_205_fu_8548_p2 = ($signed(mul_ln1352_205_fu_8548_p0) * $signed(mul_ln1352_205_fu_8548_p1));

assign mul_ln1352_207_fu_8557_p0 = sext_ln215_30_fu_7687_p1;

assign mul_ln1352_207_fu_8557_p1 = w_tensor_i_12_14_reg_15070;

assign mul_ln1352_207_fu_8557_p2 = ($signed(mul_ln1352_207_fu_8557_p0) * $signed(mul_ln1352_207_fu_8557_p1));

assign mul_ln1352_209_fu_8566_p0 = sext_ln215_2_fu_7603_p1;

assign mul_ln1352_209_fu_8566_p1 = w_tensor_i_13_1_reg_15080;

assign mul_ln1352_209_fu_8566_p2 = ($signed(mul_ln1352_209_fu_8566_p0) * $signed(mul_ln1352_209_fu_8566_p1));

assign mul_ln1352_211_fu_8575_p0 = sext_ln215_6_fu_7615_p1;

assign mul_ln1352_211_fu_8575_p1 = w_tensor_i_13_3_reg_15090;

assign mul_ln1352_211_fu_8575_p2 = ($signed(mul_ln1352_211_fu_8575_p0) * $signed(mul_ln1352_211_fu_8575_p1));

assign mul_ln1352_213_fu_8584_p0 = sext_ln215_10_fu_7627_p1;

assign mul_ln1352_213_fu_8584_p1 = w_tensor_i_13_5_reg_15100;

assign mul_ln1352_213_fu_8584_p2 = ($signed(mul_ln1352_213_fu_8584_p0) * $signed(mul_ln1352_213_fu_8584_p1));

assign mul_ln1352_215_fu_8593_p0 = sext_ln215_14_fu_7639_p1;

assign mul_ln1352_215_fu_8593_p1 = w_tensor_i_13_7_reg_15110;

assign mul_ln1352_215_fu_8593_p2 = ($signed(mul_ln1352_215_fu_8593_p0) * $signed(mul_ln1352_215_fu_8593_p1));

assign mul_ln1352_217_fu_8602_p0 = sext_ln215_18_fu_7651_p1;

assign mul_ln1352_217_fu_8602_p1 = w_tensor_i_13_9_reg_15120;

assign mul_ln1352_217_fu_8602_p2 = ($signed(mul_ln1352_217_fu_8602_p0) * $signed(mul_ln1352_217_fu_8602_p1));

assign mul_ln1352_219_fu_8611_p0 = sext_ln215_22_fu_7663_p1;

assign mul_ln1352_219_fu_8611_p1 = w_tensor_i_13_10_reg_15130;

assign mul_ln1352_219_fu_8611_p2 = ($signed(mul_ln1352_219_fu_8611_p0) * $signed(mul_ln1352_219_fu_8611_p1));

assign mul_ln1352_21_fu_7720_p0 = sext_ln215_10_fu_7627_p1;

assign mul_ln1352_21_fu_7720_p1 = w_tensor_i_1_5_reg_14140;

assign mul_ln1352_21_fu_7720_p2 = ($signed(mul_ln1352_21_fu_7720_p0) * $signed(mul_ln1352_21_fu_7720_p1));

assign mul_ln1352_221_fu_8620_p0 = sext_ln215_26_fu_7675_p1;

assign mul_ln1352_221_fu_8620_p1 = w_tensor_i_13_12_reg_15140;

assign mul_ln1352_221_fu_8620_p2 = ($signed(mul_ln1352_221_fu_8620_p0) * $signed(mul_ln1352_221_fu_8620_p1));

assign mul_ln1352_223_fu_8629_p0 = sext_ln215_30_fu_7687_p1;

assign mul_ln1352_223_fu_8629_p1 = w_tensor_i_13_14_reg_15150;

assign mul_ln1352_223_fu_8629_p2 = ($signed(mul_ln1352_223_fu_8629_p0) * $signed(mul_ln1352_223_fu_8629_p1));

assign mul_ln1352_225_fu_8638_p0 = sext_ln215_2_fu_7603_p1;

assign mul_ln1352_225_fu_8638_p1 = w_tensor_i_14_1_reg_15160;

assign mul_ln1352_225_fu_8638_p2 = ($signed(mul_ln1352_225_fu_8638_p0) * $signed(mul_ln1352_225_fu_8638_p1));

assign mul_ln1352_227_fu_8647_p0 = sext_ln215_6_fu_7615_p1;

assign mul_ln1352_227_fu_8647_p1 = w_tensor_i_14_3_reg_15170;

assign mul_ln1352_227_fu_8647_p2 = ($signed(mul_ln1352_227_fu_8647_p0) * $signed(mul_ln1352_227_fu_8647_p1));

assign mul_ln1352_229_fu_8656_p0 = sext_ln215_10_fu_7627_p1;

assign mul_ln1352_229_fu_8656_p1 = w_tensor_i_14_5_reg_15180;

assign mul_ln1352_229_fu_8656_p2 = ($signed(mul_ln1352_229_fu_8656_p0) * $signed(mul_ln1352_229_fu_8656_p1));

assign mul_ln1352_231_fu_8665_p0 = sext_ln215_14_fu_7639_p1;

assign mul_ln1352_231_fu_8665_p1 = w_tensor_i_14_7_reg_15190;

assign mul_ln1352_231_fu_8665_p2 = ($signed(mul_ln1352_231_fu_8665_p0) * $signed(mul_ln1352_231_fu_8665_p1));

assign mul_ln1352_233_fu_8674_p0 = sext_ln215_18_fu_7651_p1;

assign mul_ln1352_233_fu_8674_p1 = w_tensor_i_14_9_reg_15200;

assign mul_ln1352_233_fu_8674_p2 = ($signed(mul_ln1352_233_fu_8674_p0) * $signed(mul_ln1352_233_fu_8674_p1));

assign mul_ln1352_235_fu_8683_p0 = sext_ln215_22_fu_7663_p1;

assign mul_ln1352_235_fu_8683_p1 = w_tensor_i_14_10_reg_15210;

assign mul_ln1352_235_fu_8683_p2 = ($signed(mul_ln1352_235_fu_8683_p0) * $signed(mul_ln1352_235_fu_8683_p1));

assign mul_ln1352_237_fu_8692_p0 = sext_ln215_26_fu_7675_p1;

assign mul_ln1352_237_fu_8692_p1 = w_tensor_i_14_12_reg_15220;

assign mul_ln1352_237_fu_8692_p2 = ($signed(mul_ln1352_237_fu_8692_p0) * $signed(mul_ln1352_237_fu_8692_p1));

assign mul_ln1352_239_fu_8701_p0 = sext_ln215_30_fu_7687_p1;

assign mul_ln1352_239_fu_8701_p1 = w_tensor_i_14_14_reg_15230;

assign mul_ln1352_239_fu_8701_p2 = ($signed(mul_ln1352_239_fu_8701_p0) * $signed(mul_ln1352_239_fu_8701_p1));

assign mul_ln1352_23_fu_7729_p0 = sext_ln215_14_fu_7639_p1;

assign mul_ln1352_23_fu_7729_p1 = w_tensor_i_1_7_reg_14150;

assign mul_ln1352_23_fu_7729_p2 = ($signed(mul_ln1352_23_fu_7729_p0) * $signed(mul_ln1352_23_fu_7729_p1));

assign mul_ln1352_241_fu_8710_p0 = sext_ln215_2_fu_7603_p1;

assign mul_ln1352_241_fu_8710_p1 = w_tensor_i_15_1_reg_15240;

assign mul_ln1352_241_fu_8710_p2 = ($signed(mul_ln1352_241_fu_8710_p0) * $signed(mul_ln1352_241_fu_8710_p1));

assign mul_ln1352_243_fu_8719_p0 = sext_ln215_6_fu_7615_p1;

assign mul_ln1352_243_fu_8719_p1 = w_tensor_i_15_3_reg_15250;

assign mul_ln1352_243_fu_8719_p2 = ($signed(mul_ln1352_243_fu_8719_p0) * $signed(mul_ln1352_243_fu_8719_p1));

assign mul_ln1352_245_fu_8728_p0 = sext_ln215_10_fu_7627_p1;

assign mul_ln1352_245_fu_8728_p1 = w_tensor_i_15_5_reg_15260;

assign mul_ln1352_245_fu_8728_p2 = ($signed(mul_ln1352_245_fu_8728_p0) * $signed(mul_ln1352_245_fu_8728_p1));

assign mul_ln1352_247_fu_8737_p0 = sext_ln215_14_fu_7639_p1;

assign mul_ln1352_247_fu_8737_p1 = w_tensor_i_15_7_reg_15270;

assign mul_ln1352_247_fu_8737_p2 = ($signed(mul_ln1352_247_fu_8737_p0) * $signed(mul_ln1352_247_fu_8737_p1));

assign mul_ln1352_249_fu_8746_p0 = sext_ln215_18_fu_7651_p1;

assign mul_ln1352_249_fu_8746_p1 = w_tensor_i_15_9_reg_15280;

assign mul_ln1352_249_fu_8746_p2 = ($signed(mul_ln1352_249_fu_8746_p0) * $signed(mul_ln1352_249_fu_8746_p1));

assign mul_ln1352_251_fu_8755_p0 = sext_ln215_22_fu_7663_p1;

assign mul_ln1352_251_fu_8755_p1 = w_tensor_i_15_10_reg_15290;

assign mul_ln1352_251_fu_8755_p2 = ($signed(mul_ln1352_251_fu_8755_p0) * $signed(mul_ln1352_251_fu_8755_p1));

assign mul_ln1352_253_fu_8764_p0 = sext_ln215_26_fu_7675_p1;

assign mul_ln1352_253_fu_8764_p1 = w_tensor_i_15_12_reg_15300;

assign mul_ln1352_253_fu_8764_p2 = ($signed(mul_ln1352_253_fu_8764_p0) * $signed(mul_ln1352_253_fu_8764_p1));

assign mul_ln1352_255_fu_8773_p0 = sext_ln215_30_fu_7687_p1;

assign mul_ln1352_255_fu_8773_p1 = w_tensor_i_15_14_reg_15310;

assign mul_ln1352_255_fu_8773_p2 = ($signed(mul_ln1352_255_fu_8773_p0) * $signed(mul_ln1352_255_fu_8773_p1));

assign mul_ln1352_25_fu_7738_p0 = sext_ln215_18_fu_7651_p1;

assign mul_ln1352_25_fu_7738_p1 = w_tensor_i_1_9_reg_14160;

assign mul_ln1352_25_fu_7738_p2 = ($signed(mul_ln1352_25_fu_7738_p0) * $signed(mul_ln1352_25_fu_7738_p1));

assign mul_ln1352_27_fu_7747_p0 = sext_ln215_22_fu_7663_p1;

assign mul_ln1352_27_fu_7747_p1 = w_tensor_i_1_10_reg_14170;

assign mul_ln1352_27_fu_7747_p2 = ($signed(mul_ln1352_27_fu_7747_p0) * $signed(mul_ln1352_27_fu_7747_p1));

assign mul_ln1352_29_fu_7756_p0 = sext_ln215_26_fu_7675_p1;

assign mul_ln1352_29_fu_7756_p1 = w_tensor_i_1_12_reg_14180;

assign mul_ln1352_29_fu_7756_p2 = ($signed(mul_ln1352_29_fu_7756_p0) * $signed(mul_ln1352_29_fu_7756_p1));

assign mul_ln1352_31_fu_7765_p0 = sext_ln215_30_fu_7687_p1;

assign mul_ln1352_31_fu_7765_p1 = w_tensor_i_1_14_reg_14190;

assign mul_ln1352_31_fu_7765_p2 = ($signed(mul_ln1352_31_fu_7765_p0) * $signed(mul_ln1352_31_fu_7765_p1));

assign mul_ln1352_33_fu_7774_p0 = sext_ln215_2_fu_7603_p1;

assign mul_ln1352_33_fu_7774_p1 = w_tensor_i_2_1_reg_14200;

assign mul_ln1352_33_fu_7774_p2 = ($signed(mul_ln1352_33_fu_7774_p0) * $signed(mul_ln1352_33_fu_7774_p1));

assign mul_ln1352_35_fu_7783_p0 = sext_ln215_6_fu_7615_p1;

assign mul_ln1352_35_fu_7783_p1 = w_tensor_i_2_3_reg_14210;

assign mul_ln1352_35_fu_7783_p2 = ($signed(mul_ln1352_35_fu_7783_p0) * $signed(mul_ln1352_35_fu_7783_p1));

assign mul_ln1352_37_fu_7792_p0 = sext_ln215_10_fu_7627_p1;

assign mul_ln1352_37_fu_7792_p1 = w_tensor_i_2_5_reg_14220;

assign mul_ln1352_37_fu_7792_p2 = ($signed(mul_ln1352_37_fu_7792_p0) * $signed(mul_ln1352_37_fu_7792_p1));

assign mul_ln1352_39_fu_7801_p0 = sext_ln215_14_fu_7639_p1;

assign mul_ln1352_39_fu_7801_p1 = w_tensor_i_2_7_reg_14230;

assign mul_ln1352_39_fu_7801_p2 = ($signed(mul_ln1352_39_fu_7801_p0) * $signed(mul_ln1352_39_fu_7801_p1));

assign mul_ln1352_3_fu_7621_p0 = sext_ln215_6_fu_7615_p1;

assign mul_ln1352_3_fu_7621_p1 = w_tensor_i_0_3_reg_14050;

assign mul_ln1352_3_fu_7621_p2 = ($signed(mul_ln1352_3_fu_7621_p0) * $signed(mul_ln1352_3_fu_7621_p1));

assign mul_ln1352_41_fu_7810_p0 = sext_ln215_18_fu_7651_p1;

assign mul_ln1352_41_fu_7810_p1 = w_tensor_i_2_9_reg_14240;

assign mul_ln1352_41_fu_7810_p2 = ($signed(mul_ln1352_41_fu_7810_p0) * $signed(mul_ln1352_41_fu_7810_p1));

assign mul_ln1352_43_fu_7819_p0 = sext_ln215_22_fu_7663_p1;

assign mul_ln1352_43_fu_7819_p1 = w_tensor_i_2_10_reg_14250;

assign mul_ln1352_43_fu_7819_p2 = ($signed(mul_ln1352_43_fu_7819_p0) * $signed(mul_ln1352_43_fu_7819_p1));

assign mul_ln1352_45_fu_7828_p0 = sext_ln215_26_fu_7675_p1;

assign mul_ln1352_45_fu_7828_p1 = w_tensor_i_2_12_reg_14260;

assign mul_ln1352_45_fu_7828_p2 = ($signed(mul_ln1352_45_fu_7828_p0) * $signed(mul_ln1352_45_fu_7828_p1));

assign mul_ln1352_47_fu_7837_p0 = sext_ln215_30_fu_7687_p1;

assign mul_ln1352_47_fu_7837_p1 = w_tensor_i_2_14_reg_14270;

assign mul_ln1352_47_fu_7837_p2 = ($signed(mul_ln1352_47_fu_7837_p0) * $signed(mul_ln1352_47_fu_7837_p1));

assign mul_ln1352_49_fu_7846_p0 = sext_ln215_2_fu_7603_p1;

assign mul_ln1352_49_fu_7846_p1 = w_tensor_i_3_1_reg_14280;

assign mul_ln1352_49_fu_7846_p2 = ($signed(mul_ln1352_49_fu_7846_p0) * $signed(mul_ln1352_49_fu_7846_p1));

assign mul_ln1352_51_fu_7855_p0 = sext_ln215_6_fu_7615_p1;

assign mul_ln1352_51_fu_7855_p1 = w_tensor_i_3_3_reg_14290;

assign mul_ln1352_51_fu_7855_p2 = ($signed(mul_ln1352_51_fu_7855_p0) * $signed(mul_ln1352_51_fu_7855_p1));

assign mul_ln1352_53_fu_7864_p0 = sext_ln215_10_fu_7627_p1;

assign mul_ln1352_53_fu_7864_p1 = w_tensor_i_3_5_reg_14300;

assign mul_ln1352_53_fu_7864_p2 = ($signed(mul_ln1352_53_fu_7864_p0) * $signed(mul_ln1352_53_fu_7864_p1));

assign mul_ln1352_55_fu_7873_p0 = sext_ln215_14_fu_7639_p1;

assign mul_ln1352_55_fu_7873_p1 = w_tensor_i_3_7_reg_14310;

assign mul_ln1352_55_fu_7873_p2 = ($signed(mul_ln1352_55_fu_7873_p0) * $signed(mul_ln1352_55_fu_7873_p1));

assign mul_ln1352_57_fu_7882_p0 = sext_ln215_18_fu_7651_p1;

assign mul_ln1352_57_fu_7882_p1 = w_tensor_i_3_9_reg_14320;

assign mul_ln1352_57_fu_7882_p2 = ($signed(mul_ln1352_57_fu_7882_p0) * $signed(mul_ln1352_57_fu_7882_p1));

assign mul_ln1352_59_fu_7891_p0 = sext_ln215_22_fu_7663_p1;

assign mul_ln1352_59_fu_7891_p1 = w_tensor_i_3_10_reg_14330;

assign mul_ln1352_59_fu_7891_p2 = ($signed(mul_ln1352_59_fu_7891_p0) * $signed(mul_ln1352_59_fu_7891_p1));

assign mul_ln1352_5_fu_7633_p0 = sext_ln215_10_fu_7627_p1;

assign mul_ln1352_5_fu_7633_p1 = w_tensor_i_0_5_reg_14060;

assign mul_ln1352_5_fu_7633_p2 = ($signed(mul_ln1352_5_fu_7633_p0) * $signed(mul_ln1352_5_fu_7633_p1));

assign mul_ln1352_61_fu_7900_p0 = sext_ln215_26_fu_7675_p1;

assign mul_ln1352_61_fu_7900_p1 = w_tensor_i_3_12_reg_14340;

assign mul_ln1352_61_fu_7900_p2 = ($signed(mul_ln1352_61_fu_7900_p0) * $signed(mul_ln1352_61_fu_7900_p1));

assign mul_ln1352_63_fu_7909_p0 = sext_ln215_30_fu_7687_p1;

assign mul_ln1352_63_fu_7909_p1 = w_tensor_i_3_14_reg_14350;

assign mul_ln1352_63_fu_7909_p2 = ($signed(mul_ln1352_63_fu_7909_p0) * $signed(mul_ln1352_63_fu_7909_p1));

assign mul_ln1352_65_fu_7918_p0 = sext_ln215_2_fu_7603_p1;

assign mul_ln1352_65_fu_7918_p1 = w_tensor_i_4_1_reg_14360;

assign mul_ln1352_65_fu_7918_p2 = ($signed(mul_ln1352_65_fu_7918_p0) * $signed(mul_ln1352_65_fu_7918_p1));

assign mul_ln1352_67_fu_7927_p0 = sext_ln215_6_fu_7615_p1;

assign mul_ln1352_67_fu_7927_p1 = w_tensor_i_4_3_reg_14370;

assign mul_ln1352_67_fu_7927_p2 = ($signed(mul_ln1352_67_fu_7927_p0) * $signed(mul_ln1352_67_fu_7927_p1));

assign mul_ln1352_69_fu_7936_p0 = sext_ln215_10_fu_7627_p1;

assign mul_ln1352_69_fu_7936_p1 = w_tensor_i_4_5_reg_14380;

assign mul_ln1352_69_fu_7936_p2 = ($signed(mul_ln1352_69_fu_7936_p0) * $signed(mul_ln1352_69_fu_7936_p1));

assign mul_ln1352_71_fu_7945_p0 = sext_ln215_14_fu_7639_p1;

assign mul_ln1352_71_fu_7945_p1 = w_tensor_i_4_7_reg_14390;

assign mul_ln1352_71_fu_7945_p2 = ($signed(mul_ln1352_71_fu_7945_p0) * $signed(mul_ln1352_71_fu_7945_p1));

assign mul_ln1352_73_fu_7954_p0 = sext_ln215_18_fu_7651_p1;

assign mul_ln1352_73_fu_7954_p1 = w_tensor_i_4_9_reg_14400;

assign mul_ln1352_73_fu_7954_p2 = ($signed(mul_ln1352_73_fu_7954_p0) * $signed(mul_ln1352_73_fu_7954_p1));

assign mul_ln1352_75_fu_7963_p0 = sext_ln215_22_fu_7663_p1;

assign mul_ln1352_75_fu_7963_p1 = w_tensor_i_4_10_reg_14410;

assign mul_ln1352_75_fu_7963_p2 = ($signed(mul_ln1352_75_fu_7963_p0) * $signed(mul_ln1352_75_fu_7963_p1));

assign mul_ln1352_77_fu_7972_p0 = sext_ln215_26_fu_7675_p1;

assign mul_ln1352_77_fu_7972_p1 = w_tensor_i_4_12_reg_14420;

assign mul_ln1352_77_fu_7972_p2 = ($signed(mul_ln1352_77_fu_7972_p0) * $signed(mul_ln1352_77_fu_7972_p1));

assign mul_ln1352_79_fu_7981_p0 = sext_ln215_30_fu_7687_p1;

assign mul_ln1352_79_fu_7981_p1 = w_tensor_i_4_14_reg_14430;

assign mul_ln1352_79_fu_7981_p2 = ($signed(mul_ln1352_79_fu_7981_p0) * $signed(mul_ln1352_79_fu_7981_p1));

assign mul_ln1352_7_fu_7645_p0 = sext_ln215_14_fu_7639_p1;

assign mul_ln1352_7_fu_7645_p1 = w_tensor_i_0_7_reg_14070;

assign mul_ln1352_7_fu_7645_p2 = ($signed(mul_ln1352_7_fu_7645_p0) * $signed(mul_ln1352_7_fu_7645_p1));

assign mul_ln1352_81_fu_7990_p0 = sext_ln215_2_fu_7603_p1;

assign mul_ln1352_81_fu_7990_p1 = w_tensor_i_5_1_reg_14440;

assign mul_ln1352_81_fu_7990_p2 = ($signed(mul_ln1352_81_fu_7990_p0) * $signed(mul_ln1352_81_fu_7990_p1));

assign mul_ln1352_83_fu_7999_p0 = sext_ln215_6_fu_7615_p1;

assign mul_ln1352_83_fu_7999_p1 = w_tensor_i_5_3_reg_14450;

assign mul_ln1352_83_fu_7999_p2 = ($signed(mul_ln1352_83_fu_7999_p0) * $signed(mul_ln1352_83_fu_7999_p1));

assign mul_ln1352_85_fu_8008_p0 = sext_ln215_10_fu_7627_p1;

assign mul_ln1352_85_fu_8008_p1 = w_tensor_i_5_5_reg_14460;

assign mul_ln1352_85_fu_8008_p2 = ($signed(mul_ln1352_85_fu_8008_p0) * $signed(mul_ln1352_85_fu_8008_p1));

assign mul_ln1352_87_fu_8017_p0 = sext_ln215_14_fu_7639_p1;

assign mul_ln1352_87_fu_8017_p1 = w_tensor_i_5_7_reg_14470;

assign mul_ln1352_87_fu_8017_p2 = ($signed(mul_ln1352_87_fu_8017_p0) * $signed(mul_ln1352_87_fu_8017_p1));

assign mul_ln1352_89_fu_8026_p0 = sext_ln215_18_fu_7651_p1;

assign mul_ln1352_89_fu_8026_p1 = w_tensor_i_5_9_reg_14480;

assign mul_ln1352_89_fu_8026_p2 = ($signed(mul_ln1352_89_fu_8026_p0) * $signed(mul_ln1352_89_fu_8026_p1));

assign mul_ln1352_91_fu_8035_p0 = sext_ln215_22_fu_7663_p1;

assign mul_ln1352_91_fu_8035_p1 = w_tensor_i_5_10_reg_14490;

assign mul_ln1352_91_fu_8035_p2 = ($signed(mul_ln1352_91_fu_8035_p0) * $signed(mul_ln1352_91_fu_8035_p1));

assign mul_ln1352_93_fu_8044_p0 = sext_ln215_26_fu_7675_p1;

assign mul_ln1352_93_fu_8044_p1 = w_tensor_i_5_12_reg_14500;

assign mul_ln1352_93_fu_8044_p2 = ($signed(mul_ln1352_93_fu_8044_p0) * $signed(mul_ln1352_93_fu_8044_p1));

assign mul_ln1352_95_fu_8053_p0 = sext_ln215_30_fu_7687_p1;

assign mul_ln1352_95_fu_8053_p1 = w_tensor_i_5_14_reg_14510;

assign mul_ln1352_95_fu_8053_p2 = ($signed(mul_ln1352_95_fu_8053_p0) * $signed(mul_ln1352_95_fu_8053_p1));

assign mul_ln1352_97_fu_8062_p0 = sext_ln215_2_fu_7603_p1;

assign mul_ln1352_97_fu_8062_p1 = w_tensor_i_6_1_reg_14520;

assign mul_ln1352_97_fu_8062_p2 = ($signed(mul_ln1352_97_fu_8062_p0) * $signed(mul_ln1352_97_fu_8062_p1));

assign mul_ln1352_99_fu_8071_p0 = sext_ln215_6_fu_7615_p1;

assign mul_ln1352_99_fu_8071_p1 = w_tensor_i_6_3_reg_14530;

assign mul_ln1352_99_fu_8071_p2 = ($signed(mul_ln1352_99_fu_8071_p0) * $signed(mul_ln1352_99_fu_8071_p1));

assign mul_ln1352_9_fu_7657_p0 = sext_ln215_18_fu_7651_p1;

assign mul_ln1352_9_fu_7657_p1 = w_tensor_i_0_9_reg_14080;

assign mul_ln1352_9_fu_7657_p2 = ($signed(mul_ln1352_9_fu_7657_p0) * $signed(mul_ln1352_9_fu_7657_p1));

assign o_tensor_0_0_V_10_fu_2549_p3 = ((icmp_ln391_reg_13188[0:0] === 1'b1) ? o_tensor_0_0_V_7_fu_2531_p1 : o_tensor_0_0_V_9_fu_2542_p3);

assign o_tensor_0_0_V_1_fu_10970_p1 = add_ln700_15_fu_10958_p2[7:0];

assign o_tensor_0_0_V_2_fu_2488_p1 = dst_tensor_0_0_V_1_fu_2480_p3[7:0];

assign o_tensor_0_0_V_3_fu_2496_p1 = dst_tensor_0_0_V_2_fu_2492_p2[7:0];

assign o_tensor_0_0_V_7_fu_2531_p1 = dst_tensor_0_0_V_3_fu_2523_p3[7:0];

assign o_tensor_0_0_V_8_fu_2535_p3 = ((tmp_16_reg_13116[0:0] === 1'b1) ? o_tensor_0_0_V_fu_812 : o_tensor_0_0_V_2_fu_2488_p1);

assign o_tensor_0_0_V_9_fu_2542_p3 = ((and_ln385_reg_13152[0:0] === 1'b1) ? o_tensor_0_0_V_3_fu_2496_p1 : o_tensor_0_0_V_8_fu_2535_p3);

assign o_tensor_0_10_V_1_fu_3838_p1 = dst_tensor_0_10_V_1_fu_3830_p3[7:0];

assign o_tensor_0_10_V_2_fu_3847_p1 = dst_tensor_0_10_V_2_fu_3842_p2[7:0];

assign o_tensor_0_10_V_6_fu_3884_p1 = dst_tensor_0_10_V_3_fu_3876_p3[7:0];

assign o_tensor_0_10_V_7_fu_3888_p3 = ((tmp_16_reg_13116[0:0] === 1'b1) ? o_tensor_0_10_V_fu_852 : o_tensor_0_10_V_1_fu_3838_p1);

assign o_tensor_0_10_V_8_fu_3895_p3 = ((and_ln385_reg_13152[0:0] === 1'b1) ? o_tensor_0_10_V_2_fu_3847_p1 : o_tensor_0_10_V_7_fu_3888_p3);

assign o_tensor_0_10_V_9_fu_3902_p3 = ((icmp_ln391_reg_13188[0:0] === 1'b1) ? o_tensor_0_10_V_6_fu_3884_p1 : o_tensor_0_10_V_8_fu_3895_p3);

assign o_tensor_0_11_V_1_fu_3955_p1 = dst_tensor_0_11_V_1_fu_3947_p3[7:0];

assign o_tensor_0_11_V_2_fu_3964_p1 = dst_tensor_0_11_V_2_fu_3959_p2[7:0];

assign o_tensor_0_11_V_6_fu_4001_p1 = dst_tensor_0_11_V_3_fu_3993_p3[7:0];

assign o_tensor_0_11_V_7_fu_4005_p3 = ((tmp_16_reg_13116[0:0] === 1'b1) ? o_tensor_0_11_V_fu_856 : o_tensor_0_11_V_1_fu_3955_p1);

assign o_tensor_0_11_V_8_fu_4012_p3 = ((and_ln385_reg_13152[0:0] === 1'b1) ? o_tensor_0_11_V_2_fu_3964_p1 : o_tensor_0_11_V_7_fu_4005_p3);

assign o_tensor_0_11_V_9_fu_4019_p3 = ((icmp_ln391_reg_13188[0:0] === 1'b1) ? o_tensor_0_11_V_6_fu_4001_p1 : o_tensor_0_11_V_8_fu_4012_p3);

assign o_tensor_0_12_V_1_fu_4072_p1 = dst_tensor_0_12_V_1_fu_4064_p3[7:0];

assign o_tensor_0_12_V_2_fu_4081_p1 = dst_tensor_0_12_V_2_fu_4076_p2[7:0];

assign o_tensor_0_12_V_6_fu_4118_p1 = dst_tensor_0_12_V_3_fu_4110_p3[7:0];

assign o_tensor_0_12_V_7_fu_4122_p3 = ((tmp_16_reg_13116[0:0] === 1'b1) ? o_tensor_0_12_V_fu_860 : o_tensor_0_12_V_1_fu_4072_p1);

assign o_tensor_0_12_V_8_fu_4129_p3 = ((and_ln385_reg_13152[0:0] === 1'b1) ? o_tensor_0_12_V_2_fu_4081_p1 : o_tensor_0_12_V_7_fu_4122_p3);

assign o_tensor_0_12_V_9_fu_4136_p3 = ((icmp_ln391_reg_13188[0:0] === 1'b1) ? o_tensor_0_12_V_6_fu_4118_p1 : o_tensor_0_12_V_8_fu_4129_p3);

assign o_tensor_0_13_V_1_fu_4189_p1 = dst_tensor_0_13_V_1_fu_4181_p3[7:0];

assign o_tensor_0_13_V_2_fu_4198_p1 = dst_tensor_0_13_V_2_fu_4193_p2[7:0];

assign o_tensor_0_13_V_6_fu_4235_p1 = dst_tensor_0_13_V_3_fu_4227_p3[7:0];

assign o_tensor_0_13_V_7_fu_4239_p3 = ((tmp_16_reg_13116[0:0] === 1'b1) ? o_tensor_0_13_V_fu_864 : o_tensor_0_13_V_1_fu_4189_p1);

assign o_tensor_0_13_V_8_fu_4246_p3 = ((and_ln385_reg_13152[0:0] === 1'b1) ? o_tensor_0_13_V_2_fu_4198_p1 : o_tensor_0_13_V_7_fu_4239_p3);

assign o_tensor_0_13_V_9_fu_4253_p3 = ((icmp_ln391_reg_13188[0:0] === 1'b1) ? o_tensor_0_13_V_6_fu_4235_p1 : o_tensor_0_13_V_8_fu_4246_p3);

assign o_tensor_0_14_V_1_fu_4306_p1 = dst_tensor_0_14_V_1_fu_4298_p3[7:0];

assign o_tensor_0_14_V_2_fu_4315_p1 = dst_tensor_0_14_V_2_fu_4310_p2[7:0];

assign o_tensor_0_14_V_6_fu_4352_p1 = dst_tensor_0_14_V_3_fu_4344_p3[7:0];

assign o_tensor_0_14_V_7_fu_4356_p3 = ((tmp_16_reg_13116[0:0] === 1'b1) ? o_tensor_0_14_V_fu_868 : o_tensor_0_14_V_1_fu_4306_p1);

assign o_tensor_0_14_V_8_fu_4363_p3 = ((and_ln385_reg_13152[0:0] === 1'b1) ? o_tensor_0_14_V_2_fu_4315_p1 : o_tensor_0_14_V_7_fu_4356_p3);

assign o_tensor_0_14_V_9_fu_4370_p3 = ((icmp_ln391_reg_13188[0:0] === 1'b1) ? o_tensor_0_14_V_6_fu_4352_p1 : o_tensor_0_14_V_8_fu_4363_p3);

assign o_tensor_0_15_V_1_fu_4423_p1 = dst_tensor_0_15_V_1_fu_4415_p3[7:0];

assign o_tensor_0_15_V_2_fu_4432_p1 = dst_tensor_0_15_V_2_fu_4427_p2[7:0];

assign o_tensor_0_15_V_6_fu_4469_p1 = dst_tensor_0_15_V_3_fu_4461_p3[7:0];

assign o_tensor_0_15_V_7_fu_4473_p3 = ((tmp_16_reg_13116[0:0] === 1'b1) ? o_tensor_0_15_V_fu_872 : o_tensor_0_15_V_1_fu_4423_p1);

assign o_tensor_0_15_V_8_fu_4480_p3 = ((and_ln385_reg_13152[0:0] === 1'b1) ? o_tensor_0_15_V_2_fu_4432_p1 : o_tensor_0_15_V_7_fu_4473_p3);

assign o_tensor_0_15_V_9_fu_4487_p3 = ((icmp_ln391_reg_13188[0:0] === 1'b1) ? o_tensor_0_15_V_6_fu_4469_p1 : o_tensor_0_15_V_8_fu_4480_p3);

assign o_tensor_0_1_V_10_fu_2665_p3 = ((icmp_ln391_reg_13188[0:0] === 1'b1) ? o_tensor_0_1_V_7_fu_2647_p1 : o_tensor_0_1_V_9_fu_2658_p3);

assign o_tensor_0_1_V_1_fu_10990_p1 = add_ln700_31_fu_10977_p2[7:0];

assign o_tensor_0_1_V_2_fu_2601_p1 = dst_tensor_0_1_V_1_fu_2593_p3[7:0];

assign o_tensor_0_1_V_3_fu_2610_p1 = dst_tensor_0_1_V_2_fu_2605_p2[7:0];

assign o_tensor_0_1_V_7_fu_2647_p1 = dst_tensor_0_1_V_3_fu_2639_p3[7:0];

assign o_tensor_0_1_V_8_fu_2651_p3 = ((tmp_16_reg_13116[0:0] === 1'b1) ? o_tensor_0_1_V_fu_816 : o_tensor_0_1_V_2_fu_2601_p1);

assign o_tensor_0_1_V_9_fu_2658_p3 = ((and_ln385_reg_13152[0:0] === 1'b1) ? o_tensor_0_1_V_3_fu_2610_p1 : o_tensor_0_1_V_8_fu_2651_p3);

assign o_tensor_0_2_V_10_fu_2782_p3 = ((icmp_ln391_reg_13188[0:0] === 1'b1) ? o_tensor_0_2_V_7_fu_2764_p1 : o_tensor_0_2_V_9_fu_2775_p3);

assign o_tensor_0_2_V_1_fu_11010_p1 = add_ln700_47_fu_10997_p2[7:0];

assign o_tensor_0_2_V_2_fu_2718_p1 = dst_tensor_0_2_V_1_fu_2710_p3[7:0];

assign o_tensor_0_2_V_3_fu_2727_p1 = dst_tensor_0_2_V_2_fu_2722_p2[7:0];

assign o_tensor_0_2_V_7_fu_2764_p1 = dst_tensor_0_2_V_3_fu_2756_p3[7:0];

assign o_tensor_0_2_V_8_fu_2768_p3 = ((tmp_16_reg_13116[0:0] === 1'b1) ? o_tensor_0_2_V_fu_820 : o_tensor_0_2_V_2_fu_2718_p1);

assign o_tensor_0_2_V_9_fu_2775_p3 = ((and_ln385_reg_13152[0:0] === 1'b1) ? o_tensor_0_2_V_3_fu_2727_p1 : o_tensor_0_2_V_8_fu_2768_p3);

assign o_tensor_0_3_V_10_fu_2899_p3 = ((icmp_ln391_reg_13188[0:0] === 1'b1) ? o_tensor_0_3_V_7_fu_2881_p1 : o_tensor_0_3_V_9_fu_2892_p3);

assign o_tensor_0_3_V_1_fu_11030_p1 = add_ln700_63_fu_11017_p2[7:0];

assign o_tensor_0_3_V_2_fu_2835_p1 = dst_tensor_0_3_V_1_fu_2827_p3[7:0];

assign o_tensor_0_3_V_3_fu_2844_p1 = dst_tensor_0_3_V_2_fu_2839_p2[7:0];

assign o_tensor_0_3_V_7_fu_2881_p1 = dst_tensor_0_3_V_3_fu_2873_p3[7:0];

assign o_tensor_0_3_V_8_fu_2885_p3 = ((tmp_16_reg_13116[0:0] === 1'b1) ? o_tensor_0_3_V_fu_824 : o_tensor_0_3_V_2_fu_2835_p1);

assign o_tensor_0_3_V_9_fu_2892_p3 = ((and_ln385_reg_13152[0:0] === 1'b1) ? o_tensor_0_3_V_3_fu_2844_p1 : o_tensor_0_3_V_8_fu_2885_p3);

assign o_tensor_0_4_V_10_fu_3016_p3 = ((icmp_ln391_reg_13188[0:0] === 1'b1) ? o_tensor_0_4_V_7_fu_2998_p1 : o_tensor_0_4_V_9_fu_3009_p3);

assign o_tensor_0_4_V_1_fu_11050_p1 = add_ln700_79_fu_11037_p2[7:0];

assign o_tensor_0_4_V_2_fu_2952_p1 = dst_tensor_0_4_V_1_fu_2944_p3[7:0];

assign o_tensor_0_4_V_3_fu_2961_p1 = dst_tensor_0_4_V_2_fu_2956_p2[7:0];

assign o_tensor_0_4_V_7_fu_2998_p1 = dst_tensor_0_4_V_3_fu_2990_p3[7:0];

assign o_tensor_0_4_V_8_fu_3002_p3 = ((tmp_16_reg_13116[0:0] === 1'b1) ? o_tensor_0_4_V_fu_828 : o_tensor_0_4_V_2_fu_2952_p1);

assign o_tensor_0_4_V_9_fu_3009_p3 = ((and_ln385_reg_13152[0:0] === 1'b1) ? o_tensor_0_4_V_3_fu_2961_p1 : o_tensor_0_4_V_8_fu_3002_p3);

assign o_tensor_0_5_V_1_fu_3069_p1 = dst_tensor_0_5_V_1_fu_3061_p3[7:0];

assign o_tensor_0_5_V_2_fu_3078_p1 = dst_tensor_0_5_V_2_fu_3073_p2[7:0];

assign o_tensor_0_5_V_6_fu_3115_p1 = dst_tensor_0_5_V_3_fu_3107_p3[7:0];

assign o_tensor_0_5_V_7_fu_3119_p3 = ((tmp_16_reg_13116[0:0] === 1'b1) ? o_tensor_0_5_V_fu_832 : o_tensor_0_5_V_1_fu_3069_p1);

assign o_tensor_0_5_V_8_fu_3126_p3 = ((and_ln385_reg_13152[0:0] === 1'b1) ? o_tensor_0_5_V_2_fu_3078_p1 : o_tensor_0_5_V_7_fu_3119_p3);

assign o_tensor_0_5_V_9_fu_3133_p3 = ((icmp_ln391_reg_13188[0:0] === 1'b1) ? o_tensor_0_5_V_6_fu_3115_p1 : o_tensor_0_5_V_8_fu_3126_p3);

assign o_tensor_0_6_V_1_fu_3186_p1 = dst_tensor_0_6_V_1_fu_3178_p3[7:0];

assign o_tensor_0_6_V_2_fu_3195_p1 = dst_tensor_0_6_V_2_fu_3190_p2[7:0];

assign o_tensor_0_6_V_6_fu_3232_p1 = dst_tensor_0_6_V_3_fu_3224_p3[7:0];

assign o_tensor_0_6_V_7_fu_3236_p3 = ((tmp_16_reg_13116[0:0] === 1'b1) ? o_tensor_0_6_V_fu_836 : o_tensor_0_6_V_1_fu_3186_p1);

assign o_tensor_0_6_V_8_fu_3243_p3 = ((and_ln385_reg_13152[0:0] === 1'b1) ? o_tensor_0_6_V_2_fu_3195_p1 : o_tensor_0_6_V_7_fu_3236_p3);

assign o_tensor_0_6_V_9_fu_3250_p3 = ((icmp_ln391_reg_13188[0:0] === 1'b1) ? o_tensor_0_6_V_6_fu_3232_p1 : o_tensor_0_6_V_8_fu_3243_p3);

assign o_tensor_0_7_V_1_fu_3303_p1 = dst_tensor_0_7_V_1_fu_3295_p3[7:0];

assign o_tensor_0_7_V_2_fu_3312_p1 = dst_tensor_0_7_V_2_fu_3307_p2[7:0];

assign o_tensor_0_7_V_6_fu_3349_p1 = dst_tensor_0_7_V_3_fu_3341_p3[7:0];

assign o_tensor_0_7_V_7_fu_3353_p3 = ((tmp_16_reg_13116[0:0] === 1'b1) ? o_tensor_0_7_V_fu_840 : o_tensor_0_7_V_1_fu_3303_p1);

assign o_tensor_0_7_V_8_fu_3360_p3 = ((and_ln385_reg_13152[0:0] === 1'b1) ? o_tensor_0_7_V_2_fu_3312_p1 : o_tensor_0_7_V_7_fu_3353_p3);

assign o_tensor_0_7_V_9_fu_3367_p3 = ((icmp_ln391_reg_13188[0:0] === 1'b1) ? o_tensor_0_7_V_6_fu_3349_p1 : o_tensor_0_7_V_8_fu_3360_p3);

assign o_tensor_0_8_V_1_fu_3604_p1 = dst_tensor_0_8_V_1_fu_3596_p3[7:0];

assign o_tensor_0_8_V_2_fu_3613_p1 = dst_tensor_0_8_V_2_fu_3608_p2[7:0];

assign o_tensor_0_8_V_6_fu_3650_p1 = dst_tensor_0_8_V_3_fu_3642_p3[7:0];

assign o_tensor_0_8_V_7_fu_3654_p3 = ((tmp_16_reg_13116[0:0] === 1'b1) ? o_tensor_0_8_V_fu_844 : o_tensor_0_8_V_1_fu_3604_p1);

assign o_tensor_0_8_V_8_fu_3661_p3 = ((and_ln385_reg_13152[0:0] === 1'b1) ? o_tensor_0_8_V_2_fu_3613_p1 : o_tensor_0_8_V_7_fu_3654_p3);

assign o_tensor_0_8_V_9_fu_3668_p3 = ((icmp_ln391_reg_13188[0:0] === 1'b1) ? o_tensor_0_8_V_6_fu_3650_p1 : o_tensor_0_8_V_8_fu_3661_p3);

assign o_tensor_0_9_V_1_fu_3721_p1 = dst_tensor_0_9_V_1_fu_3713_p3[7:0];

assign o_tensor_0_9_V_2_fu_3730_p1 = dst_tensor_0_9_V_2_fu_3725_p2[7:0];

assign o_tensor_0_9_V_6_fu_3767_p1 = dst_tensor_0_9_V_3_fu_3759_p3[7:0];

assign o_tensor_0_9_V_7_fu_3771_p3 = ((tmp_16_reg_13116[0:0] === 1'b1) ? o_tensor_0_9_V_fu_848 : o_tensor_0_9_V_1_fu_3721_p1);

assign o_tensor_0_9_V_8_fu_3778_p3 = ((and_ln385_reg_13152[0:0] === 1'b1) ? o_tensor_0_9_V_2_fu_3730_p1 : o_tensor_0_9_V_7_fu_3771_p3);

assign o_tensor_0_9_V_9_fu_3785_p3 = ((icmp_ln391_reg_13188[0:0] === 1'b1) ? o_tensor_0_9_V_6_fu_3767_p1 : o_tensor_0_9_V_8_fu_3778_p3);

assign out_mem_V_Addr_A = out_mem_V_Addr_A_orig << 32'd4;

assign out_mem_V_Clk_A = ap_clk;

assign out_mem_V_Rst_A = ap_rst_n_inv;

assign p_Result_11_0_1_fu_2160_p4 = {{acc_mem_V_q0[63:32]}};

assign p_Result_11_1_1_fu_2180_p4 = {{acc_mem_V_q0[127:96]}};

assign p_Result_11_1_fu_2170_p4 = {{acc_mem_V_q0[95:64]}};

assign p_Result_11_2_1_fu_2200_p4 = {{acc_mem_V_q0[191:160]}};

assign p_Result_11_2_fu_2190_p4 = {{acc_mem_V_q0[159:128]}};

assign p_Result_11_3_1_fu_2220_p4 = {{acc_mem_V_q0[255:224]}};

assign p_Result_11_3_fu_2210_p4 = {{acc_mem_V_q0[223:192]}};

assign p_Result_2_fu_4873_p4 = {{uop_mem_V_q0[31:22]}};

assign p_cast37_fu_1643_p1 = tmp_fu_1633_p4;

assign p_cast_fu_1657_p1 = tmp_2_fu_1647_p4;

assign ret_V_fu_11359_p3 = {{dram_idx_assign_0_reg_1274}, {3'd0}};

assign select_ln253_1_fu_4730_p3 = ((icmp_ln259_fu_4707_p2[0:0] === 1'b1) ? add_ln700_257_fu_4712_p2 : src_offset_in_V_reg_1185);

assign select_ln253_2_fu_4738_p3 = ((icmp_ln259_fu_4707_p2[0:0] === 1'b1) ? add_ln700_258_fu_4717_p2 : wgt_offset_in_V_reg_1196);

assign select_ln253_fu_4722_p3 = ((icmp_ln259_fu_4707_p2[0:0] === 1'b1) ? add_ln700_256_fu_4702_p2 : dst_offset_in_V_reg_1174);

assign select_ln254_1_fu_4766_p3 = ((icmp_ln259_reg_13933[0:0] === 1'b1) ? add_ln700_257_reg_13942 : ap_phi_mux_src_offset_in_0_i_phi_fu_1234_p4);

assign select_ln254_2_fu_4772_p3 = ((icmp_ln259_reg_13933[0:0] === 1'b1) ? add_ln700_258_reg_13947 : ap_phi_mux_wgt_offset_in_0_i_phi_fu_1246_p4);

assign select_ln254_3_fu_4778_p3 = ((icmp_ln259_reg_13933[0:0] === 1'b1) ? zext_ln262_reg_13852 : ap_phi_mux_upc_0_i_phi_fu_1257_p4);

assign select_ln254_4_fu_4789_p3 = ((icmp_ln259_reg_13933[0:0] === 1'b1) ? icmp_ln262_reg_12933 : icmp_ln262_1_fu_4784_p2);

assign select_ln254_fu_4760_p3 = ((icmp_ln259_reg_13933[0:0] === 1'b1) ? add_ln700_256_reg_13928 : ap_phi_mux_dst_offset_in_0_i_phi_fu_1222_p4);

assign select_ln259_1_fu_4825_p3 = ((select_ln254_4_fu_4789_p3[0:0] === 1'b1) ? select_ln254_1_fu_4766_p3 : src_offset_in_V_4_fu_4800_p2);

assign select_ln259_2_fu_4833_p3 = ((select_ln254_4_fu_4789_p3[0:0] === 1'b1) ? select_ln254_2_fu_4772_p3 : wgt_offset_in_V_2_fu_4805_p2);

assign select_ln259_3_fu_4752_p3 = ((icmp_ln259_fu_4707_p2[0:0] === 1'b1) ? 46'd1 : add_ln259_fu_4746_p2);

assign select_ln259_fu_4817_p3 = ((select_ln254_4_fu_4789_p3[0:0] === 1'b1) ? select_ln254_fu_4760_p3 : dst_offset_in_V_4_fu_4795_p2);

assign select_ln262_fu_4810_p3 = ((select_ln254_4_fu_4789_p3[0:0] === 1'b1) ? select_ln254_3_fu_4778_p3 : zext_ln262_reg_13852);

assign select_ln304_1_fu_11083_p3 = ((tmp_11_reg_13864[0:0] === 1'b1) ? 32'd0 : add_ln700_111_fu_11077_p2);

assign select_ln304_2_fu_11103_p3 = ((tmp_11_reg_13864[0:0] === 1'b1) ? 32'd0 : add_ln700_127_fu_11097_p2);

assign select_ln304_3_fu_11123_p3 = ((tmp_11_reg_13864[0:0] === 1'b1) ? 32'd0 : add_ln700_143_fu_11117_p2);

assign select_ln304_4_fu_11143_p3 = ((tmp_11_reg_13864[0:0] === 1'b1) ? 32'd0 : add_ln700_159_fu_11137_p2);

assign select_ln304_5_fu_11163_p3 = ((tmp_11_reg_13864[0:0] === 1'b1) ? 32'd0 : add_ln700_175_fu_11157_p2);

assign select_ln304_fu_11063_p3 = ((tmp_11_reg_13864[0:0] === 1'b1) ? 32'd0 : add_ln700_95_fu_11057_p2);

assign select_ln343_1_fu_2062_p3 = ((icmp_ln348_fu_2009_p2[0:0] === 1'b1) ? add_ln700_263_fu_2022_p2 : ap_phi_mux_src_offset_in_V_1_phi_fu_1114_p4);

assign select_ln343_fu_2054_p3 = ((icmp_ln348_fu_2009_p2[0:0] === 1'b1) ? add_ln700_262_fu_2004_p2 : ap_phi_mux_dst_offset_in_V_1_phi_fu_1103_p4);

assign select_ln344_1_fu_2027_p3 = ((icmp_ln348_fu_2009_p2[0:0] === 1'b1) ? add_ln700_263_fu_2022_p2 : ap_phi_mux_src_offset_in_0_i176_phi_fu_1147_p4);

assign select_ln344_2_fu_2035_p3 = ((icmp_ln348_fu_2009_p2[0:0] === 1'b1) ? zext_ln350_reg_13008 : ap_phi_mux_upc_0_i180_phi_fu_1157_p4);

assign select_ln344_3_fu_2047_p3 = ((icmp_ln348_fu_2009_p2[0:0] === 1'b1) ? icmp_ln350_reg_12923 : icmp_ln350_1_fu_2042_p2);

assign select_ln344_fu_2014_p3 = ((icmp_ln348_fu_2009_p2[0:0] === 1'b1) ? add_ln700_262_fu_2004_p2 : ap_phi_mux_dst_offset_in_0_i175_phi_fu_1136_p4);

assign select_ln348_1_fu_2095_p3 = ((select_ln344_3_fu_2047_p3[0:0] === 1'b1) ? select_ln344_1_fu_2027_p3 : src_offset_in_V_5_fu_2075_p2);

assign select_ln348_2_fu_2109_p3 = ((icmp_ln348_fu_2009_p2[0:0] === 1'b1) ? 46'd1 : add_ln348_fu_2103_p2);

assign select_ln348_fu_2087_p3 = ((select_ln344_3_fu_2047_p3[0:0] === 1'b1) ? select_ln344_fu_2014_p3 : dst_offset_in_V_5_fu_2070_p2);

assign select_ln350_fu_2080_p3 = ((select_ln344_3_fu_2047_p3[0:0] === 1'b1) ? select_ln344_2_fu_2035_p3 : zext_ln350_reg_13008);

assign select_ln375_fu_2314_p3 = ((tmp_12_reg_13020[0:0] === 1'b1) ? src_1_V_reg_13076 : trunc_ln647_22_fu_2156_p1);

assign select_ln380_10_fu_2821_p3 = ((icmp_ln378_reg_13040[0:0] === 1'b1) ? src_1_V_3_reg_13415 : reg_1581);

assign select_ln380_12_fu_2932_p3 = ((icmp_ln378_reg_13040[0:0] === 1'b1) ? reg_1585 : src_1_V_4_reg_13434);

assign select_ln380_13_fu_2938_p3 = ((icmp_ln378_reg_13040[0:0] === 1'b1) ? src_1_V_4_reg_13434 : reg_1585);

assign select_ln380_15_fu_3049_p3 = ((icmp_ln378_reg_13040[0:0] === 1'b1) ? reg_1589 : src_1_V_5_reg_13453);

assign select_ln380_16_fu_3055_p3 = ((icmp_ln378_reg_13040[0:0] === 1'b1) ? src_1_V_5_reg_13453 : reg_1589);

assign select_ln380_18_fu_3166_p3 = ((icmp_ln378_reg_13040[0:0] === 1'b1) ? reg_1593 : src_1_V_6_reg_13472);

assign select_ln380_19_fu_3172_p3 = ((icmp_ln378_reg_13040[0:0] === 1'b1) ? src_1_V_6_reg_13472 : reg_1593);

assign select_ln380_1_fu_2475_p3 = ((icmp_ln378_reg_13040[0:0] === 1'b1) ? select_ln375_reg_13358 : dst_tensor_0_0_V_reg_13347);

assign select_ln380_21_fu_3283_p3 = ((icmp_ln378_reg_13040[0:0] === 1'b1) ? reg_1597 : src_1_V_7_reg_13491);

assign select_ln380_22_fu_3289_p3 = ((icmp_ln378_reg_13040[0:0] === 1'b1) ? src_1_V_7_reg_13491 : reg_1597);

assign select_ln380_24_fu_3584_p3 = ((icmp_ln378_reg_13040[0:0] === 1'b1) ? reg_1601 : src_1_V_8_reg_13590);

assign select_ln380_25_fu_3590_p3 = ((icmp_ln378_reg_13040[0:0] === 1'b1) ? src_1_V_8_reg_13590 : reg_1601);

assign select_ln380_27_fu_3701_p3 = ((icmp_ln378_reg_13040[0:0] === 1'b1) ? reg_1605 : src_1_V_9_reg_13609);

assign select_ln380_28_fu_3707_p3 = ((icmp_ln378_reg_13040[0:0] === 1'b1) ? src_1_V_9_reg_13609 : reg_1605);

assign select_ln380_30_fu_3818_p3 = ((icmp_ln378_reg_13040[0:0] === 1'b1) ? reg_1609 : src_1_V_10_reg_13628);

assign select_ln380_31_fu_3824_p3 = ((icmp_ln378_reg_13040[0:0] === 1'b1) ? src_1_V_10_reg_13628 : reg_1609);

assign select_ln380_33_fu_3935_p3 = ((icmp_ln378_reg_13040[0:0] === 1'b1) ? reg_1613 : src_1_V_11_reg_13647);

assign select_ln380_34_fu_3941_p3 = ((icmp_ln378_reg_13040[0:0] === 1'b1) ? src_1_V_11_reg_13647 : reg_1613);

assign select_ln380_36_fu_4052_p3 = ((icmp_ln378_reg_13040[0:0] === 1'b1) ? reg_1617 : src_1_V_12_reg_13666);

assign select_ln380_37_fu_4058_p3 = ((icmp_ln378_reg_13040[0:0] === 1'b1) ? src_1_V_12_reg_13666 : reg_1617);

assign select_ln380_39_fu_4169_p3 = ((icmp_ln378_reg_13040[0:0] === 1'b1) ? reg_1621 : src_1_V_13_reg_13685);

assign select_ln380_3_fu_2581_p3 = ((icmp_ln378_reg_13040[0:0] === 1'b1) ? reg_1573 : src_1_V_1_reg_13377);

assign select_ln380_40_fu_4175_p3 = ((icmp_ln378_reg_13040[0:0] === 1'b1) ? src_1_V_13_reg_13685 : reg_1621);

assign select_ln380_42_fu_4286_p3 = ((icmp_ln378_reg_13040[0:0] === 1'b1) ? reg_1625 : src_1_V_14_reg_13704);

assign select_ln380_43_fu_4292_p3 = ((icmp_ln378_reg_13040[0:0] === 1'b1) ? src_1_V_14_reg_13704 : reg_1625);

assign select_ln380_45_fu_4403_p3 = ((icmp_ln378_reg_13040[0:0] === 1'b1) ? reg_1629 : src_1_V_15_reg_13723);

assign select_ln380_46_fu_4409_p3 = ((icmp_ln378_reg_13040[0:0] === 1'b1) ? src_1_V_15_reg_13723 : reg_1629);

assign select_ln380_4_fu_2587_p3 = ((icmp_ln378_reg_13040[0:0] === 1'b1) ? src_1_V_1_reg_13377 : reg_1573);

assign select_ln380_6_fu_2698_p3 = ((icmp_ln378_reg_13040[0:0] === 1'b1) ? reg_1577 : src_1_V_2_reg_13396);

assign select_ln380_7_fu_2704_p3 = ((icmp_ln378_reg_13040[0:0] === 1'b1) ? src_1_V_2_reg_13396 : reg_1577);

assign select_ln380_9_fu_2815_p3 = ((icmp_ln378_reg_13040[0:0] === 1'b1) ? reg_1581 : src_1_V_3_reg_13415);

assign select_ln380_fu_2470_p3 = ((icmp_ln378_reg_13040[0:0] === 1'b1) ? dst_tensor_0_0_V_reg_13347 : select_ln375_reg_13358);

assign select_ln89_1_fu_11467_p3 = ((icmp_ln89_1_reg_16510[0:0] === 1'b1) ? zext_ln89_3_fu_11448_p1 : zext_ln89_2_fu_11445_p1);

assign select_ln89_2_fu_11474_p3 = ((icmp_ln89_1_reg_16510[0:0] === 1'b1) ? xor_ln89_fu_11454_p2 : zext_ln89_2_fu_11445_p1);

assign select_ln89_3_fu_11553_p3 = ((icmp_ln89_1_reg_16510_pp2_iter2_reg[0:0] === 1'b1) ? tmp_33_fu_11544_p4 : shl_ln89_1_reg_16518);

assign select_ln89_fu_11460_p3 = ((icmp_ln89_1_reg_16510[0:0] === 1'b1) ? zext_ln89_2_fu_11445_p1 : zext_ln89_3_fu_11448_p1);

assign sext_ln215_10_fu_7627_p1 = $signed(i_tensor_i_0_5_reg_15340);

assign sext_ln215_12_fu_8810_p1 = $signed(i_tensor_i_0_6_reg_15345_pp1_iter6_reg);

assign sext_ln215_14_fu_7639_p1 = $signed(i_tensor_i_0_7_reg_15350);

assign sext_ln215_16_fu_8819_p1 = $signed(i_tensor_i_0_8_reg_15355_pp1_iter6_reg);

assign sext_ln215_18_fu_7651_p1 = $signed(i_tensor_i_0_9_reg_15360);

assign sext_ln215_20_fu_8828_p1 = $signed(i_tensor_i_0_s_reg_15365_pp1_iter6_reg);

assign sext_ln215_22_fu_7663_p1 = $signed(i_tensor_i_0_10_reg_15370);

assign sext_ln215_24_fu_8837_p1 = $signed(i_tensor_i_0_11_reg_15375_pp1_iter6_reg);

assign sext_ln215_26_fu_7675_p1 = $signed(i_tensor_i_0_12_reg_15380);

assign sext_ln215_28_fu_8846_p1 = $signed(i_tensor_i_0_13_reg_15385_pp1_iter6_reg);

assign sext_ln215_2_fu_7603_p1 = $signed(i_tensor_i_0_1_reg_15320);

assign sext_ln215_30_fu_7687_p1 = $signed(i_tensor_i_0_14_reg_15390);

assign sext_ln215_4_fu_8792_p1 = $signed(i_tensor_i_0_2_reg_15325_pp1_iter6_reg);

assign sext_ln215_6_fu_7615_p1 = $signed(i_tensor_i_0_3_reg_15330);

assign sext_ln215_8_fu_8801_p1 = $signed(i_tensor_i_0_4_reg_15335_pp1_iter6_reg);

assign sext_ln215_fu_8783_p1 = $signed(trunc_ln647_3_reg_15315_pp1_iter6_reg);

assign sext_ln253_fu_4604_p1 = $signed(sub_ln253_reg_12928);

assign sext_ln265_fu_4847_p1 = select_ln262_reg_13972;

assign sext_ln343_fu_1879_p1 = $signed(sub_ln343_reg_12918);

assign sext_ln353_fu_2117_p1 = select_ln350_reg_13248;

assign sext_ln68_10_fu_11154_p1 = $signed(add_ln700_174_reg_16421);

assign sext_ln68_11_fu_11174_p1 = $signed(add_ln700_190_reg_16426);

assign sext_ln68_12_fu_11194_p1 = $signed(add_ln700_206_reg_16431);

assign sext_ln68_13_fu_11214_p1 = $signed(add_ln700_222_reg_16436);

assign sext_ln68_14_fu_11234_p1 = $signed(add_ln700_238_reg_16441);

assign sext_ln68_15_fu_11254_p1 = $signed(add_ln700_254_reg_16446);

assign sext_ln68_1_fu_10974_p1 = $signed(add_ln700_30_reg_16376);

assign sext_ln68_2_fu_10994_p1 = $signed(add_ln700_46_reg_16381);

assign sext_ln68_3_fu_11014_p1 = $signed(add_ln700_62_reg_16386);

assign sext_ln68_4_fu_11034_p1 = $signed(add_ln700_78_reg_16391);

assign sext_ln68_5_fu_11054_p1 = $signed(add_ln700_94_reg_16396);

assign sext_ln68_6_fu_11074_p1 = $signed(add_ln700_110_reg_16401);

assign sext_ln68_7_fu_11094_p1 = $signed(add_ln700_126_reg_16406);

assign sext_ln68_8_fu_11114_p1 = $signed(add_ln700_142_reg_16411);

assign sext_ln68_9_fu_11134_p1 = $signed(add_ln700_158_reg_16416);

assign sext_ln68_fu_10955_p1 = $signed(add_ln700_14_reg_16371);

assign sext_ln700_100_fu_10591_p1 = $signed(add_ln700_105_reg_16176);

assign sext_ln700_101_fu_9467_p1 = grp_fu_12108_p3;

assign sext_ln700_102_fu_9470_p1 = grp_fu_12117_p3;

assign sext_ln700_103_fu_10594_p1 = $signed(add_ln700_108_reg_16181);

assign sext_ln700_104_fu_10603_p1 = $signed(add_ln700_109_fu_10597_p2);

assign sext_ln700_106_fu_9527_p1 = grp_fu_12126_p3;

assign sext_ln700_107_fu_9530_p1 = grp_fu_12135_p3;

assign sext_ln700_108_fu_10613_p1 = $signed(add_ln700_114_reg_16186);

assign sext_ln700_109_fu_9539_p1 = grp_fu_12144_p3;

assign sext_ln700_10_fu_10363_p1 = $signed(add_ln700_9_reg_16056);

assign sext_ln700_110_fu_9542_p1 = grp_fu_12153_p3;

assign sext_ln700_111_fu_10616_p1 = $signed(add_ln700_117_reg_16191);

assign sext_ln700_112_fu_10625_p1 = $signed(add_ln700_118_fu_10619_p2);

assign sext_ln700_113_fu_9551_p1 = grp_fu_12162_p3;

assign sext_ln700_114_fu_9554_p1 = grp_fu_12171_p3;

assign sext_ln700_115_fu_10629_p1 = $signed(add_ln700_121_reg_16196);

assign sext_ln700_116_fu_9563_p1 = grp_fu_12180_p3;

assign sext_ln700_117_fu_9566_p1 = grp_fu_12189_p3;

assign sext_ln700_118_fu_10632_p1 = $signed(add_ln700_124_reg_16201);

assign sext_ln700_119_fu_10641_p1 = $signed(add_ln700_125_fu_10635_p2);

assign sext_ln700_11_fu_8891_p1 = grp_fu_11676_p3;

assign sext_ln700_121_fu_9623_p1 = grp_fu_12198_p3;

assign sext_ln700_122_fu_9626_p1 = grp_fu_12207_p3;

assign sext_ln700_123_fu_10651_p1 = $signed(add_ln700_130_reg_16206);

assign sext_ln700_124_fu_9635_p1 = grp_fu_12216_p3;

assign sext_ln700_125_fu_9638_p1 = grp_fu_12225_p3;

assign sext_ln700_126_fu_10654_p1 = $signed(add_ln700_133_reg_16211);

assign sext_ln700_127_fu_10663_p1 = $signed(add_ln700_134_fu_10657_p2);

assign sext_ln700_128_fu_9647_p1 = grp_fu_12234_p3;

assign sext_ln700_129_fu_9650_p1 = grp_fu_12243_p3;

assign sext_ln700_12_fu_8894_p1 = grp_fu_11685_p3;

assign sext_ln700_130_fu_10667_p1 = $signed(add_ln700_137_reg_16216);

assign sext_ln700_131_fu_9659_p1 = grp_fu_12252_p3;

assign sext_ln700_132_fu_9662_p1 = grp_fu_12261_p3;

assign sext_ln700_133_fu_10670_p1 = $signed(add_ln700_140_reg_16221);

assign sext_ln700_134_fu_10679_p1 = $signed(add_ln700_141_fu_10673_p2);

assign sext_ln700_136_fu_9719_p1 = grp_fu_12270_p3;

assign sext_ln700_137_fu_9722_p1 = grp_fu_12279_p3;

assign sext_ln700_138_fu_10689_p1 = $signed(add_ln700_146_reg_16226);

assign sext_ln700_139_fu_9731_p1 = grp_fu_12288_p3;

assign sext_ln700_13_fu_10366_p1 = $signed(add_ln700_12_reg_16061);

assign sext_ln700_140_fu_9734_p1 = grp_fu_12297_p3;

assign sext_ln700_141_fu_10692_p1 = $signed(add_ln700_149_reg_16231);

assign sext_ln700_142_fu_10701_p1 = $signed(add_ln700_150_fu_10695_p2);

assign sext_ln700_143_fu_9743_p1 = grp_fu_12306_p3;

assign sext_ln700_144_fu_9746_p1 = grp_fu_12315_p3;

assign sext_ln700_145_fu_10705_p1 = $signed(add_ln700_153_reg_16236);

assign sext_ln700_146_fu_9755_p1 = grp_fu_12324_p3;

assign sext_ln700_147_fu_9758_p1 = grp_fu_12333_p3;

assign sext_ln700_148_fu_10708_p1 = $signed(add_ln700_156_reg_16241);

assign sext_ln700_149_fu_10717_p1 = $signed(add_ln700_157_fu_10711_p2);

assign sext_ln700_14_fu_10375_p1 = $signed(add_ln700_13_fu_10369_p2);

assign sext_ln700_151_fu_9815_p1 = grp_fu_12342_p3;

assign sext_ln700_152_fu_9818_p1 = grp_fu_12351_p3;

assign sext_ln700_153_fu_10727_p1 = $signed(add_ln700_162_reg_16246);

assign sext_ln700_154_fu_9827_p1 = grp_fu_12360_p3;

assign sext_ln700_155_fu_9830_p1 = grp_fu_12369_p3;

assign sext_ln700_156_fu_10730_p1 = $signed(add_ln700_165_reg_16251);

assign sext_ln700_157_fu_10739_p1 = $signed(add_ln700_166_fu_10733_p2);

assign sext_ln700_158_fu_9839_p1 = grp_fu_12378_p3;

assign sext_ln700_159_fu_9842_p1 = grp_fu_12387_p3;

assign sext_ln700_160_fu_10743_p1 = $signed(add_ln700_169_reg_16256);

assign sext_ln700_161_fu_9851_p1 = grp_fu_12396_p3;

assign sext_ln700_162_fu_9854_p1 = grp_fu_12405_p3;

assign sext_ln700_163_fu_10746_p1 = $signed(add_ln700_172_reg_16261);

assign sext_ln700_164_fu_10755_p1 = $signed(add_ln700_173_fu_10749_p2);

assign sext_ln700_166_fu_9911_p1 = grp_fu_12414_p3;

assign sext_ln700_167_fu_9914_p1 = grp_fu_12423_p3;

assign sext_ln700_168_fu_10765_p1 = $signed(add_ln700_178_reg_16266);

assign sext_ln700_169_fu_9923_p1 = grp_fu_12432_p3;

assign sext_ln700_16_fu_8951_p1 = grp_fu_11694_p3;

assign sext_ln700_170_fu_9926_p1 = grp_fu_12441_p3;

assign sext_ln700_171_fu_10768_p1 = $signed(add_ln700_181_reg_16271);

assign sext_ln700_172_fu_10777_p1 = $signed(add_ln700_182_fu_10771_p2);

assign sext_ln700_173_fu_9935_p1 = grp_fu_12450_p3;

assign sext_ln700_174_fu_9938_p1 = grp_fu_12459_p3;

assign sext_ln700_175_fu_10781_p1 = $signed(add_ln700_185_reg_16276);

assign sext_ln700_176_fu_9947_p1 = grp_fu_12468_p3;

assign sext_ln700_177_fu_9950_p1 = grp_fu_12477_p3;

assign sext_ln700_178_fu_10784_p1 = $signed(add_ln700_188_reg_16281);

assign sext_ln700_179_fu_10793_p1 = $signed(add_ln700_189_fu_10787_p2);

assign sext_ln700_17_fu_8954_p1 = grp_fu_11703_p3;

assign sext_ln700_181_fu_10007_p1 = grp_fu_12486_p3;

assign sext_ln700_182_fu_10010_p1 = grp_fu_12495_p3;

assign sext_ln700_183_fu_10803_p1 = $signed(add_ln700_194_reg_16286);

assign sext_ln700_184_fu_10019_p1 = grp_fu_12504_p3;

assign sext_ln700_185_fu_10022_p1 = grp_fu_12513_p3;

assign sext_ln700_186_fu_10806_p1 = $signed(add_ln700_197_reg_16291);

assign sext_ln700_187_fu_10815_p1 = $signed(add_ln700_198_fu_10809_p2);

assign sext_ln700_188_fu_10031_p1 = grp_fu_12522_p3;

assign sext_ln700_189_fu_10034_p1 = grp_fu_12531_p3;

assign sext_ln700_18_fu_10385_p1 = $signed(add_ln700_18_reg_16066);

assign sext_ln700_190_fu_10819_p1 = $signed(add_ln700_201_reg_16296);

assign sext_ln700_191_fu_10043_p1 = grp_fu_12540_p3;

assign sext_ln700_192_fu_10046_p1 = grp_fu_12549_p3;

assign sext_ln700_193_fu_10822_p1 = $signed(add_ln700_204_reg_16301);

assign sext_ln700_194_fu_10831_p1 = $signed(add_ln700_205_fu_10825_p2);

assign sext_ln700_196_fu_10103_p1 = grp_fu_12558_p3;

assign sext_ln700_197_fu_10106_p1 = grp_fu_12567_p3;

assign sext_ln700_198_fu_10841_p1 = $signed(add_ln700_210_reg_16306);

assign sext_ln700_199_fu_10115_p1 = grp_fu_12576_p3;

assign sext_ln700_19_fu_8963_p1 = grp_fu_11712_p3;

assign sext_ln700_1_fu_8855_p1 = grp_fu_11622_p3;

assign sext_ln700_200_fu_10118_p1 = grp_fu_12585_p3;

assign sext_ln700_201_fu_10844_p1 = $signed(add_ln700_213_reg_16311);

assign sext_ln700_202_fu_10853_p1 = $signed(add_ln700_214_fu_10847_p2);

assign sext_ln700_203_fu_10127_p1 = grp_fu_12594_p3;

assign sext_ln700_204_fu_10130_p1 = grp_fu_12603_p3;

assign sext_ln700_205_fu_10857_p1 = $signed(add_ln700_217_reg_16316);

assign sext_ln700_206_fu_10139_p1 = grp_fu_12612_p3;

assign sext_ln700_207_fu_10142_p1 = grp_fu_12621_p3;

assign sext_ln700_208_fu_10860_p1 = $signed(add_ln700_220_reg_16321);

assign sext_ln700_209_fu_10869_p1 = $signed(add_ln700_221_fu_10863_p2);

assign sext_ln700_20_fu_8966_p1 = grp_fu_11721_p3;

assign sext_ln700_211_fu_10199_p1 = grp_fu_12630_p3;

assign sext_ln700_212_fu_10202_p1 = grp_fu_12639_p3;

assign sext_ln700_213_fu_10879_p1 = $signed(add_ln700_226_reg_16326);

assign sext_ln700_214_fu_10211_p1 = grp_fu_12648_p3;

assign sext_ln700_215_fu_10214_p1 = grp_fu_12657_p3;

assign sext_ln700_216_fu_10882_p1 = $signed(add_ln700_229_reg_16331);

assign sext_ln700_217_fu_10891_p1 = $signed(add_ln700_230_fu_10885_p2);

assign sext_ln700_218_fu_10223_p1 = grp_fu_12666_p3;

assign sext_ln700_219_fu_10226_p1 = grp_fu_12675_p3;

assign sext_ln700_21_fu_10388_p1 = $signed(add_ln700_21_reg_16071);

assign sext_ln700_220_fu_10895_p1 = $signed(add_ln700_233_reg_16336);

assign sext_ln700_221_fu_10235_p1 = grp_fu_12684_p3;

assign sext_ln700_222_fu_10238_p1 = grp_fu_12693_p3;

assign sext_ln700_223_fu_10898_p1 = $signed(add_ln700_236_reg_16341);

assign sext_ln700_224_fu_10907_p1 = $signed(add_ln700_237_fu_10901_p2);

assign sext_ln700_226_fu_10295_p1 = grp_fu_12702_p3;

assign sext_ln700_227_fu_10298_p1 = grp_fu_12711_p3;

assign sext_ln700_228_fu_10917_p1 = $signed(add_ln700_242_reg_16346);

assign sext_ln700_229_fu_10307_p1 = grp_fu_12720_p3;

assign sext_ln700_22_fu_10397_p1 = $signed(add_ln700_22_fu_10391_p2);

assign sext_ln700_230_fu_10310_p1 = grp_fu_12729_p3;

assign sext_ln700_231_fu_10920_p1 = $signed(add_ln700_245_reg_16351);

assign sext_ln700_232_fu_10929_p1 = $signed(add_ln700_246_fu_10923_p2);

assign sext_ln700_233_fu_10319_p1 = grp_fu_12738_p3;

assign sext_ln700_234_fu_10322_p1 = grp_fu_12747_p3;

assign sext_ln700_235_fu_10933_p1 = $signed(add_ln700_249_reg_16356);

assign sext_ln700_236_fu_10331_p1 = grp_fu_12756_p3;

assign sext_ln700_237_fu_10334_p1 = grp_fu_12765_p3;

assign sext_ln700_238_fu_10936_p1 = $signed(add_ln700_252_reg_16361);

assign sext_ln700_239_fu_10945_p1 = $signed(add_ln700_253_fu_10939_p2);

assign sext_ln700_23_fu_8975_p1 = grp_fu_11730_p3;

assign sext_ln700_24_fu_8978_p1 = grp_fu_11739_p3;

assign sext_ln700_25_fu_10401_p1 = $signed(add_ln700_25_reg_16076);

assign sext_ln700_26_fu_8987_p1 = grp_fu_11748_p3;

assign sext_ln700_27_fu_8990_p1 = grp_fu_11757_p3;

assign sext_ln700_28_fu_10404_p1 = $signed(add_ln700_28_reg_16081);

assign sext_ln700_29_fu_10413_p1 = $signed(add_ln700_29_fu_10407_p2);

assign sext_ln700_2_fu_8858_p1 = grp_fu_11631_p3;

assign sext_ln700_31_fu_9047_p1 = grp_fu_11766_p3;

assign sext_ln700_32_fu_9050_p1 = grp_fu_11775_p3;

assign sext_ln700_33_fu_10423_p1 = $signed(add_ln700_34_reg_16086);

assign sext_ln700_34_fu_9059_p1 = grp_fu_11784_p3;

assign sext_ln700_35_fu_9062_p1 = grp_fu_11793_p3;

assign sext_ln700_36_fu_10426_p1 = $signed(add_ln700_37_reg_16091);

assign sext_ln700_37_fu_10435_p1 = $signed(add_ln700_38_fu_10429_p2);

assign sext_ln700_38_fu_9071_p1 = grp_fu_11802_p3;

assign sext_ln700_39_fu_9074_p1 = grp_fu_11811_p3;

assign sext_ln700_3_fu_10347_p1 = $signed(add_ln700_2_reg_16046);

assign sext_ln700_40_fu_10439_p1 = $signed(add_ln700_41_reg_16096);

assign sext_ln700_41_fu_9083_p1 = grp_fu_11820_p3;

assign sext_ln700_42_fu_9086_p1 = grp_fu_11829_p3;

assign sext_ln700_43_fu_10442_p1 = $signed(add_ln700_44_reg_16101);

assign sext_ln700_44_fu_10451_p1 = $signed(add_ln700_45_fu_10445_p2);

assign sext_ln700_46_fu_9143_p1 = grp_fu_11838_p3;

assign sext_ln700_47_fu_9146_p1 = grp_fu_11847_p3;

assign sext_ln700_48_fu_10461_p1 = $signed(add_ln700_50_reg_16106);

assign sext_ln700_49_fu_9155_p1 = grp_fu_11856_p3;

assign sext_ln700_4_fu_8867_p1 = grp_fu_11640_p3;

assign sext_ln700_50_fu_9158_p1 = grp_fu_11865_p3;

assign sext_ln700_51_fu_10464_p1 = $signed(add_ln700_53_reg_16111);

assign sext_ln700_52_fu_10473_p1 = $signed(add_ln700_54_fu_10467_p2);

assign sext_ln700_53_fu_9167_p1 = grp_fu_11874_p3;

assign sext_ln700_54_fu_9170_p1 = grp_fu_11883_p3;

assign sext_ln700_55_fu_10477_p1 = $signed(add_ln700_57_reg_16116);

assign sext_ln700_56_fu_9179_p1 = grp_fu_11892_p3;

assign sext_ln700_57_fu_9182_p1 = grp_fu_11901_p3;

assign sext_ln700_58_fu_10480_p1 = $signed(add_ln700_60_reg_16121);

assign sext_ln700_59_fu_10489_p1 = $signed(add_ln700_61_fu_10483_p2);

assign sext_ln700_5_fu_8870_p1 = grp_fu_11649_p3;

assign sext_ln700_61_fu_9239_p1 = grp_fu_11910_p3;

assign sext_ln700_62_fu_9242_p1 = grp_fu_11919_p3;

assign sext_ln700_63_fu_10499_p1 = $signed(add_ln700_66_reg_16126);

assign sext_ln700_64_fu_9251_p1 = grp_fu_11928_p3;

assign sext_ln700_65_fu_9254_p1 = grp_fu_11937_p3;

assign sext_ln700_66_fu_10502_p1 = $signed(add_ln700_69_reg_16131);

assign sext_ln700_67_fu_10511_p1 = $signed(add_ln700_70_fu_10505_p2);

assign sext_ln700_68_fu_9263_p1 = grp_fu_11946_p3;

assign sext_ln700_69_fu_9266_p1 = grp_fu_11955_p3;

assign sext_ln700_6_fu_10350_p1 = $signed(add_ln700_5_reg_16051);

assign sext_ln700_70_fu_10515_p1 = $signed(add_ln700_73_reg_16136);

assign sext_ln700_71_fu_9275_p1 = grp_fu_11964_p3;

assign sext_ln700_72_fu_9278_p1 = grp_fu_11973_p3;

assign sext_ln700_73_fu_10518_p1 = $signed(add_ln700_76_reg_16141);

assign sext_ln700_74_fu_10527_p1 = $signed(add_ln700_77_fu_10521_p2);

assign sext_ln700_76_fu_9335_p1 = grp_fu_11982_p3;

assign sext_ln700_77_fu_9338_p1 = grp_fu_11991_p3;

assign sext_ln700_78_fu_10537_p1 = $signed(add_ln700_82_reg_16146);

assign sext_ln700_79_fu_9347_p1 = grp_fu_12000_p3;

assign sext_ln700_7_fu_10359_p1 = $signed(add_ln700_6_fu_10353_p2);

assign sext_ln700_80_fu_9350_p1 = grp_fu_12009_p3;

assign sext_ln700_81_fu_10540_p1 = $signed(add_ln700_85_reg_16151);

assign sext_ln700_82_fu_10549_p1 = $signed(add_ln700_86_fu_10543_p2);

assign sext_ln700_83_fu_9359_p1 = grp_fu_12018_p3;

assign sext_ln700_84_fu_9362_p1 = grp_fu_12027_p3;

assign sext_ln700_85_fu_10553_p1 = $signed(add_ln700_89_reg_16156);

assign sext_ln700_86_fu_9371_p1 = grp_fu_12036_p3;

assign sext_ln700_87_fu_9374_p1 = grp_fu_12045_p3;

assign sext_ln700_88_fu_10556_p1 = $signed(add_ln700_92_reg_16161);

assign sext_ln700_89_fu_10565_p1 = $signed(add_ln700_93_fu_10559_p2);

assign sext_ln700_8_fu_8879_p1 = grp_fu_11658_p3;

assign sext_ln700_91_fu_9431_p1 = grp_fu_12054_p3;

assign sext_ln700_92_fu_9434_p1 = grp_fu_12063_p3;

assign sext_ln700_93_fu_10575_p1 = $signed(add_ln700_98_reg_16166);

assign sext_ln700_94_fu_9443_p1 = grp_fu_12072_p3;

assign sext_ln700_95_fu_9446_p1 = grp_fu_12081_p3;

assign sext_ln700_96_fu_10578_p1 = $signed(add_ln700_101_reg_16171);

assign sext_ln700_97_fu_10587_p1 = $signed(add_ln700_102_fu_10581_p2);

assign sext_ln700_98_fu_9455_p1 = grp_fu_12090_p3;

assign sext_ln700_99_fu_9458_p1 = grp_fu_12099_p3;

assign sext_ln700_9_fu_8882_p1 = grp_fu_11667_p3;

assign shl_ln790_10_fu_3861_p2 = reg_1609 << zext_ln556_20_fu_3858_p1;

assign shl_ln790_11_fu_3978_p2 = reg_1613 << zext_ln556_22_fu_3975_p1;

assign shl_ln790_12_fu_4095_p2 = reg_1617 << zext_ln556_24_fu_4092_p1;

assign shl_ln790_13_fu_4212_p2 = reg_1621 << zext_ln556_26_fu_4209_p1;

assign shl_ln790_14_fu_4329_p2 = reg_1625 << zext_ln556_28_fu_4326_p1;

assign shl_ln790_15_fu_4446_p2 = reg_1629 << zext_ln556_30_fu_4443_p1;

assign shl_ln790_1_fu_2624_p2 = reg_1573 << zext_ln556_2_fu_2621_p1;

assign shl_ln790_2_fu_2741_p2 = reg_1577 << zext_ln556_4_fu_2738_p1;

assign shl_ln790_3_fu_2858_p2 = reg_1581 << zext_ln556_6_fu_2855_p1;

assign shl_ln790_4_fu_2975_p2 = reg_1585 << zext_ln556_8_fu_2972_p1;

assign shl_ln790_5_fu_3092_p2 = reg_1589 << zext_ln556_10_fu_3089_p1;

assign shl_ln790_6_fu_3209_p2 = reg_1593 << zext_ln556_12_fu_3206_p1;

assign shl_ln790_7_fu_3326_p2 = reg_1597 << zext_ln556_14_fu_3323_p1;

assign shl_ln790_8_fu_3627_p2 = reg_1601 << zext_ln556_16_fu_3624_p1;

assign shl_ln790_9_fu_3744_p2 = reg_1605 << zext_ln556_18_fu_3741_p1;

assign shl_ln790_fu_2510_p2 = dst_tensor_0_0_V_reg_13347 << zext_ln556_fu_2507_p1;

assign shl_ln89_1_fu_11499_p2 = zext_ln89_4_fu_11451_p1 << zext_ln89_5_fu_11487_p1;

assign shl_ln89_2_fu_11426_p3 = {{trunc_ln89_1_reg_16489}, {6'd0}};

assign shl_ln89_3_fu_11505_p2 = 512'd13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084095 << zext_ln89_6_fu_11491_p1;

assign shl_ln89_4_fu_11534_p2 = 64'd255 << zext_ln89_8_fu_11530_p1;

assign shl_ln89_fu_11386_p2 = sram_idx_V_assign_0_reg_1264 << 16'd3;

assign shl_ln_fu_1847_p3 = {{grp_fu_1337_p4}, {3'd0}};

assign smax18_cast_fu_1737_p1 = smax18_fu_1729_p3;

assign smax18_fu_1729_p3 = ((empty_20_fu_1723_p2[0:0] === 1'b1) ? zext_ln350_3_fu_1719_p1 : grp_fu_1327_p4);

assign smax_cast_fu_1775_p1 = smax_fu_1767_p3;

assign smax_fu_1767_p3 = ((empty_18_fu_1761_p2[0:0] === 1'b1) ? zext_ln262_3_fu_1757_p1 : grp_fu_1327_p4);

assign src_1_V_10_fu_3425_p3 = ((tmp_12_reg_13020[0:0] === 1'b1) ? src_1_V_reg_13076 : p_Result_11_5_reg_13317);

assign src_1_V_11_fu_3440_p3 = ((tmp_12_reg_13020[0:0] === 1'b1) ? src_1_V_reg_13076 : p_Result_11_5_1_reg_13322);

assign src_1_V_12_fu_3455_p3 = ((tmp_12_reg_13020[0:0] === 1'b1) ? src_1_V_reg_13076 : p_Result_11_6_reg_13327);

assign src_1_V_13_fu_3470_p3 = ((tmp_12_reg_13020[0:0] === 1'b1) ? src_1_V_reg_13076 : p_Result_11_6_1_reg_13332);

assign src_1_V_14_fu_3485_p3 = ((tmp_12_reg_13020[0:0] === 1'b1) ? src_1_V_reg_13076 : p_Result_11_7_reg_13337);

assign src_1_V_15_fu_3500_p3 = ((tmp_12_reg_13020[0:0] === 1'b1) ? src_1_V_reg_13076 : p_Result_11_7_1_reg_13342);

assign src_1_V_1_fu_2330_p3 = ((tmp_12_reg_13020[0:0] === 1'b1) ? src_1_V_reg_13076 : p_Result_11_0_1_fu_2160_p4);

assign src_1_V_2_fu_2346_p3 = ((tmp_12_reg_13020[0:0] === 1'b1) ? src_1_V_reg_13076 : p_Result_11_1_fu_2170_p4);

assign src_1_V_3_fu_2362_p3 = ((tmp_12_reg_13020[0:0] === 1'b1) ? src_1_V_reg_13076 : p_Result_11_1_1_fu_2180_p4);

assign src_1_V_4_fu_2378_p3 = ((tmp_12_reg_13020[0:0] === 1'b1) ? src_1_V_reg_13076 : p_Result_11_2_fu_2190_p4);

assign src_1_V_5_fu_2394_p3 = ((tmp_12_reg_13020[0:0] === 1'b1) ? src_1_V_reg_13076 : p_Result_11_2_1_fu_2200_p4);

assign src_1_V_6_fu_2410_p3 = ((tmp_12_reg_13020[0:0] === 1'b1) ? src_1_V_reg_13076 : p_Result_11_3_fu_2210_p4);

assign src_1_V_7_fu_2426_p3 = ((tmp_12_reg_13020[0:0] === 1'b1) ? src_1_V_reg_13076 : p_Result_11_3_1_fu_2220_p4);

assign src_1_V_8_fu_3395_p3 = ((tmp_12_reg_13020[0:0] === 1'b1) ? src_1_V_reg_13076 : p_Result_11_4_reg_13307);

assign src_1_V_9_fu_3410_p3 = ((tmp_12_reg_13020[0:0] === 1'b1) ? src_1_V_reg_13076 : p_Result_11_4_1_reg_13312);

assign src_1_V_fu_1954_p1 = $signed(trunc_ln375_1_fu_1945_p4);

assign src_idx_V_1_fu_2143_p2 = (zext_ln209_4_fu_2139_p1 + select_ln348_1_reg_13260);

assign src_idx_V_fu_4868_p2 = (zext_ln209_1_fu_4864_p1 + select_ln259_1_reg_13983_pp1_iter2_reg);

assign src_offset_in_V_4_fu_4800_p2 = (select_ln254_1_fu_4766_p3 + zext_ln700_3_reg_13889);

assign src_offset_in_V_5_fu_2075_p2 = (select_ln344_1_fu_2027_p3 + zext_ln700_8_reg_13101);

assign sub_ln253_fu_1779_p2 = (smax_cast_fu_1775_p1 - zext_ln262_2_fu_1753_p1);

assign sub_ln343_fu_1741_p2 = (smax18_cast_fu_1737_p1 - zext_ln350_2_fu_1715_p1);

assign sub_ln461_10_fu_3434_p2 = (5'd0 - trunc_ln647_64_fu_3430_p1);

assign sub_ln461_11_fu_3449_p2 = (5'd0 - trunc_ln647_68_fu_3445_p1);

assign sub_ln461_12_fu_3464_p2 = (5'd0 - trunc_ln647_72_fu_3460_p1);

assign sub_ln461_13_fu_3479_p2 = (5'd0 - trunc_ln647_76_fu_3475_p1);

assign sub_ln461_14_fu_3494_p2 = (5'd0 - trunc_ln647_80_fu_3490_p1);

assign sub_ln461_15_fu_3509_p2 = (5'd0 - trunc_ln647_84_fu_3505_p1);

assign sub_ln461_1_fu_2340_p2 = (5'd0 - trunc_ln647_28_fu_2336_p1);

assign sub_ln461_2_fu_2356_p2 = (5'd0 - trunc_ln647_32_fu_2352_p1);

assign sub_ln461_3_fu_2372_p2 = (5'd0 - trunc_ln647_36_fu_2368_p1);

assign sub_ln461_4_fu_2388_p2 = (5'd0 - trunc_ln647_40_fu_2384_p1);

assign sub_ln461_5_fu_2404_p2 = (5'd0 - trunc_ln647_44_fu_2400_p1);

assign sub_ln461_6_fu_2420_p2 = (5'd0 - trunc_ln647_48_fu_2416_p1);

assign sub_ln461_7_fu_2436_p2 = (5'd0 - trunc_ln647_52_fu_2432_p1);

assign sub_ln461_8_fu_3404_p2 = (5'd0 - trunc_ln647_56_fu_3400_p1);

assign sub_ln461_9_fu_3419_p2 = (5'd0 - trunc_ln647_60_fu_3415_p1);

assign sub_ln461_fu_2324_p2 = (5'd0 - trunc_ln647_24_fu_2320_p1);

assign tmp_14_fu_4576_p17 = {{{{{{{{{{{{{{{{dst_tensor_0_15_V_6_reg_13817}, {dst_tensor_0_14_V_6_reg_13807}}, {dst_tensor_0_13_V_6_reg_13797}}, {dst_tensor_0_12_V_6_reg_13787}}, {dst_tensor_0_11_V_6_reg_13777}}, {dst_tensor_0_10_V_6_reg_13767}}, {dst_tensor_0_9_V_6_reg_13757}}, {dst_tensor_0_8_V_6_reg_13747}}, {dst_tensor_0_7_V_6_reg_13585_pp0_iter3_reg}}, {dst_tensor_0_6_V_6_reg_13575_pp0_iter3_reg}}, {dst_tensor_0_5_V_6_reg_13565_pp0_iter3_reg}}, {dst_tensor_0_4_V_6_reg_13555_pp0_iter3_reg}}, {dst_tensor_0_3_V_6_reg_13545_pp0_iter3_reg}}, {dst_tensor_0_2_V_6_reg_13535_pp0_iter3_reg}}, {dst_tensor_0_1_V_6_reg_13525_pp0_iter3_reg}}, {dst_tensor_0_0_V_6_reg_13515_pp0_iter3_reg}};

assign tmp_15_fu_4555_p17 = {{{{{{{{{{{{{{{{o_tensor_0_15_V_9_reg_13812}, {o_tensor_0_14_V_9_reg_13802}}, {o_tensor_0_13_V_9_reg_13792}}, {o_tensor_0_12_V_9_reg_13782}}, {o_tensor_0_11_V_9_reg_13772}}, {o_tensor_0_10_V_9_reg_13762}}, {o_tensor_0_9_V_9_reg_13752}}, {o_tensor_0_8_V_9_reg_13742}}, {o_tensor_0_7_V_9_reg_13580}}, {o_tensor_0_6_V_9_reg_13570}}, {o_tensor_0_5_V_9_reg_13560}}, {o_tensor_0_4_V_10_reg_13550}}, {o_tensor_0_3_V_10_reg_13540}}, {o_tensor_0_2_V_10_reg_13530}}, {o_tensor_0_1_V_10_reg_13520}}, {o_tensor_0_0_V_10_reg_13510}};

assign tmp_16_fu_1974_p3 = tmp_V_reg_12779[32'd109];

assign tmp_17_fu_2500_p3 = select_ln375_reg_13358[32'd4];

assign tmp_18_fu_2614_p3 = src_1_V_1_reg_13377[32'd4];

assign tmp_19_fu_2731_p3 = src_1_V_2_reg_13396[32'd4];

assign tmp_20_fu_2848_p3 = src_1_V_3_reg_13415[32'd4];

assign tmp_21_fu_2965_p3 = src_1_V_4_reg_13434[32'd4];

assign tmp_22_fu_3082_p3 = src_1_V_5_reg_13453[32'd4];

assign tmp_23_fu_3199_p3 = src_1_V_6_reg_13472[32'd4];

assign tmp_24_fu_3316_p3 = src_1_V_7_reg_13491[32'd4];

assign tmp_25_fu_3617_p3 = src_1_V_8_reg_13590[32'd4];

assign tmp_26_fu_3734_p3 = src_1_V_9_reg_13609[32'd4];

assign tmp_27_fu_3851_p3 = src_1_V_10_reg_13628[32'd4];

assign tmp_28_fu_3968_p3 = src_1_V_11_reg_13647[32'd4];

assign tmp_29_fu_4085_p3 = src_1_V_12_reg_13666[32'd4];

assign tmp_2_fu_1647_p4 = {{uops_V[31:2]}};

assign tmp_30_fu_4202_p3 = src_1_V_13_reg_13685[32'd4];

assign tmp_31_fu_4319_p3 = src_1_V_14_reg_13704[32'd4];

assign tmp_32_fu_4436_p3 = src_1_V_15_reg_13723[32'd4];

integer ap_tvar_int_0;

always @ (shl_ln89_1_reg_16518) begin
    for (ap_tvar_int_0 = 512 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 511 - 0) begin
            tmp_33_fu_11544_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_33_fu_11544_p4[ap_tvar_int_0] = shl_ln89_1_reg_16518[511 - ap_tvar_int_0];
        end
    end
end

assign tmp_34_fu_11523_p3 = {{trunc_ln89_1_reg_16489_pp2_iter1_reg}, {3'd0}};

assign tmp_35_fu_4597_p3 = tmp_V_reg_12779[32'd5];

assign tmp_36_fu_11615_p3 = tmp_V_reg_12779[32'd6];

assign tmp_4_fu_1671_p3 = gemm_queue_V_V_TDATA_int[32'd3];

assign tmp_6_fu_1679_p3 = gemm_queue_V_V_TDATA_int[32'd4];

assign tmp_8_fu_11274_p17 = {{{{{{{{{{{{{{{{a_tensor_0_15_V_1_fu_11263_p3}, {a_tensor_0_14_V_1_fu_11243_p3}}, {a_tensor_0_13_V_1_fu_11223_p3}}, {a_tensor_0_12_V_1_fu_11203_p3}}, {a_tensor_0_11_V_1_fu_11183_p3}}, {select_ln304_5_fu_11163_p3}}, {select_ln304_4_fu_11143_p3}}, {select_ln304_3_fu_11123_p3}}, {select_ln304_2_fu_11103_p3}}, {select_ln304_1_fu_11083_p3}}, {select_ln304_fu_11063_p3}}, {a_tensor_0_4_V_1_fu_11043_p3}}, {a_tensor_0_3_V_1_fu_11023_p3}}, {a_tensor_0_2_V_1_fu_11003_p3}}, {a_tensor_0_1_V_1_fu_10983_p3}}, {a_tensor_0_0_V_1_fu_10963_p3}};

assign tmp_9_fu_11311_p17 = {{{{{{{{{{{{{{{{trunc_ln647_20_fu_11270_p1}, {trunc_ln647_19_fu_11250_p1}}, {trunc_ln647_18_fu_11230_p1}}, {trunc_ln647_17_fu_11210_p1}}, {trunc_ln647_16_fu_11190_p1}}, {trunc_ln647_15_fu_11170_p1}}, {trunc_ln647_14_fu_11150_p1}}, {trunc_ln647_13_fu_11130_p1}}, {trunc_ln647_12_fu_11110_p1}}, {trunc_ln647_11_fu_11090_p1}}, {trunc_ln647_10_fu_11070_p1}}, {o_tensor_0_4_V_1_fu_11050_p1}}, {o_tensor_0_3_V_1_fu_11030_p1}}, {o_tensor_0_2_V_1_fu_11010_p1}}, {o_tensor_0_1_V_1_fu_10990_p1}}, {o_tensor_0_0_V_1_fu_10970_p1}};

assign tmp_fu_1633_p4 = {{biases_V[31:3]}};

assign trunc_ln375_1_fu_1945_p4 = {{tmp_V_reg_12779[126:111]}};

assign trunc_ln3_fu_1811_p4 = {{gemm_queue_V_V_TDATA_int[8:7]}};

assign trunc_ln470_fu_1687_p1 = gemm_queue_V_V_TDATA_int[2:0];

assign trunc_ln480_fu_11602_p1 = phi_ln480_reg_1306[14:0];

assign trunc_ln647_10_fu_11070_p1 = add_ln700_95_fu_11057_p2[7:0];

assign trunc_ln647_11_fu_11090_p1 = add_ln700_111_fu_11077_p2[7:0];

assign trunc_ln647_12_fu_11110_p1 = add_ln700_127_fu_11097_p2[7:0];

assign trunc_ln647_13_fu_11130_p1 = add_ln700_143_fu_11117_p2[7:0];

assign trunc_ln647_14_fu_11150_p1 = add_ln700_159_fu_11137_p2[7:0];

assign trunc_ln647_15_fu_11170_p1 = add_ln700_175_fu_11157_p2[7:0];

assign trunc_ln647_16_fu_11190_p1 = add_ln700_191_fu_11177_p2[7:0];

assign trunc_ln647_17_fu_11210_p1 = add_ln700_207_fu_11197_p2[7:0];

assign trunc_ln647_18_fu_11230_p1 = add_ln700_223_fu_11217_p2[7:0];

assign trunc_ln647_19_fu_11250_p1 = add_ln700_239_fu_11237_p2[7:0];

assign trunc_ln647_1_fu_4901_p1 = wgt_mem_0_V_Dout_A[7:0];

assign trunc_ln647_20_fu_11270_p1 = add_ln700_255_fu_11257_p2[7:0];

assign trunc_ln647_21_fu_2126_p1 = uop_mem_V_q0[10:0];

assign trunc_ln647_22_fu_2156_p1 = acc_mem_V_q0[31:0];

assign trunc_ln647_24_fu_2320_p1 = select_ln375_fu_2314_p3[4:0];

assign trunc_ln647_28_fu_2336_p1 = src_1_V_1_fu_2330_p3[4:0];

assign trunc_ln647_2_fu_4975_p1 = wgt_mem_1_V_Dout_A[7:0];

assign trunc_ln647_32_fu_2352_p1 = src_1_V_2_fu_2346_p3[4:0];

assign trunc_ln647_36_fu_2368_p1 = src_1_V_3_fu_2362_p3[4:0];

assign trunc_ln647_3_fu_7449_p1 = inp_mem_V_Dout_A[7:0];

assign trunc_ln647_40_fu_2384_p1 = src_1_V_4_fu_2378_p3[4:0];

assign trunc_ln647_44_fu_2400_p1 = src_1_V_5_fu_2394_p3[4:0];

assign trunc_ln647_48_fu_2416_p1 = src_1_V_6_fu_2410_p3[4:0];

assign trunc_ln647_52_fu_2432_p1 = src_1_V_7_fu_2426_p3[4:0];

assign trunc_ln647_56_fu_3400_p1 = src_1_V_8_fu_3395_p3[4:0];

assign trunc_ln647_60_fu_3415_p1 = src_1_V_9_fu_3410_p3[4:0];

assign trunc_ln647_64_fu_3430_p1 = src_1_V_10_fu_3425_p3[4:0];

assign trunc_ln647_68_fu_3445_p1 = src_1_V_11_fu_3440_p3[4:0];

assign trunc_ln647_72_fu_3460_p1 = src_1_V_12_fu_3455_p3[4:0];

assign trunc_ln647_76_fu_3475_p1 = src_1_V_13_fu_3470_p3[4:0];

assign trunc_ln647_80_fu_3490_p1 = src_1_V_14_fu_3485_p3[4:0];

assign trunc_ln647_84_fu_3505_p1 = src_1_V_15_fu_3500_p3[4:0];

assign trunc_ln647_fu_4851_p1 = uop_mem_V_q0[10:0];

assign trunc_ln700_4_fu_4678_p4 = {{tmp_V_reg_12779[117:108]}};

assign trunc_ln89_1_fu_11422_p1 = phi_ln89_reg_1295[2:0];

assign trunc_ln89_fu_11403_p1 = phi_ln89_reg_1295[15:0];

assign trunc_ln8_fu_4657_p4 = {{tmp_V_reg_12779[127:118]}};

assign trunc_ln_fu_1924_p4 = {{tmp_V_reg_12779[109:108]}};

assign uop_port_ARLEN = grp_fu_1337_p4;

assign upc_1_fu_4841_p2 = ($signed(32'd1) + $signed(select_ln262_fu_4810_p3));

assign upc_3_fu_2121_p2 = ($signed(32'd1) + $signed(select_ln350_reg_13248));

assign wgt_idx_V_fu_4887_p2 = (zext_ln209_2_fu_4883_p1 + select_ln259_2_reg_13989_pp1_iter2_reg);

assign wgt_mem_0_V_Addr_A = wgt_mem_0_V_Addr_A_orig << 32'd7;

assign wgt_mem_0_V_Addr_A_orig = zext_ln544_fu_4892_p1;

assign wgt_mem_0_V_Clk_A = ap_clk;

assign wgt_mem_0_V_Din_A = 1024'd0;

assign wgt_mem_0_V_Rst_A = ap_rst_n_inv;

assign wgt_mem_0_V_WEN_A = 128'd0;

assign wgt_mem_1_V_Addr_A = wgt_mem_1_V_Addr_A_orig << 32'd7;

assign wgt_mem_1_V_Addr_A_orig = zext_ln544_fu_4892_p1;

assign wgt_mem_1_V_Clk_A = ap_clk;

assign wgt_mem_1_V_Din_A = 1024'd0;

assign wgt_mem_1_V_Rst_A = ap_rst_n_inv;

assign wgt_mem_1_V_WEN_A = 128'd0;

assign wgt_offset_in_V_2_fu_4805_p2 = (select_ln254_2_fu_4772_p3 + zext_ln700_reg_13894);

assign xor_ln89_1_fu_11481_p2 = (select_ln89_fu_11460_p3 ^ 10'd511);

assign xor_ln89_fu_11454_p2 = (zext_ln89_2_fu_11445_p1 ^ 10'd511);

assign y_fu_11353_p2 = (i_op_assign_reg_1284 + 16'd1);

assign zext_ln1352_fu_11367_p1 = ret_V_fu_11359_p3;

assign zext_ln209_1_fu_4864_p1 = grp_fu_1401_p4;

assign zext_ln209_2_fu_4883_p1 = p_Result_2_fu_4873_p4;

assign zext_ln209_3_fu_2130_p1 = trunc_ln647_21_fu_2126_p1;

assign zext_ln209_4_fu_2139_p1 = grp_fu_1401_p4;

assign zext_ln209_fu_4855_p1 = trunc_ln647_fu_4851_p1;

assign zext_ln262_1_fu_4638_p1 = reg_1565;

assign zext_ln262_2_fu_1753_p1 = grp_fu_1317_p4;

assign zext_ln262_3_fu_1757_p1 = grp_fu_1317_p4;

assign zext_ln262_fu_4634_p1 = reg_1561;

assign zext_ln350_1_fu_1913_p1 = reg_1565;

assign zext_ln350_2_fu_1715_p1 = grp_fu_1317_p4;

assign zext_ln350_3_fu_1719_p1 = grp_fu_1317_p4;

assign zext_ln350_fu_1909_p1 = reg_1561;

assign zext_ln480_2_fu_1869_p1 = add_ln480_1_fu_1863_p2;

assign zext_ln480_3_fu_11611_p1 = add_ln480_2_reg_16563_pp3_iter1_reg;

assign zext_ln480_fu_1859_p1 = dram_idx_V_fu_1801_p4;

assign zext_ln544_1_fu_4897_p1 = src_idx_V_reg_14010;

assign zext_ln544_2_fu_8779_p1 = dst_idx_V_reg_14005_pp1_iter6_reg;

assign zext_ln544_3_fu_2148_p1 = src_idx_V_1_reg_13286;

assign zext_ln544_4_fu_2152_p1 = dst_idx_V_1_reg_13281;

assign zext_ln544_fu_4892_p1 = wgt_idx_V_reg_14015;

assign zext_ln556_10_fu_3089_p1 = sub_ln461_5_reg_13467;

assign zext_ln556_11_fu_3098_p1 = trunc_ln647_44_reg_13462;

assign zext_ln556_12_fu_3206_p1 = sub_ln461_6_reg_13486;

assign zext_ln556_13_fu_3215_p1 = trunc_ln647_48_reg_13481;

assign zext_ln556_14_fu_3323_p1 = sub_ln461_7_reg_13505;

assign zext_ln556_15_fu_3332_p1 = trunc_ln647_52_reg_13500;

assign zext_ln556_16_fu_3624_p1 = sub_ln461_8_reg_13604;

assign zext_ln556_17_fu_3633_p1 = trunc_ln647_56_reg_13599;

assign zext_ln556_18_fu_3741_p1 = sub_ln461_9_reg_13623;

assign zext_ln556_19_fu_3750_p1 = trunc_ln647_60_reg_13618;

assign zext_ln556_1_fu_2515_p1 = trunc_ln647_24_reg_13367;

assign zext_ln556_20_fu_3858_p1 = sub_ln461_10_reg_13642;

assign zext_ln556_21_fu_3867_p1 = trunc_ln647_64_reg_13637;

assign zext_ln556_22_fu_3975_p1 = sub_ln461_11_reg_13661;

assign zext_ln556_23_fu_3984_p1 = trunc_ln647_68_reg_13656;

assign zext_ln556_24_fu_4092_p1 = sub_ln461_12_reg_13680;

assign zext_ln556_25_fu_4101_p1 = trunc_ln647_72_reg_13675;

assign zext_ln556_26_fu_4209_p1 = sub_ln461_13_reg_13699;

assign zext_ln556_27_fu_4218_p1 = trunc_ln647_76_reg_13694;

assign zext_ln556_28_fu_4326_p1 = sub_ln461_14_reg_13718;

assign zext_ln556_29_fu_4335_p1 = trunc_ln647_80_reg_13713;

assign zext_ln556_2_fu_2621_p1 = sub_ln461_1_reg_13391;

assign zext_ln556_30_fu_4443_p1 = sub_ln461_15_reg_13737;

assign zext_ln556_31_fu_4452_p1 = trunc_ln647_84_reg_13732;

assign zext_ln556_3_fu_2630_p1 = trunc_ln647_28_reg_13386;

assign zext_ln556_4_fu_2738_p1 = sub_ln461_2_reg_13410;

assign zext_ln556_5_fu_2747_p1 = trunc_ln647_32_reg_13405;

assign zext_ln556_6_fu_2855_p1 = sub_ln461_3_reg_13429;

assign zext_ln556_7_fu_2864_p1 = trunc_ln647_36_reg_13424;

assign zext_ln556_8_fu_2972_p1 = sub_ln461_4_reg_13448;

assign zext_ln556_9_fu_2981_p1 = trunc_ln647_40_reg_13443;

assign zext_ln556_fu_2507_p1 = sub_ln461_reg_13372;

assign zext_ln700_10_fu_1970_p1 = grp_fu_1392_p4;

assign zext_ln700_1_fu_1843_p1 = mask_fu_1661_p4;

assign zext_ln700_2_fu_4649_p1 = grp_fu_1365_p4;

assign zext_ln700_3_fu_4653_p1 = grp_fu_1374_p4;

assign zext_ln700_4_fu_4670_p1 = grp_fu_1383_p4;

assign zext_ln700_5_fu_4674_p1 = grp_fu_1392_p4;

assign zext_ln700_6_fu_4687_p1 = trunc_ln700_4_fu_4678_p4;

assign zext_ln700_7_fu_1958_p1 = grp_fu_1365_p4;

assign zext_ln700_8_fu_1962_p1 = grp_fu_1374_p4;

assign zext_ln700_9_fu_1966_p1 = grp_fu_1383_p4;

assign zext_ln700_fu_4666_p1 = trunc_ln8_fu_4657_p4;

assign zext_ln88_fu_11376_p1 = add_ln88_reg_16459;

assign zext_ln89_1_fu_11540_p1 = lshr_ln2_reg_16484_pp2_iter2_reg;

assign zext_ln89_2_fu_11445_p1 = shl_ln89_2_reg_16500;

assign zext_ln89_3_fu_11448_p1 = empty_16_reg_16505;

assign zext_ln89_4_fu_11451_p1 = data_port_addr_read_reg_16495;

assign zext_ln89_5_fu_11487_p1 = select_ln89_2_fu_11474_p3;

assign zext_ln89_6_fu_11491_p1 = select_ln89_1_fu_11467_p3;

assign zext_ln89_7_fu_11495_p1 = xor_ln89_1_fu_11481_p2;

assign zext_ln89_8_fu_11530_p1 = tmp_34_fu_11523_p3;

assign zext_ln89_fu_1855_p1 = shl_ln_fu_1847_p3;

always @ (posedge ap_clk) begin
    p_cast37_reg_12774[35:29] <= 7'b0000000;
    zext_ln700_1_reg_12961[31:16] <= 16'b0000000000000000;
    shl_ln_reg_12966[2:0] <= 3'b000;
    zext_ln89_reg_12971[2:0] <= 3'b000;
    zext_ln89_reg_12971[31:19] <= 13'b0000000000000;
    zext_ln350_reg_13008[31:13] <= 19'b0000000000000000000;
    zext_ln350_1_reg_13015[31:14] <= 18'b000000000000000000;
    zext_ln700_7_reg_13096[11] <= 1'b0;
    zext_ln700_8_reg_13101[11] <= 1'b0;
    zext_ln700_9_reg_13106[11] <= 1'b0;
    zext_ln700_10_reg_13111[11] <= 1'b0;
    zext_ln544_4_reg_13296[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln544_4_reg_13296_pp0_iter2_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln262_reg_13852[31:13] <= 19'b0000000000000000000;
    zext_ln262_1_reg_13859[31:14] <= 18'b000000000000000000;
    zext_ln700_2_reg_13884[11] <= 1'b0;
    zext_ln700_3_reg_13889[11] <= 1'b0;
    zext_ln700_reg_13894[10] <= 1'b0;
    zext_ln700_4_reg_13899[11] <= 1'b0;
    zext_ln700_5_reg_13904[11] <= 1'b0;
    zext_ln700_6_reg_13909[10] <= 1'b0;
    zext_ln544_2_reg_16035[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln544_2_reg_16035_pp1_iter8_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    shl_ln89_reg_16470[2:0] <= 3'b000;
    shl_ln89_2_reg_16500[5:0] <= 6'b000000;
    empty_16_reg_16505[5:0] <= 6'b111111;
end

endmodule //compute
